%!PS-Adobe-2.0
%%Creator: dvips(k) 5.90a Copyright 2002 Radical Eye Software
%%Title: CCandRCP.dvi
%%Pages: 6
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%DocumentFonts: Times-Bold Helvetica Times-Italic Times-Roman Courier
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: DVIPS.EXE -V -h texc.pro -h gastex.pro -h special.pro
%+ CCandRCP
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2010.03.01:2325
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: gastex.pro
%!
TeXDict begin
/!BP{ 72 72.27 div dup scale } def /!smartarct { /!r exch def /!y2
exch def /!x2 exch def /!y1 exch def /!x1 exch def currentpoint /!y0
exch def /!x0 exch def /!d0 !y0 !y1 sub dup mul !x0 !x1 sub dup mul
add sqrt def /!d2 !y2 !y1 sub dup mul !x2 !x1 sub dup mul add sqrt
def !d0 !d2 add 0 gt { !d0 !d2 le { /!xp !x1 !x2 !x1 sub !d0 mul !d2
div add def /!yp !y1 !y2 !y1 sub !d0 mul !d2 div add def /!d !yp !y0
sub dup mul !xp !x0 sub dup mul add sqrt 2 div def } { /!xp !x1 !x0
!x1 sub !d2 mul !d0 div add def /!yp !y1 !y0 !y1 sub !d2 mul !d0 div
add def /!d !yp !y2 sub dup mul !xp !x2 sub dup mul add sqrt 2 div
def } ifelse } { /!d 0 def } ifelse !d !r lt { /!r !d def } if !x1
!y1 !x2 !y2 !r arct } def /!psarrow { gsave 2 copy translate 3 -1 roll
sub neg /!y exch def sub /!x exch def !x 0 eq !y 0 eq and {/!x 1 def}
if !y !x atan rotate /L2 exch def /L1 exch def /ang exch def /dist
exch def /nb exch def 1 1 nb { pop L2 0 eq { newpath L1 ang cos mul
L1 ang sin mul 2 copy moveto 0 0 lineto neg lineto stroke } { newpath
0 0 moveto L1 ang cos mul L1 ang sin mul 2 copy lineto L2 0 lineto
neg lineto closepath fill } ifelse dist 0 translate } for grestore
} def /!psvect { /y exch def /x exch def newpath 0 0 moveto x y lineto
stroke 0 0 x y !psarrow x y 0 0 !psarrow } def /!pslines { /ra exch
def /n exch def /yn exch def /xn exch def /yn_1 exch def /xn_1 exch
def /x xn def /y yn def /xx xn_1 def /yy yn_1 def newpath xn yn moveto
3 1 n { pop /x xx def /y yy def /yy exch def /xx exch def x y xx yy
ra !smartarct } for xx yy lineto stroke xn_1 yn_1 xn yn !psarrow x
y xx yy !psarrow } def /!psrectpath { /y1 exch def /x1 exch def /y0
exch def /x0 exch def newpath x0 y0 moveto x1 y0 lineto x1 y1 lineto
x0 y1 lineto closepath } def /!pscirclepath { newpath 0 360 arc closepath
} def /!psovalpath { /rmax exch dup 0.1 le { pop 0.1 } if def /H exch
2 div dup 0.1 le { pop 0.1 } if def /W exch 2 div dup 0.1 le { pop
0.1 } if def /y exch def /x exch def H W le { /R H def }{ /R W def
} ifelse rmax R le { /R rmax def } if newpath x y H add moveto x W
add y H add x W add y R arct x W add y H sub x y H sub R arct x W sub
y H sub x W sub y R arct x W sub y H add x y H add R arct closepath
} def /!pspolygonpath { /ra exch def /n exch def dup n 2 mul 1 add
1 roll 1 index n 2 mul 2 add 1 roll n 2 mul 1 sub index n 2 mul 1 sub
index /yy exch def /xx exch def /y exch def /x exch def newpath xx
x add 2 div yy y add 2 div moveto 1 1 n { pop /yy exch def /xx exch
def x y x xx add 2 div y yy add 2 div ra !smartarct /x xx def /y yy
def } for closepath } def /!psrpolygonpath { /rd exch def /ra exch
def /a exch def /r exch def /n exch def /y exch def /x exch def /b
360 n div def /c b def x y translate a rotate rd 0 ne { r rd b 2 div
cos div sub r div dup scale } if /x1 r b cos mul def /y1 r b sin mul
def newpath r x1 add 2 div y1 2 div moveto 1 1 n { pop /c c b add def
/x2 r c cos mul def /y2 r c sin mul def x1 y1 x1 x2 add 2 div y1 y2
add 2 div ra !smartarct /x1 x2 def /y1 y2 def } for closepath rd 0
ne { r r rd b 2 div cos div sub div dup scale } if a neg rotate x neg
y neg translate } def /!psccurvepath { /n exch def n 2 mul 1 sub index
n 2 mul 1 sub index n 2 mul 1 sub index n 2 mul 1 sub index n 2 mul
4 add array astore /coef exch def /alpha 3.5 def /px0 coef n 2 mul
2 sub get def /py0 coef n 2 mul 1 sub get def /px1 coef 0 get def /py1
coef 1 get def /px2 coef 2 get def /py2 coef 3 get def /d0 px1 px0
sub dup mul py1 py0 sub dup mul add sqrt def /d2 px1 px2 sub dup mul
py1 py2 sub dup mul add sqrt def /ppx d2 d0 div px0 px1 sub mul px1
add def /ppy d2 d0 div py0 py1 sub mul py1 add def /d1 ppx px2 sub
dup mul ppy py2 sub dup mul add sqrt def /qx d2 d1 div px2 ppx sub
mul alpha div px1 add def /qy d2 d1 div py2 ppy sub mul alpha div py1
add def newpath px1 py1 moveto 4 2 n 2 mul 2 add { /i exch def /px0
px1 def /px1 px2 def /px2 coef i get def /py0 py1 def /py1 py2 def
/py2 coef i 1 add get def /d0 d2 def /d2 px1 px2 sub dup mul py1 py2
sub dup mul add sqrt def /ppx d0 d2 div px2 px1 sub mul px1 add def
/ppy d0 d2 div py2 py1 sub mul py1 add def /d1 ppx px0 sub dup mul
ppy py0 sub dup mul add sqrt def /rx d0 d1 div px0 ppx sub mul alpha
div px1 add def /ry d0 d1 div py0 ppy sub mul alpha div py1 add def
qx qy rx ry px1 py1 curveto /ppx d2 d0 div px0 px1 sub mul px1 add
def /ppy d2 d0 div py0 py1 sub mul py1 add def /d1 ppx px2 sub dup
mul ppy py2 sub dup mul add sqrt def /qx d2 d1 div px2 ppx sub mul
alpha div px1 add def /qy d2 d1 div py2 ppy sub mul alpha div py1 add
def } for closepath } def /!pscurve { /n exch def n 2 mul array astore
/coef exch def /alpha 3.5 def /px1 coef 0 get def /py1 coef 1 get def
/px2 coef 2 get def /py2 coef 3 get def /d2 px1 px2 sub dup mul py1
py2 sub dup mul add sqrt def /qx px1 def /qy py1 def newpath px1 py1
moveto 4 2 n 2 mul 2 sub { /i exch def /px0 px1 def /px1 px2 def /px2
coef i get def /py0 py1 def /py1 py2 def /py2 coef i 1 add get def
/d0 d2 def /d2 px1 px2 sub dup mul py1 py2 sub dup mul add sqrt def
/ppx d0 d2 div px2 px1 sub mul px1 add def /ppy d0 d2 div py2 py1 sub
mul py1 add def /d1 ppx px0 sub dup mul ppy py0 sub dup mul add sqrt
def /rx d0 d1 div px0 ppx sub mul alpha div px1 add def /ry d0 d1 div
py0 ppy sub mul alpha div py1 add def qx qy rx ry px1 py1 curveto /ppx
d2 d0 div px0 px1 sub mul px1 add def /ppy d2 d0 div py0 py1 sub mul
py1 add def /d1 ppx px2 sub dup mul ppy py2 sub dup mul add sqrt def
/qx d2 d1 div px2 ppx sub mul alpha div px1 add def /qy d2 d1 div py2
ppy sub mul alpha div py1 add def } for /px1 coef n 2 mul 2 sub get
def /py1 coef n 2 mul 1 sub get def /rx px1 def /ry py1 def qx qy rx
ry px1 py1 curveto stroke /px0 coef n 2 mul 6 sub get def /py0 coef
n 2 mul 5 sub get def /px1 coef n 2 mul 4 sub get def /py1 coef n 2
mul 3 sub get def /px2 coef n 2 mul 2 sub get def /py2 coef n 2 mul
1 sub get def /d0 px1 px0 sub dup mul py1 py0 sub dup mul add sqrt
def /d2 px1 px2 sub dup mul py1 py2 sub dup mul add sqrt def /ppx d2
d0 div px0 px1 sub mul px1 add def /ppy d2 d0 div py0 py1 sub mul py1
add def /d1 ppx px2 sub dup mul ppy py2 sub dup mul add sqrt def /qx
d2 d1 div px2 ppx sub mul alpha div px1 add def /qy d2 d1 div py2 ppy
sub mul alpha div py1 add def px1 py1 qx qy px2 py2 px2 py2 !ps_cbezier_arrow
/px0 coef 0 get def /py0 coef 1 get def /px1 coef 2 get def /py1 coef
3 get def /px2 coef 4 get def /py2 coef 5 get def /d0 px1 px0 sub dup
mul py1 py0 sub dup mul add sqrt def /d2 px1 px2 sub dup mul py1 py2
sub dup mul add sqrt def /ppx d0 d2 div px2 px1 sub mul px1 add def
/ppy d0 d2 div py2 py1 sub mul py1 add def /d1 ppx px0 sub dup mul
ppy py0 sub dup mul add sqrt def /rx d0 d1 div px0 ppx sub mul alpha
div px1 add def /ry d0 d1 div py0 ppy sub mul alpha div py1 add def
px1 py1 rx ry px0 py0 px0 py0 !ps_cbezier_arrow } def /!ps_cbezier
{ /y3 exch def /x3 exch def /y2 exch def /x2 exch def /y1 exch def
/x1 exch def /y0 exch def /x0 exch def newpath x0 y0 moveto x1 y1 x2
y2 x3 y3 curveto stroke x0 y0 x1 y1 x2 y2 x3 y3 !ps_cbezier_arrow x3
y3 x2 y2 x1 y1 x0 y0 !ps_cbezier_arrow } def /!ps_cbezier_arrow { /y3
exch def /x3 exch def /y2 exch def /x2 exch def /y1 exch def /x1 exch
def /y0 exch def /x0 exch def /xa x1 x2 sub 3 mul x3 x0 sub add def
/xb x0 x1 sub x1 sub x2 add 3 mul def /xc x1 x0 sub 3 mul def /ya y1
y2 sub 3 mul y3 y0 sub add def /yb y0 y1 sub y1 sub y2 add 3 mul def
/yc y1 y0 sub 3 mul def /L2 exch def /L1 exch def /ang exch def /dist
exch def /nb exch def L2 0 le { /L L1 ang cos mul 2 div def } { /L
L2 def } ifelse /t4 1 def 1 1 nb { pop /x4 t4 !calculx def /y4 t4 !calculy
def L 0 le { /dx t4 !calculdx def /dy t4 !calculdy def dx dup mul dy
dup mul add sqrt dup 0 eq { /dx 1 def /dy 0 def pop 1 } if L1 exch
div dup dx neg mul /xx exch def dy neg mul /yy exch def } { /t1 0 def
/t2 t4 def 0 1 !max { pop /t t1 t2 add 2 div def t !calculx x4 sub
dup mul t !calculy y4 sub dup mul add sqrt L ge { /t1 t def } { /t2
t def } ifelse } for /x6 t !calculx def /y6 t !calculy def L1 L div
dup x6 x4 sub mul /xx exch def y6 y4 sub mul /yy exch def } ifelse
/x5 x4 xx ang cos mul add yy ang sin mul sub def /y5 y4 xx ang sin
mul add yy ang cos mul add def /x7 x4 xx ang cos mul add yy ang sin
mul add def /y7 y4 xx ang sin mul sub yy ang cos mul add def L2 0 le
{ newpath x5 y5 moveto x4 y4 lineto x7 y7 lineto stroke } { newpath
x4 y4 moveto x5 y5 lineto x6 y6 lineto x7 y7 lineto closepath fill
} ifelse /t1 0 def /t2 t4 def 0 1 !max { pop /t t1 t2 add 2 div def
t !calculx x4 sub dup mul t !calculy y4 sub dup mul add sqrt dist ge
{ /t1 t def } { /t2 t def } ifelse } for /t4 t def } for } def /!ps_qbezier
{ /y3 exch def /x3 exch def /yy exch def /xx exch def /y0 exch def
/x0 exch def /x1 xx 2 mul x0 add 3 div def /y1 yy 2 mul y0 add 3 div
def /x2 xx 2 mul x3 add 3 div def /y2 yy 2 mul y3 add 3 div def x0
y0 x1 y1 x2 y2 x3 y3 !ps_cbezier } def /!max 10 def /!ps_r_cbezier
{ /y3 exch def /x3 exch def /y2 exch def /x2 exch def /y1 exch def
/x1 exch def /y0 exch def /x0 exch def /xa x1 x2 sub 3 mul x3 x0 sub
add def /xb x0 x1 sub x1 sub x2 add 3 mul def /xc x1 x0 sub 3 mul def
/ya y1 y2 sub 3 mul y3 y0 sub add def /yb y0 y1 sub y1 sub y2 add 3
mul def /yc y1 y0 sub 3 mul def /t1 0 def /t2 1 def 0 1 !max { pop
/t t1 t2 add 2 div def t !calculx t !calculy path!a inufill { /t1 t
def } { /t2 t def } ifelse } for /ta t def /t1 0 def /t2 1 def 0 1
!max { pop /t t1 t2 add 2 div def t !calculx t !calculy path!b inufill
{ /t2 t def } { /t1 t def } ifelse } for /tb t def ta !calculx ta !calculy
ta !calculdx 3 div tb ta sub mul ta !calculx add ta !calculdy 3 div
tb ta sub mul ta !calculy add tb !calculdx 3 div ta tb sub mul tb !calculx
add tb !calculdy 3 div ta tb sub mul tb !calculy add tb !calculx tb
!calculy !ps_cbezier } def /!calculx { dup dup xa mul xb add mul xc
add mul x0 add } def /!calculy { dup dup ya mul yb add mul yc add mul
y0 add } def /!calculdx { dup 3 xa mul mul 2 xb mul add mul xc add
} def /!calculdy { dup 3 ya mul mul 2 yb mul add mul yc add } def /!node_mark
{ /ma exch def /ml exch def /y exch def /x exch def /x1 x def /y1 y
def /x2 x 500 ma cos mul add def /y2 y 500 ma sin mul add def 0 1 !max
{ pop /x x1 x2 add 2 div def /y y1 y2 add 2 div def x y path!a inufill
{ /x1 x def /y1 y def } { /x2 x def /y2 y def } ifelse } for /x1 x
def /y1 y def /x2 x ml ma cos mul add def /y2 y ml ma sin mul add def
newpath x1 y1 moveto x2 y2 lineto stroke x2 y2 x1 y1 !psarrow x1 y1
x2 y2 !psarrow } def /!sign {dup 0 lt {pop -1} {0 eq {0} {1} ifelse}
ifelse} def /!pslatexline { /L exch def /b exch def /a exch def a 0
eq {0 L b !sign mul} {L a !sign mul dup b mul a div} ifelse newpath
0 0 moveto lineto stroke } def /!pslatexvector { /L exch def /b exch
def /a exch def a 0 eq {0 L b !sign mul} {L a !sign mul dup b mul a
div} ifelse !psvect } def /!pscircle { 2 div newpath 0 0 3 2 roll 0
360 arc stroke } def /!psdisk { 2 div newpath 0 0 3 2 roll 0 360 arc
fill } def
end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: pstricks.pro
%!
% PostScript prologue for pstricks.tex.
% Version 97 patch 3, 98/06/01
% For distribution, see pstricks.tex.
%
/tx@Dict 200 dict def tx@Dict begin
/ADict 25 dict def
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Atan { /atan load stopped { pop pop 0 } if } def
/Div { dup 0 eq { pop } { div } ifelse } def
/NET { neg exch neg exch T } def
/Pyth { dup mul exch dup mul add sqrt } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def }
def
/PathLength { flattenpath /z 0 def { /y1 ED /x1 ED /y2 y1 def /x2 x1 def
} { /y ED /x ED PathLength@ } {} { /y y2 def /x x2 def PathLength@ }
/pathforall load stopped { pop pop pop pop } if z } def
/STP { .996264 dup scale } def
/STV { SDict begin normalscale end STP  } def
/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
0 } ifelse setdash stroke } def
/DotLine { /b PathLength def /a ED /z ED /y CLW def /z y z add def a 0 gt
{ /b b a div def } { a 0 eq { /b b y sub def } { a -3 eq { /b b y add
def } if } ifelse } ifelse [ 0 b b z Div round Div dup 0 le { pop 1 } if
] a 0 gt { 0 } { y 2 div a -2 gt { neg } if } ifelse setdash 1
setlinecap stroke } def
/LineFill { gsave abs CLW add /a ED a 0 dtransform round exch round exch
2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
% DG/SR modification begin - Dec. 12, 1997 - Patch 2
%itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
itransform pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
% DG/SR modification end
Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
% def
a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore
pop pop } def
% DG/SR modification end
/BeginArrow { ADict begin /@mtrx CM def gsave 2 copy T 2 index sub neg
exch 3 index sub exch Atan rotate newpath } def
/EndArrow { @mtrx setmatrix CP grestore end } def
/Arrow { CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1
scale } if w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore } def
/Tbar { CLW mul add /z ED z -2 div CLW 2 div moveto z 0 rlineto stroke 0
CLW moveto } def
/Bracket { CLW mul add dup CLW sub 2 div /x ED mul CLW add /y ED /z CLW 2
div def x neg y moveto x neg CLW 2 div L x CLW 2 div L x y L stroke 0
CLW moveto } def
/RoundBracket { CLW mul add dup 2 div /x ED mul /y ED /mtrx CM def 0 CLW
2 div T x y mul 0 ne { x y scale } if 1 1 moveto .85 .5 .35 0 0 0
curveto -.35 0 -.85 .5 -1 1 curveto mtrx setmatrix stroke 0 CLW moveto }
def
/SD { 0 360 arc fill } def
/EndDot { { /z DS def } { /z 0 def } ifelse /b ED 0 z DS SD b { 0 z DS
CLW sub SD } if 0 DS z add CLW 4 div sub moveto } def
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
/closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
load } if ] cvx newpath 3 1 roll T exec } def
/NArray { aload length 2 div dup dup cvi eq not { exch pop } if /n exch
cvi def } def
/NArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop } if
f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/Line { NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub
def n { Lineto } repeat CP 4 2 roll ArrowB L pop pop } if } def
/Arcto { /a [ 6 -2 roll ] cvx def a r /arcto load stopped { 5 } { 4 }
ifelse { pop } repeat a } def
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
Lineto pop pop closepath } ifelse } def
/Diamond { /mtrx CM def T rotate /h ED /w ED dup 0 eq { pop } { CLW mul
neg /d ED /a w h Atan def /h d a sin Div h add def /w d a cos Div w add
def } ifelse mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2
div /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
setmatrix } def
% DG modification begin - Jan. 15, 1997
%/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
%pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
%div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
%d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
%setmatrix } def
/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup
CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
div dup cos exch sin Div mul sub def mark 0 d w neg d 0 h w d 0
d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
setmatrix pop } def
% DG/SR modification end
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CC { /l0 l1 def /x1 x dx sub def /y1 y dy sub def /dx0 dx1 def /dy0 dy1
def CCA /dx dx0 l1 c exp mul dx1 l0 c exp mul add def /dy dy0 l1 c exp
mul dy1 l0 c exp mul add def /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos
abs b exp a mul dx dy Pyth Div 2 div def /x2 x l0 dx mul m mul sub def
/y2 y l0 dy mul m mul sub def /dx l1 dx mul m mul neg def /dy l1 dy mul
m mul neg def } def
/IC { /c c 1 add def c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if }
ifelse /a a 2 mul 3 div 45 cos b exp div def CCA /dx 0 def /dy 0 def }
def
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
/OpenCurve { NArray n 3 lt { n { pop pop } repeat } { BOC /n n 3 sub def
n { NC } repeat EOC } ifelse } def
/AltCurve { { false NArray n 2 mul 2 roll [ n 2 mul 3 sub 1 roll ] aload
/Points ED n 2 mul -2 roll } { false NArray } ifelse n 4 lt { n { pop
pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse } def
/ClosedCurve { NArray n 3 lt { n { pop pop } repeat } { n 3 gt {
CheckClosed } if 6 copy n 2 mul 6 add 6 roll IC CC x y moveto n { NC }
repeat closepath pop pop } ifelse } def
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore }
def
/FontDot { DS 2 mul dup matrix scale matrix concatmatrix exch matrix
rotate matrix concatmatrix exch findfont exch makefont setfont } def
/Rect { x1 y1 y2 add 2 div moveto x1 y2 lineto x2 y2 lineto x2 y1 lineto
x1 y1 lineto closepath } def
/OvalFrame { x1 x2 eq y1 y2 eq or { pop pop x1 y1 moveto x2 y2 L } { y1
y2 sub abs x1 x2 sub abs 2 copy gt { exch pop } { pop } ifelse 2 div
exch { dup 3 1 roll mul exch } if 2 copy lt { pop } { exch pop } ifelse
/b ED x1 y1 y2 add 2 div moveto x1 y2 x2 y2 b arcto x2 y2 x2 y1 b arcto
x2 y1 x1 y1 b arcto x1 y1 x1 y2 b arcto 16 { pop } repeat closepath }
ifelse } def
/Frame { CLW mul /a ED 3 -1 roll 2 copy gt { exch } if a sub /y2 ED a add
/y1 ED 2 copy gt { exch } if a sub /x2 ED a add /x1 ED 1 index 0 eq {
pop pop Rect } { OvalFrame } ifelse } def
/BezierNArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop
} if n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat f { ]
aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/OpenBezier { BezierNArray n 1 eq { pop pop } { ArrowA n 4 sub 3 idiv { 6
2 roll 4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB curveto }
ifelse } def
/ClosedBezier { BezierNArray n 1 eq { pop pop } { moveto n 1 sub 3 idiv {
6 2 roll 4 2 roll curveto } repeat closepath } ifelse } def
/BezierShowPoints { gsave Points aload length 2 div cvi /n ED moveto n 1
sub { lineto } repeat CLW 2 div SLW [ 4 4 ] 0 setdash stroke grestore }
def
/Parab { /y0 exch def /x0 exch def /y1 exch def /x1 exch def /dx x0 x1
sub 3 div def /dy y0 y1 sub 3 div def x0 dx sub y0 dy add x1 y1 ArrowA
x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB curveto /Points [ x1 y1 x0
y0 x0 2 mul x1 sub y1 ] def } def
/Grid { newpath /a 4 string def /b ED /c ED /n ED cvi dup 1 lt { pop 1 }
if /s ED s div dup 0 eq { pop 1 } if /dy ED s div dup 0 eq { pop 1 } if
/dx ED dy div round dy mul /y0 ED dx div round dx mul /x0 ED dy div
round cvi /y2 ED dx div round cvi /x2 ED dy div round cvi /y1 ED dx div
round cvi /x1 ED /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def /w x2 x1 sub
0 gt { 1 } { -1 } ifelse def b 0 gt { /z1 b 4 div CLW 2 div add def
/Helvetica findfont b scalefont setfont /b b .95 mul CLW 2 div add def }
if systemdict /setstrokeadjust known { true setstrokeadjust /t { } def }
{ /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
exch itransform } bind def } ifelse gsave n 0 gt { 1 setlinecap [ 0 dy n
div ] dy n div 2 div setdash } { 2 setlinecap } ifelse /i x1 def /f y1
dy mul n 0 gt { dy n div 2 div h mul sub } if def /g y2 dy mul n 0 gt {
dy n div 2 div h mul add } if def x2 x1 sub w mul 1 add dup 1000 gt {
pop 1000 } if { i dx mul dup y0 moveto b 0 gt { gsave c i a cvs dup
stringwidth pop /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse h 0 gt {b neg}
{z1} ifelse rmoveto show grestore } if dup t f moveto g t L stroke /i i
w add def } repeat grestore gsave n 0 gt
% DG/SR modification begin - Nov. 7, 1997 - Patch 1
%{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
{ 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
% DG/SR modification end
{ 2 setlinecap } ifelse /i y1 def /f x1 dx mul
n 0 gt { dx n div 2 div w mul sub } if def /g x2 dx mul n 0 gt { dx n
div 2 div w mul add } if def y2 y1 sub h mul 1 add dup 1000 gt { pop
1000 } if { newpath i dy mul dup x0 exch moveto b 0 gt { gsave c i a cvs
dup stringwidth pop /z2 ED w 0 gt {z1 z2 add neg} {z1} ifelse h 0 gt
{z1} {b neg} ifelse rmoveto show grestore } if dup f exch t moveto g
exch t L stroke /i i h add def } repeat grestore } def
/ArcArrow { /d ED /b ED /a ED gsave newpath 0 -1000 moveto clip newpath 0
1 0 0 b grestore c mul /e ED pop pop pop r a e d PtoC y add exch x add
exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
mul neg d } def
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
/RotBegin { tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 }
def } if /TMatrix [ TMatrix CM ] cvx def /a ED a Rot /RAngle [ RAngle
dup a add ] cvx def } def
/RotEnd { /TMatrix [ TMatrix setmatrix ] cvx def /RAngle [ RAngle pop ]
cvx def } def
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
/Uput { /a ED add 2 div /h ED 2 div /w ED /s a sin def /c a cos def /b s
abs c abs 2 copy gt dup /q ED { pop } { exch pop } ifelse def /w1 c b
div w mul def /h1 s b div h mul def q { w1 abs w sub dup c mul abs } {
h1 abs h sub dup s mul abs } ifelse } def
/UUput { /z ED abs /y ED /x ED q { x s div c mul abs y gt } { x c div s
mul abs y gt } ifelse { x x mul y y mul sub z z mul add sqrt z add } { q
{ x s div } { x c div } ifelse abs } ifelse a PtoC h1 add exch w1 add
exch } def
/BeginOL { dup (all) eq exch TheOL eq or { IfVisible not { Visible
/IfVisible true def } if } { IfVisible { Invisible /IfVisible false def
} if } ifelse } def
/InitOL { /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
/Visible { CP OLUnit idtransform T moveto } def /Invisible { CP OLUnit
neg exch neg exch idtransform T moveto } def /BOL { BeginOL } def
/IfVisible true def } def
end
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro
%!PS-Adobe-2.0
%%Title: Dot Font for PSTricks
%%Creator: Timothy Van Zandt <tvz@Princeton.EDU>
%%Creation Date: May 7, 1993
%% Version 97 patch 1, 99/12/16
%% Modified by Etienne Riga <etienne.riga@skynet.be> - Dec. 16, 1999
%% to add /Diamond, /SolidDiamond and /BoldDiamond
10 dict dup begin
  /FontType 3 def
  /FontMatrix [ .001 0 0 .001 0 0 ] def
  /FontBBox [ 0 0 0 0 ] def
  /Encoding 256 array def
  0 1 255 { Encoding exch /.notdef put } for
  Encoding
    dup (b) 0 get /Bullet put
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
% DG/SR modification end
  /Metrics 13 dict def
  Metrics begin
    /Bullet        1000   def
    /Circle        1000   def
    /BoldCircle    1000   def
    /SolidTriangle 1344   def
    /Triangle      1344   def
    /BoldTriangle  1344   def
    /SolidSquare    886   def
    /Square         886   def
    /BoldSquare     886   def
    /SolidPentagon 1093.2 def
    /Pentagon      1093.2 def
    /BoldPentagon  1093.2 def
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    /SolidDiamond  1008   def
    /Diamond       1008   def
    /BoldDiamond   1008   def
% DG/SR modification end
    /.notdef 0 def
  end
  /BBoxes 13 dict def
  BBoxes begin
    /Circle        { -550 -550 550 550 } def
    /BoldCircle    /Circle load def
    /Bullet        /Circle load def
    /Triangle      { -571.5 -330 571.5 660 } def
    /BoldTriangle  /Triangle load def
    /SolidTriangle /Triangle load def
    /Square        { -450 -450 450 450 } def
    /BoldSquare    /Square load def
    /SolidSquare   /Square load def
    /Pentagon      { -546.6 -465 546.6 574.7 } def
    /BoldPentagon  /Pentagon load def
    /SolidPentagon /Pentagon load def
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    /Diamond       { -428.5 -742.5 428.5 742.5 } def
    /BoldDiamond   /Diamond load def
    /SolidDiamond  /Diamond load def
% DG/SR modification end
    /.notdef { 0 0 0 0 } def
  end
  /CharProcs 20 dict def
  CharProcs begin
    /Adjust {
      2 copy dtransform floor .5 add exch floor .5 add exch idtransform
      3 -1 roll div 3 1 roll exch div exch scale
    } def
    /CirclePath    { 0 0 500 0 360 arc closepath } def
    /Bullet        { 500 500 Adjust CirclePath fill } def
    /Circle        { 500 500 Adjust CirclePath .9 .9 scale CirclePath
                     eofill } def
    /BoldCircle    { 500 500 Adjust CirclePath .8 .8 scale CirclePath
                     eofill } def
    /BoldCircle    { CirclePath .8 .8 scale CirclePath eofill } def
    /TrianglePath  { 0  660 moveto -571.5 -330 lineto 571.5 -330 lineto
                     closepath } def
    /SolidTriangle { TrianglePath fill } def
    /Triangle      { TrianglePath .85 .85 scale TrianglePath eofill } def
    /BoldTriangle  { TrianglePath .7 .7 scale TrianglePath eofill } def
    /SquarePath    { -450 450 moveto 450 450 lineto 450 -450 lineto
                     -450 -450 lineto closepath } def
    /SolidSquare   { SquarePath fill } def
    /Square        { SquarePath .89 .89 scale SquarePath eofill } def
    /BoldSquare    { SquarePath .78 .78 scale SquarePath eofill } def
    /PentagonPath  {
      -337.8 -465   moveto
       337.8 -465   lineto
       546.6  177.6 lineto
         0    574.7 lineto
      -546.6  177.6 lineto
      closepath
    } def
    /SolidPentagon { PentagonPath fill } def
    /Pentagon      { PentagonPath .89 .89 scale PentagonPath eofill } def
    /BoldPentagon  { PentagonPath .78 .78 scale PentagonPath eofill } def
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    /DiamondPath   { 0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto
                     428.5 0 lineto closepath } def
    /SolidDiamond  { DiamondPath fill } def
    /Diamond       { DiamondPath .85 .85 scale DiamondPath eofill } def
    /BoldDiamond   { DiamondPath .7 .7 scale DiamondPath eofill } def
% DG/SR modification end
    /.notdef { } def
  end
  /BuildGlyph {
    exch
    begin
      Metrics 1 index get exec 0
      BBoxes 3 index get exec
      setcachedevice
      CharProcs begin load exec end
    end
  } def
  /BuildChar {
    1 index /Encoding get exch get
    1 index /BuildGlyph get exec
  } bind def
end
/PSTricksDotFont exch definefont pop
%END pst-dots.pro

%%EndProcSet
%%BeginProcSet: pst-node.pro
%!
% PostScript prologue for pst-node.tex.
% Version 97 patch 1, 97/05/09.
% For distribution, see pstricks.tex.
%
/tx@NodeDict 400 dict def tx@NodeDict begin
tx@Dict begin /T /translate load def end
/NewNode { gsave /next ED dict dup 3 1 roll def exch { dup 3 1 roll def }
if begin tx@Dict begin STV CP T exec end /NodeMtrx CM def next end
grestore } def
/InitPnode { /Y ED /X ED /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
/InitCnode { /r ED /Y ED /X ED /NodePos { NodeSep r add dup Cos mul exch
Sin mul } def } def
/GetRnodePos { Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def
} ifelse Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def }
ifelse dx Sin mul abs dy Cos mul abs gt { dy Cos mul Sin div dy } { dx
dup Sin mul Cos Div } ifelse } def
/InitRnode { /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub
/u ED /NodePos { GetRnodePos } def } def
/DiaNodePos { w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
Cos mul exch Sin mul } def
/TriNodePos { Sin s lt { d NodeSep sub dup Cos mul Sin Div exch } { w h
mul w Sin mul h Cos abs mul add Div NodeSep add dup Cos mul exch Sin mul
} ifelse } def
/InitTriNode { sub 2 div exch 2 div exch 2 copy T 2 copy 4 index index /d
ED pop pop pop pop -90 mul rotate /NodeMtrx CM def /X 0 def /Y 0 def d
sub abs neg /d ED d add /h ED 2 div h mul h d sub Div /w ED /s d w Atan
sin def /NodePos { TriNodePos } def } def
/OvalNodePos { /ww w NodeSep add def /hh h NodeSep add def Sin ww mul Cos
hh mul Atan dup cos ww mul exch sin hh mul } def
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
/XYPos { dup sin exch cos Do /Cos ED /Sin ED /Dist ED Cos 0 gt { Dist
Dist Sin mul Cos div } { Cos 0 lt { Dist neg Dist Sin mul Cos div neg }
{ 0 Dist Sin mul } ifelse } ifelse Do } def
/GetEdge { dup 0 eq { pop begin 1 0 NodeMtrx dtransform CM idtransform
exch atan sub dup sin /Sin ED cos /Cos ED /NodeSep ED NodePos NodeMtrx
dtransform CM idtransform end } { 1 eq {{exch}} {{}} ifelse /Do ED pop
XYPos } ifelse } def
/AddOffset { 1 index 0 eq { pop pop } { 2 copy 5 2 roll cos mul add 4 1
roll sin mul sub exch } ifelse } def
/GetEdgeA { NodeSepA AngleA NodeA NodeSepTypeA GetEdge OffsetA AngleA
AddOffset yA add /yA1 ED xA add /xA1 ED } def
/GetEdgeB { NodeSepB AngleB NodeB NodeSepTypeB GetEdge OffsetB AngleB
AddOffset yB add /yB1 ED xB add /xB1 ED } def
/GetArmA { ArmTypeA 0 eq { /xA2 ArmA AngleA cos mul xA1 add def /yA2 ArmA
AngleA sin mul yA1 add def } { ArmTypeA 1 eq {{exch}} {{}} ifelse /Do ED
ArmA AngleA XYPos OffsetA AngleA AddOffset yA add /yA2 ED xA add /xA2 ED
} ifelse } def
/GetArmB { ArmTypeB 0 eq { /xB2 ArmB AngleB cos mul xB1 add def /yB2 ArmB
AngleB sin mul yB1 add def } { ArmTypeB 1 eq {{exch}} {{}} ifelse /Do ED
ArmB AngleB XYPos OffsetB AngleB AddOffset yB add /yB2 ED xB add /xB2 ED
} ifelse } def
/InitNC { /b ED /a ED /NodeSepTypeB ED /NodeSepTypeA ED /NodeSepB ED
/NodeSepA ED /OffsetB ED /OffsetA ED tx@NodeDict a known tx@NodeDict b
known and dup { /NodeA a load def /NodeB b load def NodeA GetCenter /yA
ED /xA ED NodeB GetCenter /yB ED /xB ED } if } def
/LPutLine { 4 copy 3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 1 t sub
mul 3 1 roll 1 t sub mul 4 1 roll t mul add /Y ED t mul add /X ED } def
/LPutLines { mark LPutVar counttomark 2 div 1 sub /n ED t floor dup n gt
{ pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse cvi 2 mul { pop
} repeat LPutLine cleartomark } def
/BezierMidpoint { /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED
/t ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul def /bx x2 x1 sub 3
mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax x3 x0 sub cx sub bx
sub def /ay y3 y0 sub cy sub by sub def ax t 3 exp mul bx t t mul mul
add cx t mul add x0 add ay t 3 exp mul by t t mul mul add cy t mul add
y0 add 3 ay t t mul mul mul 2 by t mul mul add cy add 3 ax t t mul mul
mul 2 bx t mul mul add cx add atan /NAngle ED /Y ED /X ED } def
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
/HPutLines { HPosBegin yB yA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { dup Y check { exit
} { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark HPosEnd 
} def
/VPosBegin { xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def } def
/NCCoor { /AngleA yB yA sub xB xA sub Atan def /AngleB AngleA 180 add def
GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def /LPutPos {
LPutVar LPutLine } def /HPutPos { LPutVar HPutLine } def /VPutPos {
LPutVar VPutLine } def LPutVar } def
/NCLine { NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB lineto pop pop
end } def
/NCLines { false NArray n 0 eq { NCLine } { 2 copy yA sub exch xA sub
Atan /AngleA ED n 2 mul dup index exch index yB sub exch xB sub Atan
/AngleB ED GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1
yA1 ] cvx def mark LPutVar tx@Dict begin false Line end /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
ifelse } def
/NCCurve { GetEdgeA GetEdgeB xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
/NCAngles { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform pop xB2 yB2 mtrx transform exch pop mtrx
itransform /y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA2
yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end /LPutVar [ xB1
yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def /LPutPos { LPutLines } def
/HPutPos { HPutLines } def /VPutPos { VPutLines } def } def
/NCAngle { GetEdgeA GetEdgeB GetArmB /mtrx AngleA matrix rotate def xB2
yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
/y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA1 yA1
tx@Dict begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCBar { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate def
xA2 yA2 mtrx itransform pop xB2 yB2 mtrx itransform pop sub dup 0 mtrx
transform 3 -1 roll 0 gt { /yB2 exch yB2 add def /xB2 exch xB2 add def }
{ /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse mark ArmB
0 ne { xB1 yB1 } if xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict
begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx
def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCDiag { GetEdgeA GetEdgeB GetArmA GetArmB mark ArmB 0 ne { xB1 yB1 } if
xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end
/LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCDiagg { GetEdgeA GetArmA yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
GetEdgeB mark xB1 yB1 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin
false Line end /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCLoop { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED /xB3 xB2 yB2
mtrx transform pop def xB3 yA3 mtrx itransform /yB3 ED /xB3 ED xA3 yA3
mtrx itransform /yA3 ED /xA3 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2
xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false
Line end /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
/NCCircle { NodeSepA 0 NodeA 0 GetEdge pop 2 div dup 2 exp r
r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
mul add dup 5 1 roll 90 sub PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
% DG/SR modification end
} def /HPutPos { LPutPos } def /VPutPos { LPutPos } def r AngleA 90 sub a add
AngleA 270 add a sub tx@Dict begin /angleB ED /angleA ED /r ED /c 57.2957 r
Div def /y ED /x ED } def
/NCBox { /d ED /h ED /AngleB yB yA sub xB xA sub Atan def /AngleA AngleB
180 add def GetEdgeA GetEdgeB /dx d AngleB sin mul def /dy d AngleB cos
mul neg def /hx h AngleB sin mul neg def /hy h AngleB cos mul def
/LPutVar [ xA1 hx add yA1 hy add xB1 hx add yB1 hy add xB1 dx add yB1 dy
add xA1 dx add yA1 dy add ] cvx def /LPutPos { LPutLines } def /HPutPos
{ xB yB xA yA LPutLine } def /VPutPos { HPutPos } def mark LPutVar
tx@Dict begin false Polygon end } def
/NCArcBox { /l ED neg /d ED /h ED /a ED /AngleA yB yA sub xB xA sub Atan
def /AngleB AngleA 180 add def /tA AngleA a sub 90 add def /tB tA a 2
mul add def /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
/x0 xA r tA cos mul add def /y0 yA r tA sin mul add def /c 57.2958 r div
def /AngleA AngleA a sub 180 add def /AngleB AngleB a add 180 add def
GetEdgeA GetEdgeB /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul
sub def /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def l 0
eq { x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn }
{ x0 y0 translate /tA AngleA l c mul add def /tB AngleB l c mul sub def
0 0 r h add tA tB arc r h add AngleB PtoC r d add AngleB PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r d add tB PtoC l arcto 4 { pop } repeat 0
0 r d add tB tA arcn r d add AngleA PtoC r h add AngleA PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r h add tA PtoC l arcto 4 { pop } repeat }
ifelse closepath /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def /LPutPos
{ LPutVar /d ED /h ED /AngleB ED /AngleA ED /r ED /y0 ED /x0 ED t 1 le {
r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC }
{ t 2 lt { /NAngle AngleB 180 add def r 2 t sub h mul t 1 sub d mul add
add AngleB PtoC } { t 3 lt { r d add AngleB 3 t sub mul AngleA 2 t sub
mul add dup 90 sub /NAngle ED PtoC } { /NAngle AngleA 180 add def r 4 t
sub d mul t 3 sub h mul add add AngleA PtoC } ifelse } ifelse } ifelse
y0 add /Y ED x0 add /X ED } def /HPutPos { LPutPos } def /VPutPos {
LPutPos } def } def
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
/LPutCoor { NAngle tx@Dict begin /NAngle ED end gsave CM STV CP Y sub neg
exch X sub neg exch moveto setmatrix CP grestore } def
/LPut { tx@NodeDict /LPutPos known { LPutPos } { CP /Y ED /X ED /NAngle 0
def } ifelse LPutCoor  } def
/HPutAdjust { Sin Cos mul 0 eq { 0 } { d Cos mul Sin div flag not { neg }
if h Cos mul Sin div flag { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { r add neg } { l add } ifelse X add /X ED }
def
/VPutAdjust { Sin Cos mul 0 eq { 0 } { l Sin mul Cos div flag { neg } if
r Sin mul Cos div flag not { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { d add } { h add neg } ifelse Y add /Y ED }
def
end
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: pst-coil.pro
%!
% PostScript prologue for pst-coil.tex.
% Version 97 patch 1, 98/06/02
% For distribution, see pstricks.tex.
%
/tx@CoilDict 40 dict def tx@CoilDict begin
/CoilLoop { /t ED t sin AspectSin mul t 180 div AspectCos mul add t cos
lineto } def
/Coil { /Inc ED dup sin /AspectSin ED cos /AspectCos ED /ArmB ED /ArmA ED
/h ED /w ED /y1 ED /x1 ED /y0 ED /x0 ED x0 y0 translate y1 y0 sub x1 x0
sub 2 copy Pyth /TotalLength ED Atan rotate /BeginAngle ArmA AspectCos
Div w h mul Div 360 mul def /EndAngle TotalLength ArmB sub AspectCos Div
w h mul Div 360 mul def 1 0 0 0 ArrowA ArmA 0 lineto /mtrx CM def w h
mul 2 Div w 2 Div scale BeginAngle Inc EndAngle { CoilLoop } for
EndAngle CoilLoop mtrx setmatrix TotalLength ArmB sub 0 lineto CP
% DG/SR modification begin - Jun.  2, 1998 - Patch 1 (from Michael Vulis)
% TotalLength 0 ArrowB lineto } def
TotalLength 0 ArrowB lineto
pop pop pop pop } def
% DG/SR modification end
/AltCoil { /Inc ED dup sin /AspectSin ED cos /AspectCos ED /h ED /w ED
/EndAngle ED /BeginAngle ED /mtrx CM def w h mul 2 Div w 2 Div scale
BeginAngle sin AspectSin mul BeginAngle 180 div AspectCos mul add
BeginAngle cos /lineto load stopped { moveto } if BeginAngle Inc
EndAngle { CoilLoop } for EndAngle CoilLoop mtrx setmatrix } def
/ZigZag { /ArmB ED /ArmA ED 2 div /w ED w mul /h ED /y1 ED /x1 ED /y0 ED
/x0 ED x1 y1 translate y0 y1 sub x0 x1 sub 2 copy Pyth /TotalLength ED
Atan rotate TotalLength ArmA sub ArmB sub dup h div cvi /n ED n h mul
sub 2 div dup ArmA add /ArmA ED ArmB add /ArmB ED /x ArmB h 2 div add
def mark 0 0 ArmB 0 n { x w /w w neg def /x x h add def } repeat
TotalLength ArmA sub 0 TotalLength 0 } def
end
% END pst-coil.pro

%%EndProcSet
%%BeginProcSet: pst-grad.pro
%!
% PostScript prologue for pst-grad.tex.
% Version 97, 93/05/12
% For distribution, see pstricks.tex.
%
% For the PSTricks gradient fillstyle.
%
% Based on some EPS files by leeweyr!bill@nuchat.sccsi.com (W. R. Lee).
%
% Syntax:
%   R0 G0 B0 R1 G1 B1 NumLines MidPoint Angle GradientFill

/tx@GradientDict 40 dict def
tx@GradientDict begin
/GradientFill {
  rotate
  /MidPoint ED
  /NumLines ED
  /LastBlue ED
  /LastGreen ED
  /LastRed ED
  /FirstBlue ED
  /FirstGreen ED
  /FirstRed ED
  % This avoids gaps due to rounding errors:
  clip
  pathbbox           %leave llx,lly,urx,ury on stack
  /y ED /x ED
  2 copy translate
  y sub neg /y ED
  x sub neg /x ED
  % This avoids gaps due to rounding errors:
  LastRed FirstRed add 2 div
  LastGreen FirstGreen add 2 div
  LastBlue FirstBlue add 2 div
  setrgbcolor
  fill
  /YSizePerLine y NumLines div def
  /CurrentY 0 def
  /MidLine NumLines 1 MidPoint sub mul abs cvi def
  MidLine NumLines 2 sub gt
  { /MidLine NumLines def }
  { MidLine 2 lt { /MidLine 0 def } if }
  ifelse
  MidLine 0 gt
  {
    /Red FirstRed def
    /Green FirstGreen def
    /Blue FirstBlue def
    /RedIncrement LastRed FirstRed sub MidLine 1 sub div def
    /GreenIncrement LastGreen FirstGreen sub MidLine 1 sub div def
    /BlueIncrement LastBlue FirstBlue sub MidLine 1 sub div def
    MidLine { GradientLoop } repeat
  } if
  MidLine NumLines lt
  {
    /Red LastRed def
    /Green LastGreen def
    /Blue LastBlue def
    /RedIncrement FirstRed LastRed sub NumLines MidLine sub 1 sub div def
    /GreenIncrement FirstGreen LastGreen sub NumLines MidLine sub 1 sub div def
    /BlueIncrement FirstBlue LastBlue sub NumLines MidLine sub 1 sub div def
    NumLines MidLine sub { GradientLoop } repeat
  } if
} def
/GradientLoop {
  0 CurrentY moveto
  x 0 rlineto
  0 YSizePerLine rlineto
  x neg 0 rlineto
  closepath
  Red Green Blue setrgbcolor fill
  /CurrentY CurrentY YSizePerLine add def
  /Blue Blue BlueIncrement add def
  /Green Green GreenIncrement add def
  /Red Red RedIncrement add def
} def

end
% END pst-grad.pro

%%EndProcSet
%%BeginProcSet: pst-text.pro
%!
% PostScript header file pst-text.pro
% Version 97, 94/04/20
% For distribution, see pstricks.tex.

/tx@TextPathDict 40 dict def
tx@TextPathDict begin

% Syntax:  <dist> PathPosition -
% Function: Searches for position of currentpath distance <dist> from
%           beginning. Sets (X,Y)=position, and Angle=tangent.
/PathPosition
{ /targetdist exch def
  /pathdist 0 def
  /continue true def
  /X { newx } def /Y { newy } def /Angle 0 def
  gsave
    flattenpath
    { movetoproc }  { linetoproc } { } { firstx firsty linetoproc }
    /pathforall load stopped { pop pop pop pop /X 0 def /Y 0 def } if
  grestore
} def

/movetoproc { continue { @movetoproc } { pop pop } ifelse } def

/@movetoproc
{ /newy exch def /newx exch def
  /firstx newx def /firsty newy def
} def

/linetoproc { continue { @linetoproc } { pop pop } ifelse } def

/@linetoproc
{
  /oldx newx def /oldy newy def
  /newy exch def /newx exch def
  /dx newx oldx sub def
  /dy newy oldy sub def
  /dist dx dup mul dy dup mul add sqrt def
  /pathdist pathdist dist add def
  pathdist targetdist ge
  { pathdist targetdist sub dist div dup
    dy mul neg newy add /Y exch def
    dx mul neg newx add /X exch def
    /Angle dy dx atan def
    /continue false def
  } if
} def

/TextPathShow
{ /String exch def
  /CharCount 0 def
  String length
  { String CharCount 1 getinterval ShowChar
    /CharCount CharCount 1 add def
  } repeat
} def

% Syntax: <pathlength> <position> InitTextPath -
/InitTextPath
{ gsave
    currentpoint /Y exch def /X exch def
    exch X Hoffset sub sub mul
    Voffset Hoffset sub add
    neg X add /Hoffset exch def
    /Voffset Y def
  grestore
} def

/Transform
{ PathPosition
  dup
  Angle cos mul Y add exch
  Angle sin mul neg X add exch
  translate
  Angle rotate
} def

/ShowChar
{ /Char exch def
  gsave
    Char end stringwidth
    tx@TextPathDict begin
    2 div /Sy exch def 2 div /Sx exch def
    currentpoint
    Voffset sub Sy add exch
    Hoffset sub Sx add
    Transform
    Sx neg Sy neg moveto
    Char end tx@TextPathSavedShow
    tx@TextPathDict begin
  grestore
  Sx 2 mul Sy 2 mul rmoveto
} def

end
% END pst-text.pro

%%EndProcSet
%%BeginProcSet: 8r.enc
% @@psencodingfile@{
%   author = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry",
%   version = "0.6",
%   date = "1 July 1998",
%   filename = "8r.enc",
%   email = "tex-fonts@@tug.org",
%   docstring = "Encoding for TrueType or Type 1 fonts
%                to be used with TeX."
% @}
% 
% Idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard Encoding + ISO Latin 1 + extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% 
% (4) Remaining positions left undefined are for use in (hopefully)
% upward-compatible revisions, if someday more characters are generally
% available.
% 
% (5) hyphen appears twice for compatibility with both 
% ASCII and Windows.
% 
/TeXBase1Encoding [
% 0x00 (encoded characters from Adobe Standard not in Windows 3.1)
  /.notdef /dotaccent /fi /fl
  /fraction /hungarumlaut /Lslash /lslash
  /ogonek /ring /.notdef
  /breve /minus /.notdef 
% These are the only two remaining unencoded characters, so may as
% well include them.
  /Zcaron /zcaron 
% 0x10
 /caron /dotlessi 
% (unusual TeX characters available in, e.g., Lucida Bright)
 /dotlessj /ff /ffi /ffl 
 /.notdef /.notdef /.notdef /.notdef
 /.notdef /.notdef /.notdef /.notdef
 % very contentious; it's so painful not having quoteleft and quoteright
 % at 96 and 145 that we move the things normally found there to here.
 /grave /quotesingle 
% 0x20 (ASCII begins)
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three /four /five /six /seven
 /eight /nine /colon /semicolon /less /equal /greater /question
% 0x40
 /at /A /B /C /D /E /F /G /H /I /J /K /L /M /N /O
% 0x50
 /P /Q /R /S /T /U /V /W
 /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o
% 0x70
 /p /q /r /s /t /u /v /w
 /x /y /z /braceleft /bar /braceright /asciitilde
 /.notdef % rubout; ASCII ends
% 0x80
 /.notdef /.notdef /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /.notdef /.notdef /.notdef
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /.notdef /.notdef /Ydieresis
% 0xA0
 /.notdef % nobreakspace
 /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot
 /hyphen % Y&Y (also at 45); Windows' softhyphen
 /registered
 /macron
% 0xD0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def

%%EndProcSet
%%BeginProcSet: texps.pro
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]/Metrics
exch def dict begin Encoding{exch dup type/integertype ne{pop pop 1 sub
dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get div def}
ifelse}forall Metrics/Metrics currentdict end def[2 index currentdict
end definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{
dup sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1
roll mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def
dup[exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}
if}forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}
def end

%%EndProcSet
%%BeginProcSet: color.pro
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin 39158280 55380996 1000 600 600 (CCandRCP.dvi)
@start /Fa 75[25 57[29 33 1[50 33 37 21 29 29 1[37 37
37 54 21 33 21 21 37 37 21 33 37 33 37 37 10[46 1[42
37 46 1[46 1[50 62 42 1[33 25 2[46 46 54 50 46 46 9[37
4[37 37 2[19 25 19 27[25 13[37 2[{TeXBase1Encoding ReEncodeFont}49
74.7198 /Times-Italic rf
%DVIPSBitmapFont: Fb cmmi7 7 1
/Fb 1 89 df<903B3FFFE00FFFC0A2010190390001FC006D4814F017C0027F495A4CC7FC
6E130E6F5A021F5B6F5A5E91380FE1C0EDE380DA07F7C8FC15FE6E5A5D6E7EA2811403EC
077F140E4A7E02187FEC301F02607F14C049486C7EEB030001066D7E5B01386D7E5B01F0
6D7E485AD80FF0497ED8FFFC90381FFFE0A232287DA736>88 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fc cmex10 10 1
/Fc 1 41 df<EE03C0160F163F167F923801FF004B5A4B5AED0FF04B5A4B5A4B5A4BC7FC
5C5D4A5A14075D4A5AA2141F5DA24A5AA44A5AB3B3B3B214FF92C8FCA35B5CA2495AA25C
13075C130F495A5C133F495A49C9FC485A485A485A485AEA1FC0485AB4CAFC12FCA2B4FC
EA3F806C7EEA0FF06C7E6C7E6C7E6C7E6D7E6D7E131F806D7E130780130380A26D7EA280
7FA381147FB3B3B3B26E7EA46E7EA281140FA26E7E8114036E7E81806F7E6F7E6F7E6F7E
ED07FC6F7E6F7E9238007FC0163F160F16032AF8748243>40 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fd cmbx10 10 2
/Fd 2 50 df<49B4FC010F13E0017F13FC9038FF83FE4848C67E4848EB7F804848EB3FC0
4848EB1FE0A2001F15F0A24848EB0FF8A3007F15FCA500FF15FEB3007F15FCA4003F15F8
A26D131F001F15F0A2000F15E06D133F000715C06C6CEB7F806C6CEBFF003900FF83FE6D
B45A011F13F0010190C7FC27387CB630>48 D<141E143E14FE1307133FB5FCA313CFEA00
0FB3B3A6007FB61280A4213779B630>I E
%EndDVIPSBitmapFont
/Fe 138[33 1[26 1[33 1[33 33 48 3[18 33 33 1[29 1[29
99[{TeXBase1Encoding ReEncodeFont}11 66.4176 /Times-Italic
rf /Ff 139[18 26 22 2[33 33 52 3[18 33 1[22 29 33 29
33 29 3[22 1[22 25[48 8[33 9[17 1[17 44[{TeXBase1Encoding ReEncodeFont}
20 66.4176 /Times-Roman rf /Fg 206[25 49[{TeXBase1Encoding ReEncodeFont}
1 49.8132 /Times-Roman rf /Fh 206[29 49[{TeXBase1Encoding ReEncodeFont}
1 58.1154 /Times-Roman rf
%DVIPSBitmapFont: Fi cmr7 7 1
/Fi 1 52 df<13FF000313E0380F01F8381C007C0030137E003C133E007E133FA4123CC7
123E147E147C5C495AEB07E03801FF8091C7FC380001E06D7E147C80143F801580A21238
127C12FEA21500485B0078133E00705B6C5B381F01F03807FFC0C690C7FC19277DA521>
51 D E
%EndDVIPSBitmapFont
/Fj 138[40 5[40 40 40 3[40 40 40 40 40 40 40 1[40 10[40
10[40 7[40 8[40 5[40 52[{TeXBase1Encoding ReEncodeFont}17
66.4176 /Courier rf /Fk 138[46 1[32 37 2[42 46 1[23 46
1[23 46 42 1[37 46 37 46 19[60 7[51 18[42 42 42 2[21
28 11[28 33[{TeXBase1Encoding ReEncodeFont}22 83.022
/Times-Bold rf
%DVIPSBitmapFont: Fl cmr10 10 3
/Fl 3 62 df<EB03F8EB1FFF90387E0FC09038F803E03901E000F0484813780007147C48
487FA248C77EA2481580A3007EEC0FC0A600FE15E0B3007E15C0A4007F141F6C1580A36C
15006D5B000F143EA26C6C5B6C6C5B6C6C485A6C6C485A90387E0FC0D91FFFC7FCEB03F8
233A7DB72A>48 D<EB01C013031307131F13FFB5FCA2131F1200B3B3A8497E007FB512F0
A31C3879B72A>I<007FB812F8B912FCA26C17F8CCFCAE007FB812F8B912FCA26C17F836
167B9F41>61 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fm cmsy7 7 2
/Fm 2 49 df<1338A50060130C00F8133E00FC137E00FE13FE383FBBF83807FFC0000113
00EA007C48B4FC000713C0383FBBF838FE38FE00FC137E00F8133E0060130C00001300A5
17197B9A22>3 D<13E0EA01F0EA03F8A3EA07F0A313E0A2120F13C0A3EA1F80A21300A2
5A123EA35AA3127812F8A25A12100D1E7D9F13>48 D E
%EndDVIPSBitmapFont
/Fn 133[32 37 37 55 1[42 23 32 32 1[42 42 42 60 23 2[23
42 42 23 37 42 37 42 42 94[42 2[{TeXBase1Encoding ReEncodeFont}23
83.022 /Times-Italic rf
%DVIPSBitmapFont: Fo cmmi10 10 12
/Fo 12 121 df<EC3FE0903801FFFC010713FF011F148090397F801FC09038F80007D801
E01303484890C7FC48C9FCA21206A5000713F038039FFF3801FF0F14FF38039FFE48C9FC
120E5A5A123012701260A212E0A215080060141C00701418007814386C14F0391F8007E0
6CB55A6C91C7FC000113FC38003FE022287FA527>34 D<121C127FEAFF80A5EA7F00121C
0909798817>58 D<121C127FEAFF80A213C0A3127F121C1200A412011380A2120313005A
1206120E5A5A5A12600A19798817>I<1760177017F01601A21603A21607160FA24C7EA2
16331673166316C3A2ED0183A2ED0303150683150C160115181530A21560A215C0140115
80DA03007FA202061300140E140C5C021FB5FC5CA20260C7FC5C83495A8349C8FC1306A2
5BA25B13385B01F01680487E000716FFB56C013F13FF5EA2383C7DBB3E>65
D<4BB4FC031F13F09238FE01FC913903F0007EDA07C0EB1F80DA1F80EB0FC0023EC7EA07
E002FCEC03F0495A4948EC01F8495A4948EC00FC495A013F16FE49C9FC13FE187F485A12
035B12075B120F4916FF121FA2485AA34848ED01FEA448C9EA03FCA3EF07F8A218F0170F
18E0171F18C0EF3F807EEF7F0017FEDA07C05B6C90391FF001F8903980383803001F496C
485A9139E00C0FE0260FC0C0EB1F80D807E1D90E3FC7FC0280137ED803F1EB07F8D801F9
5C3A007FC00FC0903A3FE07F0003903807FFFE0100018F5BDA000F1306170E171E705A17
7CEEC1F816FF5FA25F5F6F5B6F48C7FCED00F8384B7CBA42>81 D<49B500F890387FFFF0
95B5FC1AE0D90003018090380FFC004BC713E00201ED07804EC7FC6E6C140E606F5C705B
606F6C485A4D5A031F91C8FCEEE0065F6F6C5A5F03075B705A16F96FB45A94C9FC6F5AA3
6F7EA34B7FED037F9238063FC0150E4B6C7E1538ED700F03E07F15C04A486C7EEC030002
0613034A805C4A6D7E14704A1300494880495A49C86C7E130E011E153F017E4B7ED803FF
4B7E007F01E0011FEBFFC0B5FC6144397EB845>88 D<147E903803FF8090390FC1C38090
391F00EFC0017E137F49133F485A4848EB1F8012075B000F143F48481400A2485A5D007F
147E90C7FCA215FE485C5AA214015D48150CA21403EDF01C16181407007C1538007E010F
1330003E131F027B13706C01E113E03A0F83C0F9C03A03FF007F80D800FCEB1F0026267D
A42C>97 D<133FEA1FFFA3C67E137EA313FE5BA312015BA312035BA31207EBE0FCEBE3FF
9038E707C0390FFE03E09038F801F001F013F8EBE000485A15FC5BA2123F90C7FCA21401
5A127EA2140312FE4814F8A2140715F05AEC0FE0A215C0EC1F80143F00781400007C137E
5C383C01F86C485A380F07C06CB4C7FCEA01FC1E3B7CB924>I<02FC13C0903803FF0190
380F838390383F01C790397E00EF8049137F485A4848133F000715005B485A001F5C157E
485AA2007F14FE90C75AA3481301485CA31403485CA314075D140F127C141F007E495A00
3E137F381F01EF380F839F3903FF1F80EA00FC1300143F92C7FCA35C147EA314FE5C1301
90387FFFF0A322357DA425>113 D<01F8EB03C0D803FEEB07E0D8070F130F000E018013
F0121C12180038140700301403D8701F130112601500D8E03F14E000C090C7FC5BEA007E
16C013FE5B1501000115805B150316001203495B1506150E150C151C151815385D00015C
6D485A6C6C485AD97E0FC7FCEB1FFEEB07F024267EA428>118 D<01F816F0D803FE9138
E001F8D8070F903801F003000ED9800314FC121C12180038020713010030EDE000D8701F
167C1260030F143CD8E03F163800C001005B5BD8007E131F183001FE5C5B033F14700001
17604991C7FCA218E000034A14C049137E17011880170318005F03FE1306170E00010101
5C01F801BF5B3B00FC039F8070903A7E0F0FC0E0903A1FFC03FFC0902703F0007FC7FC36
267EA43B>I<903907E001F090391FF807FC9039783E0E0F9039E01F1C1FD801C0903838
3F803A03800FF07F0100EBE0FF5A000E4A1300000C157E021F133C001C4AC7FC1218A2C7
123FA292C8FCA25CA2147EA214FEA24A130CA20101141C001E1518003F5BD87F81143801
835C00FF1560010714E03AFE0E7C01C0D87C1C495A2778383E0FC7FC391FF00FFC3907C0
03F029267EA42F>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fp cmsy10 10 6
/Fp 6 107 df<121C127FEAFF80A5EA7F00121C0909799917>1 D<91381FFFFE91B6FC13
03010F14FED91FF0C7FCEB7F8001FEC8FCEA01F8485A485A485A5B48C9FCA2123EA25AA2
127812F8A25AA2B712FE16FFA216FE00F0C9FCA27EA21278127CA27EA27EA26C7E7F6C7E
6C7E6C7EEA00FEEB7F80EB1FF06DB512FE010314FF1300021F13FE283279AD37>50
D<18F017011707A3170FA2171F60173F1737177F176F17EF17CF04017F178F1603170FEE
0707160EA2161C161816381630167016E0A2ED01C016801503ED0700A2150E5DA25D1578
15705D02018103CFB5FCEC03BF4AB6FCA2020EC71203141E5C143802788100205B386001
E0EAF0036C4848140126FE1F8081B5C8FC190C49EEFF3C496F13F06C4817E06C4817806C
48EE7E00D8078093C7FC3E407DBB42>65 D<EC01F8140FEC3F80ECFC00495A495A495AA2
130F5CB3A7131F5C133F49C7FC13FEEA03F8EA7FE048C8FCEA7FE0EA03F8EA00FE137F6D
7E131F80130FB3A7801307A26D7E6D7E6D7EEC3F80EC0FF814011D537ABD2A>102
D<12FCEAFFC0EA07F0EA01FCEA007E7F80131F80130FB3A7801307806D7E6D7EEB007EEC
1FF0EC07F8EC1FF0EC7E00495A495A495A5C130F5CB3A7131F5C133F91C7FC137E485AEA
07F0EAFFC000FCC8FC1D537ABD2A>I<126012F0B3B3B3B3A91260045377BD17>106
D E
%EndDVIPSBitmapFont
/Fq 75[28 28[83 42 1[37 37 24[37 42 42 60 42 42 23 32
28 42 42 42 42 65 23 42 23 23 42 42 28 37 42 37 42 37
3[28 1[28 3[78 2[51 46 55 1[46 1[60 74 51 2[28 60 60
46 51 60 55 1[60 1[37 3[23 23 42 42 42 42 42 42 42 42
42 42 23 21 28 21 2[28 28 28 22[28 13[46 2[{
TeXBase1Encoding ReEncodeFont}71 83.022 /Times-Roman
rf /Fr 137[45 45 45 45 45 1[45 45 45 45 45 45 45 45 45
45 45 45 45 45 1[45 10[45 8[45 1[45 7[45 2[45 5[45 5[45
5[45 1[45 44[{TeXBase1Encoding ReEncodeFont}29 74.7198
/Courier rf /Fs 75[25 29[37 27[33 37 37 54 37 37 21 29
25 37 37 37 37 58 21 37 21 21 37 37 25 33 37 33 37 33
3[25 1[25 1[54 1[71 54 54 46 42 50 54 42 54 54 66 46
54 29 25 54 54 42 46 54 50 50 54 6[21 37 37 37 37 37
37 37 37 37 37 1[19 25 19 2[25 25 25 58 20[21 25 13[42
2[{TeXBase1Encoding ReEncodeFont}75 74.7198 /Times-Roman
rf
%DVIPSBitmapFont: Ft cmr6 6 2
/Ft 2 51 df<13E01201120712FF12F91201B3A7487EB512C0A212217AA01E>49
D<EA01FC3807FF80381C0FC0383003E0386001F0EB00F812F86C13FCA2147C1278003013
FCC7FC14F8A2EB01F0EB03E014C0EB0780EB0F00131E13385B5B3801C00CEA0380380600
185A5A383FFFF85AB512F0A216217CA01E>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fu cmr8 8 2
/Fu 2 51 df<130C133C137CEA03FC12FFEAFC7C1200B3B113FE387FFFFEA2172C7AAB23
>49 D<EB7F803801FFF0380780FC380E003F48EB1F8048EB0FC05A0060EB07E012F000FC
14F07E1403A3007C1307C7FCA215E0140F15C0141F1580EC3F00147E147C5C495A495A49
5A495A011EC7FC5B5B4913305B485A4848136048C7FC000E14E0001FB5FC5A4814C0B6FC
A21C2C7DAB23>I E
%EndDVIPSBitmapFont
/Fv 137[44 3[39 2[50 2[28 44 1[28 50 6[50 10[61 8[83
1[66 44 29[25 44[{TeXBase1Encoding ReEncodeFont}13 99.6264
/Times-Italic rf /Fw 198[23 23 23 23 23 23 23 23 23 23
48[{TeXBase1Encoding ReEncodeFont}10 41.511 /Helvetica
rf /Fx 75[40 57[53 60 60 2[66 40 47 53 1[66 60 66 100
33 1[40 33 66 60 40 53 66 53 66 60 12[80 66 86 1[73 6[47
1[93 3[86 1[86 11[60 60 60 60 60 4[30 4[40 22[40 16[{
TeXBase1Encoding ReEncodeFont}39 119.552 /Times-Bold
rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: a4
a4
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 TeXcolorgray Black 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 224 267 a Fx(\020)201 294
y(Cer)n(n)467 293 y(\264)457 294 y(y')l(s)30 b(conjectur)n(e)g(and)h
(the)f(r)n(oad)g(coloring)g(pr)n(oblem)p 0 TeXcolorgray
-2857 w Fw(1)p 0 TeXcolorgray 876 609 a Fv(J)m(arkk)o(o)24
b(Kari)1350 573 y Fu(1)1389 609 y Fv(,)h(Mikhail)f(V)-11
b(olk)o(o)o(v)2038 573 y Fu(2)p 0 TeXcolorgray -106 609
a Fw(2)p 0 TeXcolorgray 1040 760 a Ft(1)1075 791 y Fs(Department)19
b(of)g(Mathematics)1032 883 y(FI-20014)h(Uni)n(v)o(ersity)f(of)g(T)m
(urku)1254 974 y(T)m(urku,)g(Finland)805 1081 y Ft(2)840
1112 y Fs(Department)g(of)g(Mathematics)h(and)g(Mechanics)1039
1204 y(620083)h(Ural)d(State)g(Uni)n(v)o(ersity)1164
1295 y(Ekaterinb)o(ur)o(g,)h(Russia)613 1386 y(email:)12
b Fr(jkari@utu.fi,)t(Mikhail.Volkov@usu.ru)1114 1572
y Fs(March)20 b(1,)f(2010)76 b(23)13 b(h)g(25)p 0 TeXcolorgray
-106 1558 a Fw(3)p 0 TeXcolorgray -510 2050 460 4 v -510
2159 4 109 v -482 2122 a Fr(chapterKV)p -53 2159 V -510
2162 460 4 v 0 2300 a Fs(2010)20 b(Mathematics)g(Subject)f
(Classi\002cation:)j(68Q45)p 0 TeXcolorgray -1574 w Fw(4)p
0 TeXcolorgray 0 2441 a Fs(K)n(e)o(y)d(w)o(ords:)25 b(Finite)18
b(automata,)i(Synchronizing)h(automata,)e(Reset)g(w)o(ords,)2055
2423 y(\020)2043 2441 y(Cern)6 b(\264)-31 b(y')l(s)19
b(conjecture,)h(Road)g(Col-)p 0 TeXcolorgray -3059 w
Fw(5)p 0 TeXcolorgray 0 2532 a Fs(oring)f(Problem)p 0
TeXcolorgray -535 w Fw(6)p 0 TeXcolorgray 1247 2963 a
Fx(Contents)p 0 TeXcolorgray -1811 w Fw(7)p 0 TeXcolorgray
0 3162 a Fq(1)83 b(Synchronizing)17 b(automata,)h(their)i(origins)g
(and)f(importance)995 b(1)p 0 TeXcolorgray -3059 w Fw(8)p
0 TeXcolorgray 0 3262 a Fq(2)83 b(Algorithmic)18 b(and)i(comple)o(xity)
e(issues)1628 b(4)p 0 TeXcolorgray -3059 w Fw(9)p 0 TeXcolorgray
0 3361 a Fq(3)83 b(The)288 3342 y(\020)274 3361 y(Cern)7
b(\264)-35 b(y)20 b(conjecture)2065 b(4)p 0 TeXcolorgray
-3082 w Fw(10)p 0 TeXcolorgray 0 3461 a Fq(4)83 b(The)19
b(Road)h(Coloring)f(Problem)1842 b(4)p 0 TeXcolorgray
-3082 w Fw(11)p 0 TeXcolorgray 0 3560 a Fq(5)83 b(Generalizations)2263
b(4)p 0 TeXcolorgray -3082 w Fw(12)p 0 TeXcolorgray 0
3660 a Fq(References)2541 b(4)p 0 TeXcolorgray -3082
w Fw(13)p 0 TeXcolorgray 0 3760 a Fq(Inde)o(x)2721 b(5)p
0 TeXcolorgray -3082 w Fw(14)p 0 TeXcolorgray 30 4190
a Fx(1)59 b(Synchr)n(onizing)32 b(automata,)d(their)h(origins)g(and)h
(importance)p 0 TeXcolorgray -3052 w Fw(15)p 0 TeXcolorgray
0 4390 a Fq(A)25 b(complete)e(deterministic)h(\002nite)h(automaton)d
(\(DF)-6 b(A\))25 b Fp(A)g Fq(with)g(input)f(alphabet)f
Fo(A)i Fq(and)f(state)i(set)p 0 TeXcolorgray -3082 w
Fw(16)p 0 TeXcolorgray 0 4489 a Fo(Q)f Fq(is)i(called)e
Fn(sync)o(hr)l(onizing)e Fq(if)j(there)e(e)o(xists)i(a)g(w)o(ord)e
Fo(w)35 b Fp(2)e Fo(A)1867 4459 y Fm(\003)1931 4489 y
Fq(whose)25 b(action)f(resets)i Fp(A)p Fq(,)h(that)f(is,)p
0 TeXcolorgray -3082 w Fw(17)p 0 TeXcolorgray 0 4589
a Fo(w)e Fq(lea)n(v)o(es)e(the)f(automaton)e(in)j(one)e(particular)g
(state)i(no)f(matter)g(at)h(which)e(state)i(in)g Fo(Q)f
Fq(it)h(is)g(applied:)p 0 TeXcolorgray -3083 w Fw(18)p
0 TeXcolorgray 0 4688 a Fo(q)g Fp(\001)e Fo(w)27 b Fl(=)e
Fo(q)318 4658 y Fm(0)360 4688 y Fp(\001)20 b Fo(w)k Fq(for)d(all)h
Fo(q)s(;)14 b(q)827 4658 y Fm(0)875 4688 y Fp(2)25 b
Fo(Q)p Fq(.)k(An)o(y)20 b(w)o(ord)h Fo(w)j Fq(with)e(this)f(property)e
(is)k(said)e(to)h(be)f(a)g Fn(r)m(eset)j Fq(w)o(ord)p
0 TeXcolorgray -3083 w Fw(19)p 0 TeXcolorgray 0 4788
a Fq(for)c(the)g(automaton.)p 0 TeXcolorgray -743 w Fw(20)p
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 2 2
TeXDict begin 2 1 bop 0 TeXcolorgray 0 TeXcolorgray 0
71 a Fq(2)1160 b Fs(J.)18 b(Kari,)h(M.)f(V)-10 b(olk)o(o)o(v)p
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
1240 1010 a @beginspecial @setspecial
 !BP [] 0.0 setdash 0.39833 setlinewidth 0 setgray 0.0 56.90521 22.7417
22.7417 11.37085 !psovalpath stroke
 
@endspecial 1219
565 a Fq(0)1240 1010 y @beginspecial @setspecial
 !BP [] 0.0 setdash 0.39833 setlinewidth 0 setgray 56.90521 56.90521
22.7417 22.7417 11.37085 !psovalpath stroke
 
@endspecial
1692 566 a(1)1240 1010 y @beginspecial @setspecial
 !BP [] 0.0 setdash 0.39833 setlinewidth 0 setgray 56.90521 0.0 22.7417
22.7417 11.37085 !psovalpath stroke
 
@endspecial
1692 1038 a(2)1240 1010 y @beginspecial @setspecial
 !BP [] 0.0 setdash 0.39833 setlinewidth 0 setgray 0.0 0.0 22.7417
22.7417 11.37085 !psovalpath stroke
 
@endspecial
1219 1037 a(3)1240 1010 y @beginspecial @setspecial
 !BP [] 0.0 setdash 0.39833 setlinewidth 0 setgray 0.0 56.90521 22.7417
22.7417 11.37085 !psovalpath /path!a false upath cvlit def 56.90521
56.90521 22.7417 22.7417 11.37085 !psovalpath /path!b false upath cvlit
def 0 4.01183 20 4.26788 4.01183 1 4.01183 20 4.26788 4.01183 0.0 56.88268
18.96089 56.88268 37.92178 56.88268 56.88268 56.88268 !ps_r_cbezier
 
@endspecial
1418 498 a Fo(a;)14 b(b)1240 1010 y @beginspecial @setspecial
 !BP [] 0.0 setdash 0.39833 setlinewidth 0 setgray 56.90521 56.90521
22.7417 22.7417 11.37085 !psovalpath /path!a false upath cvlit def
56.90521 0.0 22.7417 22.7417 11.37085 !psovalpath /path!b false upath
cvlit def 0 4.01183 20 4.26788 4.01183 1 4.01183 20 4.26788 4.01183
56.88268 56.88268 56.88268 37.92178 56.88268 18.96089 56.88268 0.0
!ps_r_cbezier


@endspecial 1736 802 a(b)1240 1010 y @beginspecial @setspecial
 !BP [] 0.0 setdash 0.39833 setlinewidth 0 setgray 56.90521 0.0 22.7417
22.7417 11.37085 !psovalpath /path!a false upath cvlit def 0.0 0.0
22.7417 22.7417 11.37085 !psovalpath /path!b false upath cvlit def
0 4.01183 20 4.26788 4.01183 1 4.01183 20 4.26788 4.01183 56.88268
0.0 37.92178 0.0 18.96089 0.0 0.0 0.0 !ps_r_cbezier


@endspecial 1459 1091 a(b)1240 1010 y @beginspecial
@setspecial
 !BP [] 0.0 setdash 0.39833 setlinewidth 0 setgray 0.0 0.0 22.7417
22.7417 11.37085 !psovalpath /path!a false upath cvlit def 0.0 56.90521
22.7417 22.7417 11.37085 !psovalpath /path!b false upath cvlit def
0 4.01183 20 4.26788 4.01183 1 4.01183 20 4.26788 4.01183 0.0 0.0 0.0
18.96089 0.0 37.92178 0.0 56.88268 !ps_r_cbezier
 
@endspecial 1181 802 a(b)1240 1010 y @beginspecial
@setspecial
 !BP [] 0.0 setdash 0.39833 setlinewidth 0 setgray 56.90521 56.90521
22.7417 22.7417 11.37085 !psovalpath /path!a false upath cvlit def
56.90521 56.90521 22.7417 22.7417 11.37085 !psovalpath /path!b false
upath cvlit def 0 4.01183 20 4.26788 4.01183 1 4.01183 20 4.26788 4.01183
56.88268 56.88268 61.2036 116.8639 116.8639 61.2036 56.88268 56.88268
!ps_r_cbezier
 
@endspecial 1927 319 a(a)1240 1010 y @beginspecial
@setspecial
 !BP [] 0.0 setdash 0.39833 setlinewidth 0 setgray 56.90521 0.0 22.7417
22.7417 11.37085 !psovalpath /path!a false upath cvlit def 56.90521
0.0 22.7417 22.7417 11.37085 !psovalpath /path!b false upath cvlit
def 0 4.01183 20 4.26788 4.01183 1 4.01183 20 4.26788 4.01183 56.88268
0.0 116.8639 -4.32092 61.2036 -59.98123 56.88268 0.0 !ps_r_cbezier
 
@endspecial 1927 1264 a(a)1240 1010 y @beginspecial
@setspecial
 !BP [] 0.0 setdash 0.39833 setlinewidth 0 setgray 0.0 0.0 22.7417
22.7417 11.37085 !psovalpath /path!a false upath cvlit def 0.0 0.0
22.7417 22.7417 11.37085 !psovalpath /path!b false upath cvlit def
0 4.01183 20 4.26788 4.01183 1 4.01183 20 4.26788 4.01183 0.0 0.0 -4.32092
-59.98123 -59.98123 -4.32092 0.0 0.0 !ps_r_cbezier
 
@endspecial 982 1264 a(a)p 0 TeXcolorgray
844 1399 a Fk(Figur)o(e)19 b(1.)25 b Fq(A)c(synchronizing)c(automaton)p
0 TeXcolorgray -510 1354 460 4 v -510 1465 4 111 v -482
1428 a Fr(KV:fig:C4)p -53 1465 V -510 1468 460 4 v 0
TeXcolorgray 118 1735 a Fq(Figure)p 361 1735 4 107 v
0 TeXcolorgray 365 1673 a Fj(KV:fig:C4)p 0 TeXcolorgray
365 1686 359 4 v 361 1735 a Fq(1)26 b(sho)n(ws)f(an)h(e)o(xample)e(of)h
(a)h(synchronizing)c(automaton)i(with)i(4)f(states.)42
b(The)25 b(reader)p 0 TeXcolorgray -3083 w Fw(21)p 0
TeXcolorgray 0 1834 a Fq(can)18 b(easily)g(v)o(erify)e(that)i(the)g(w)o
(ord)f Fo(ab)1092 1804 y Fi(3)1129 1834 y Fo(ab)1209
1804 y Fi(3)1245 1834 y Fo(a)i Fq(resets)f(the)g(automaton)e(lea)n
(ving)h(it)h(in)g(the)g(state)h(1.)24 b(W)m(ith)p 0 TeXcolorgray
-3082 w Fw(22)p 0 TeXcolorgray 0 1934 a Fq(some)n(what)d(more)h(ef)n
(fort)f(one)h(can)g(also)g(check)g(that)g Fo(ab)1637
1904 y Fi(3)1674 1934 y Fo(ab)1754 1904 y Fi(3)1791 1934
y Fo(a)g Fq(is)i(the)e(shortest)g(reset)h(w)o(ord)e(for)h(this)p
0 TeXcolorgray -3082 w Fw(23)p 0 TeXcolorgray 0 2034
a Fq(automaton.)51 b(The)29 b(e)o(xample)g(in)g(Figure)p
1236 2034 4 107 v 0 TeXcolorgray 1240 1971 a Fj(KV:fig:C4)p
0 TeXcolorgray 1240 1984 359 4 v 1236 2034 a Fq(1)h(is)h(due)e(to)1652
2014 y(\020)1638 2034 y(Cern)7 b(\264)-35 b(y,)32 b(a)e(Slo)o(v)n(ak)e
(computer)g(scientist,)k(in)p 0 TeXcolorgray -3082 w
Fw(24)p 0 TeXcolorgray 0 2133 a Fq(whose)18 b(pioneering)e(paper)i([16)
o(])g(the)h(notion)e(of)i(a)f(synchronizing)e(automaton)h(e)o
(xplicitly)g(appeared)p 0 TeXcolorgray -3084 w Fw(25)p
0 TeXcolorgray 0 2233 a Fq(for)28 b(the)h(\002rst)g(time.)50
b(\()676 2214 y(\020)662 2233 y(Cern)7 b(\264)-35 b(y)28
b(called)g(such)g(automata)g Fn(dir)m(ectable)p Fq(.)49
b(The)28 b(w)o(ord)g Fn(sync)o(hr)l(onizing)f Fq(in)p
0 TeXcolorgray -3082 w Fw(26)p 0 TeXcolorgray 0 2333
a Fq(this)22 b(conte)o(xt)f(w)o(as)h(probably)d(introduced)h(by)h
(Hennie)g([11)n(].)30 b(\))g(Implicitly)-5 b(,)20 b(ho)n(we)n(v)o(er)m
(,)f(this)k(concept)-3430 b Fk(Needs)-475 2432 y(double-)-475
2532 y(checking!!)p 0 TeXcolorgray -129 2333 a Fw(27)p
0 TeXcolorgray 0 2432 a Fq(has)23 b(been)f(around)f(since)i(the)g
(earliest)g(days)g(of)g(automata)e(theory)-5 b(.)32 b(The)22
b(v)o(ery)g(\002rst)h(synchronizing)p 0 TeXcolorgray
-3085 w Fw(28)p 0 TeXcolorgray 0 2532 a Fq(automaton)h(that)j(we)f
(were)g(able)g(to)h(trace)f(back)g(in)g(the)g(literature)g(appeared)e
(in)i(Ashby')-5 b(s)26 b(classic)p 0 TeXcolorgray -3081
w Fw(29)p 0 TeXcolorgray 0 2631 a Fq(book)19 b([1)o(,)h(pp.)13
b(60\22661].)p 0 TeXcolorgray -803 w Fw(30)p 0 TeXcolorgray
118 2731 a Fq(In)26 b([16)n(])g(the)g(notion)e(of)i(a)g(synchronizing)c
(automaton)i(arose)i(within)f(the)h(classic)g(frame)n(w)o(ork)p
0 TeXcolorgray -3084 w Fw(31)p 0 TeXcolorgray 0 2831
a Fq(of)e(Moore')-5 b(s)25 b(\223Gedank)o(en-e)o(xperiments\224)20
b([12)n(].)39 b(F)o(or)24 b(Moore)g(and)g(his)i(follo)n(wers)d
(\002nite)i(automata)p 0 TeXcolorgray -3083 w Fw(32)p
0 TeXcolorgray 0 2930 a Fq(serv)o(ed)c(as)h(a)g(mathematical)f(model)f
(of)i(de)n(vices)f(w)o(orking)f(in)i(discrete)f(mode,)g(such)h(as)g
(computers)p 0 TeXcolorgray -3084 w Fw(33)p 0 TeXcolorgray
0 3030 a Fq(or)d(relay)f(control)g(systems.)25 b(This)19
b(leads)g(to)g(the)g(follo)n(wing)e(natural)i(problem:)j(ho)n(w)d(can)g
(we)g(restore)p 0 TeXcolorgray -3083 w Fw(34)p 0 TeXcolorgray
0 3130 a Fq(control)27 b(o)o(v)o(er)g(such)h(a)h(de)n(vice)f(if)g(we)h
(do)f(not)g(kno)n(w)f(its)j(current)d(state)i(b)n(ut)f(can)g(observ)o
(e)f(outputs)p 0 TeXcolorgray -3083 w Fw(35)p 0 TeXcolorgray
0 3229 a Fq(produced)20 b(by)j(the)g(de)n(vice)f(under)g(v)n(arious)g
(actions?)33 b(Moore)22 b([12)n(])i(has)f(sho)n(wn)f(that)h(under)f
(certain)p 0 TeXcolorgray -3083 w Fw(36)p 0 TeXcolorgray
0 3329 a Fq(conditions)k(one)i(can)f(uniquely)f(determine)h(the)g
(state)i(at)f(which)g(the)g(automaton)d(arri)n(v)o(es)i(after)h(a)p
0 TeXcolorgray -3082 w Fw(37)p 0 TeXcolorgray 0 3428
a Fq(suitable)21 b(sequence)f(of)h(actions)f(\(called)h(an)g
Fn(e)n(xperiment)q Fq(\).)28 b(Moore')-5 b(s)20 b(e)o(xperiments)f
(were)i(adapti)n(v)o(e,)p 0 TeXcolorgray -3084 w Fw(38)p
0 TeXcolorgray 0 3528 a Fq(that)j(is,)j(each)d(ne)o(xt)f(action)h(w)o
(as)h(selected)g(on)f(the)g(basis)h(of)f(the)g(outputs)g(caused)g(by)g
(the)g(pre)n(vious)p 0 TeXcolorgray -3084 w Fw(39)p 0
TeXcolorgray 0 3628 a Fq(actions.)38 b(Ginsb)n(ur)o(g)23
b([9)o(])i(considered)e(more)h(restricted)g(e)o(xperiments)f(that)i(he)
f(called)h Fn(uniform)p Fq(.)38 b(A)p 0 TeXcolorgray
-3082 w Fw(40)p 0 TeXcolorgray 0 3727 a Fq(uniform)27
b(e)o(xperiment)672 3697 y Fh(1)732 3727 y Fq(is)j(just)g(a)f(\002x)o
(ed)g(sequence)f(of)g(actions,)j(that)e(is,)j(a)e(w)o(ord)e(o)o(v)o(er)
g(the)h(input)p 0 TeXcolorgray -3083 w Fw(41)p 0 TeXcolorgray
0 3827 a Fq(alphabet;)c(thus,)g(in)f(Ginsb)n(ur)o(g')-5
b(s)23 b(e)o(xperiments)f(outputs)h(were)h(only)f(used)h(for)g
(calculating)f(the)h(re-)p 0 TeXcolorgray -3083 w Fw(42)p
0 TeXcolorgray 0 3927 a Fq(sulting)g(state)g(at)h(the)e(end)h(of)f(an)h
(e)o(xperiment.)34 b(From)23 b(this,)j(just)e(one)f(further)g(step)h(w)
o(as)h(needed)d(to)p 0 TeXcolorgray -3082 w Fw(43)p 0
TeXcolorgray 0 4026 a Fq(come)e(to)h(the)g(setting)g(in)g(which)f
(outputs)g(were)h(not)f(used)h(at)g(all.)27 b(It)21 b(should)f(be)h
(noted)f(that)h(this)g(set-)p 0 TeXcolorgray -3082 w
Fw(44)p 0 TeXcolorgray 0 4126 a Fq(ting)f(is)i(by)e(no)g(means)h
(arti\002cial\227there)f(e)o(xist)g(man)o(y)g(practical)g(situations)g
(when)h(it)g(is)g(technically)p 0 TeXcolorgray -3083
w Fw(45)p 0 TeXcolorgray 0 4225 a Fq(impossible)h(to)g(observ)o(e)f
(output)f(signals.)32 b(\(Think)20 b(of)i(a)h(satellite)g(which)e
(loops)h(around)e(the)i(Moon)p 0 TeXcolorgray -3083 w
Fw(46)p 0 TeXcolorgray 0 4325 a Fq(and)e(cannot)f(be)h(controlled)e
(from)h(the)i(Earth)e(while)h(\223behind\224)f(the)h(Moon.\))p
0 TeXcolorgray -2370 w Fw(47)p 0 TeXcolorgray 118 4425
a Fq(The)i(original)g(\223Gedank)o(en-e)o(xperiments\224)17
b(moti)n(v)n(ation)k(for)h(studying)f(synchronizing)f(autom-)p
0 TeXcolorgray -3084 w Fw(48)p 0 TeXcolorgray 0 4524
a Fq(ata)f(is)g(still)h(of)e(importance,)f(and)h(reset)h(w)o(ords)f
(are)g(frequently)f(applied)g(in)i(model-based)d(testing)j(of)p
0 TeXcolorgray -3083 w Fw(49)p 0 TeXcolorgray 0 4624
a Fq(reacti)n(v)o(e)j(systems.)33 b(See)24 b([6)o(,)f(3])g(as)g
(typical)g(samples)g(of)f(technical)g(contrib)n(utions)f(to)i(the)g
(area)g(and)p 0 TeXcolorgray -3083 w Fw(50)p 0 TeXcolorgray
0 TeXcolorgray 0 4710 1182 4 v 90 4766 a Fg(1)120 4789
y Ff(After)17 b([8)q(],)f(the)i(name)f Fe(homing)h(sequence)h
Ff(has)e(become)h(standard)h(for)e(the)h(notion.)p 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 3 3
TeXDict begin 3 2 bop 0 TeXcolorgray 0 TeXcolorgray 746
53 a Fs(\020)733 71 y(Cern)6 b(\264)-31 b(y')l(s)20 b(conjecture)f(and)
h(the)f(road)h(coloring)f(problem)693 b Fq(3)p 0 TeXcolorgray
0 282 a([15)o(])20 b(for)g(a)g(recent)g(surv)o(e)o(y)-5
b(.)p 0 TeXcolorgray -924 w Fw(51)p 0 TeXcolorgray 118
382 a Fq(Another)23 b(stong)h(moti)n(v)n(ation)f(comes)i(from)e(the)i
(coding)e(theory)-5 b(.)36 b(W)-7 b(e)26 b(refer)e(to)h([2)o(,)h
(Chapters)e(3)p 0 TeXcolorgray -3082 w Fw(52)p 0 TeXcolorgray
0 482 a Fq(and)17 b(10])h(for)f(a)h(detailed)g(account)e(of)i(profound)
d(connections)h(between)h(codes)h(and)f(automata;)h(here)p
0 TeXcolorgray -3083 w Fw(53)p 0 TeXcolorgray 0 581 a
Fq(we)h(restrict)g(ourselv)o(es)e(to)i(a)g(brief)f(introduction)e(into)
i(a)h(special)g(\(b)n(ut)f(still)i(v)o(ery)d(important\))g(case)i(of)p
0 TeXcolorgray -3083 w Fw(54)p 0 TeXcolorgray 0 681 a
Fq(maximal)d(pre\002x)f(codes.)24 b(Recall)17 b(that)g(a)g
Fn(pr)m(e\002x)f(code)g Fq(o)o(v)o(er)f(a)i(\002nite)f(alphabet)g
Fo(A)h Fq(is)h(a)f(set)g Fo(X)23 b Fq(of)17 b(w)o(ords)p
0 TeXcolorgray -3083 w Fw(55)p 0 TeXcolorgray 0 781 a
Fq(in)j Fo(A)147 750 y Fm(\003)207 781 y Fq(such)g(that)g(no)g(w)o(ord)
g(of)g Fo(X)27 b Fq(is)21 b(a)g(pre\002x)f(of)g(another)f(w)o(ord)g(of)
h Fo(X)7 b Fq(.)25 b(A)c(pre\002x)f(code)f(is)j Fn(maximal)p
0 TeXcolorgray -3083 w Fw(56)p 0 TeXcolorgray 0 880 a
Fq(if)28 b(it)g(is)h(not)e(contained)g(in)g(another)g(pre\002x)g(code)g
(o)o(v)o(er)f(the)i(same)g(alphabet.)46 b(A)28 b(maximal)f(pre\002x)p
0 TeXcolorgray -3083 w Fw(57)p 0 TeXcolorgray 0 980 a
Fq(code)18 b Fo(X)26 b Fq(o)o(v)o(er)18 b Fo(A)i Fq(is)g
Fn(sync)o(hr)l(onized)g Fq(if)g(there)f(is)h(a)f(w)o(ord)g
Fo(x)k Fp(2)h Fo(X)1851 950 y Fm(\003)1908 980 y Fq(such)19
b(that)g(for)g(an)o(y)f(w)o(ord)g Fo(w)26 b Fp(2)e Fo(A)2894
950 y Fm(\003)2932 980 y Fq(,)p 0 TeXcolorgray -3082
w Fw(58)p 0 TeXcolorgray 0 1079 a Fq(one)17 b(has)i Fo(w)r(x)24
b Fp(2)f Fo(X)554 1049 y Fm(\003)592 1079 y Fq(.)i(Such)17
b(a)i(w)o(ord)e Fo(x)i Fq(is)g(called)f(a)g Fn(sync)o(hr)l(onizing)f
(wor)m(d)j Fq(for)e Fo(X)7 b Fq(.)24 b(The)18 b(adv)n(antage)e(of)p
0 TeXcolorgray -3083 w Fw(59)p 0 TeXcolorgray 0 1179
a Fq(synchronized)f(codes)i(is)i(that)e(the)o(y)g(are)h(able)f(to)h
(reco)o(v)o(er)e(after)h(a)h(loss)g(of)g(synchronization)c(between)p
0 TeXcolorgray -3083 w Fw(60)p 0 TeXcolorgray 0 1279
a Fq(the)22 b(decoder)e(and)h(the)g(coder)g(caused)g(by)g(channel)g
(errors:)27 b(in)22 b(the)f(case)i(of)e(such)g(a)h(loss,)h(it)f(suf)n
(\002ces)p 0 TeXcolorgray -3082 w Fw(61)p 0 TeXcolorgray
0 1378 a Fq(to)27 b(transmit)f(a)h(synchronizing)c(w)o(ord)j(and)g(the)
h(follo)n(wing)e(symbols)h(will)h(be)g(decoded)d(correctly)-5
b(.)p 0 TeXcolorgray -3084 w Fw(62)p 0 TeXcolorgray 0
1478 a Fq(Moreo)o(v)o(er)m(,)23 b(since)i(the)g(probability)e(that)j(a)
f(w)o(ord)f Fo(v)36 b Fp(2)c Fo(A)1715 1448 y Fm(\003)1779
1478 y Fq(contains)24 b(a)i(\002x)o(ed)e(w)o(ord)h Fo(x)h
Fq(as)g(a)f(f)o(actor)p 0 TeXcolorgray -3083 w Fw(63)p
0 TeXcolorgray 0 1578 a Fq(tends)16 b(to)h(1)f(when)g(the)h(length)e
(of)i Fo(v)j Fq(increases,)d(synchronized)c(codes)j(e)n(v)o(entually)f
(resynchronize)f(by)p 0 TeXcolorgray -3083 w Fw(64)p
0 TeXcolorgray 0 1677 a Fq(themselv)o(es,)19 b(after)h(suf)n
(\002ciently)f(man)o(y)g(symbols)g(being)g(sent.)25 b(\(As)c(sho)n(wn)e
(in)h([4],)g(the)g(latter)g(prop-)p 0 TeXcolorgray -3084
w Fw(65)p 0 TeXcolorgray 0 1777 a Fq(erty)j(in)g(f)o(act)g
(characterizes)f(synchronized)f(codes.\))33 b(The)23
b(follo)n(wing)e(simple)i(e)o(xample)f(illustrates)p
0 TeXcolorgray -3082 w Fw(66)p 0 TeXcolorgray 0 1876
a Fq(these)k(ideas:)36 b(let)26 b Fo(A)33 b Fl(=)f Fp(f)p
Fl(0)p Fo(;)14 b Fl(1)p Fp(g)24 b Fq(and)h Fo(X)39 b
Fl(=)32 b Fp(f)p Fl(000)p Fo(;)14 b Fl(0010)p Fo(;)g
Fl(0011)p Fo(;)g Fl(01)o(0)p Fo(;)g Fl(0)o(11)o(0)p Fo(;)g
Fl(0)o(11)o(1)p Fo(;)g Fl(1)o(0)p Fo(;)g Fl(1)o(10)o
Fo(;)g Fl(1)o(11)o Fp(g)p Fq(.)p 0 TeXcolorgray -3088
w Fw(67)p 0 TeXcolorgray 0 1976 a Fq(Then)24 b Fo(X)32
b Fq(is)26 b(a)g(maximal)e(pre\002x)h(code)f(and)h(one)f(can)h(easily)g
(check)g(that)g(each)g(of)g(the)g(w)o(ords)f(010,)p 0
TeXcolorgray -3083 w Fw(68)p 0 TeXcolorgray 0 2076 a
Fq(011110,)g(011111110,)e(.)12 b(.)g(.)38 b(is)26 b(a)g(synchronizing)c
(w)o(ord)i(for)h Fo(X)7 b Fq(.)40 b(F)o(or)24 b(instance,)i(if)f(the)h
(code)e(w)o(ord)p 0 TeXcolorgray -3083 w Fw(69)p 0 TeXcolorgray
0 2175 a Fq(000)i(has)h(been)g(sent)g(b)n(ut,)i(due)d(to)h(a)h(channel)
e(error)m(,)h(the)g(w)o(ord)f(100)g(has)h(been)g(recei)n(v)o(ed,)g(the)
g(de-)p 0 TeXcolorgray -3083 w Fw(70)p 0 TeXcolorgray
0 2275 a Fq(coder)h(interprets)h(10)g(as)h(a)g(code)f(w)o(ord,)i(and)e
(thus,)j(loses)e(synchronization.)49 b(Ho)n(we)n(v)o(er)m(,)30
b(with)g(a)p 0 TeXcolorgray -3082 w Fw(71)p 0 TeXcolorgray
0 2375 a Fq(high)25 b(probability)g(this)h(synchronization)d(loss)k
(only)f(propagates)e(for)h(a)i(short)f(while;)j(in)e(particu-)p
0 TeXcolorgray -3084 w Fw(72)p 0 TeXcolorgray 0 2474
a Fq(lar)m(,)i(the)f(decoder)f(de\002nitely)g(resynchronizes)e(as)k
(soon)e(as)i(it)g(encounters)d(one)h(of)h(the)g(se)o(gments)p
0 TeXcolorgray -3083 w Fw(73)p 0 TeXcolorgray 0 2574
a Fq(010,)22 b(011110,)f(011111110,)f(.)12 b(.)g(.)36
b(in)23 b(the)g(recei)n(v)o(ed)e(stream)i(of)f(symbols.)33
b(A)23 b(fe)n(w)g(samples)g(of)g(such)p 0 TeXcolorgray
-3083 w Fw(74)p 0 TeXcolorgray 0 2673 a Fq(streams)j(are)f(sho)n(wn)g
(in)g(Figure)p 981 2673 4 107 v 0 TeXcolorgray 985 2611
a Fj(KV:fig:decoding)p 0 TeXcolorgray 985 2624 598 4
v 981 2673 a Fq(2)g(in)h(which)f(v)o(ertical)g(lines)g(sho)n(w)g(the)h
(partition)e(of)h(each)g(stream)p 0 TeXcolorgray -3082
w Fw(75)p 0 TeXcolorgray 0 2773 a Fq(into)c(code)f(w)o(ords)g(and)g
(the)h(boldf)o(aced)e(code)h(w)o(ords)h(indicate)f(the)h(position)f(at)
h(which)f(the)h(decoder)p 0 TeXcolorgray -3084 w Fw(76)p
0 TeXcolorgray 0 2873 a Fq(resynchronizes.)p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 413 3066 a(Sent)258 b Fl(0)14
b(0)g(0)42 b Fp(j)23 b Fl(0)14 b(0)g(1)g(0)55 b Fp(j)23
b Fd(0)14 b(1)g(1)g(1)22 b Fp(j)h Fo(:)14 b(:)g(:)413
3166 y Fq(Recei)n(v)o(ed)99 b Fl(1)14 b(0)22 b Fp(j)h
Fl(0)14 b(0)g(0)21 b Fp(j)i Fl(1)14 b(0)22 b Fp(j)h Fd(0)14
b(1)g(1)g(1)22 b Fp(j)h Fo(:)14 b(:)g(:)p 364 3199 2226
4 v 413 3269 a Fq(Sent)258 b Fl(0)14 b(0)g(0)21 b Fp(j)i
Fl(0)14 b(1)g(1)g(1)21 b Fp(j)i Fl(1)14 b(1)g(0)21 b
Fp(j)i Fl(0)14 b(0)g(1)g(1)21 b Fp(j)i Fl(0)14 b(0)g(0)21
b Fp(j)i Fl(1)14 b(0)22 b Fp(j)h Fd(1)14 b(1)g(0)22 b
Fp(j)h Fo(:)14 b(:)g(:)413 3369 y Fq(Recei)n(v)o(ed)99
b Fl(1)14 b(0)22 b Fp(j)h Fl(0)14 b(0)g(1)g(1)20 b Fp(j)j
Fl(1)14 b(1)g(1)22 b Fp(j)h Fl(0)14 b(0)g(0)21 b Fp(j)i
Fl(1)14 b(1)g(0)22 b Fp(j)h Fl(0)14 b(0)g(1)g(0)20 b
Fp(j)j Fd(1)14 b(1)g(0)22 b Fp(j)h Fo(:)14 b(:)g(:)p
364 3402 V 413 3472 a Fq(Sent)258 b Fl(0)14 b(0)g(0)21
b Fp(j)i Fl(0)14 b(0)g(0)21 b Fp(j)i Fl(1)14 b(1)g(1)22
b Fp(j)h Fd(1)14 b(0)22 b Fp(j)h Fo(:)14 b(:)g(:)413
3571 y Fq(Recei)n(v)o(ed)99 b Fl(1)14 b(0)22 b Fp(j)h
Fl(0)14 b(0)g(0)21 b Fp(j)i Fl(0)14 b(1)g(1)g(1)21 b
Fp(j)i Fd(1)14 b(0)22 b Fp(j)h Fo(:)14 b(:)g(:)p 0 TeXcolorgray
868 3754 a Fk(Figur)o(e)20 b(2.)25 b Fq(Restoring)19
b(synchronization)p 0 TeXcolorgray -779 3709 729 4 v
-779 3820 4 111 v -751 3784 a Fr(KV:fig:decoding)p -53
3820 V -779 3823 729 4 v 0 TeXcolorgray 0 TeXcolorgray
-129 3923 a Fw(77)p 0 TeXcolorgray 118 4005 a Fq(If)25
b Fo(X)32 b Fq(is)26 b(a)g(\002nite)f(pre\002x)f(code)h(o)o(v)o(er)e(a)
j(\002nite)f(alphabet)f Fo(A)p Fq(,)j(then)e(its)h(decoding)d(can)i(be)
g(imple-)p 0 TeXcolorgray -3083 w Fw(78)p 0 TeXcolorgray
0 4104 a Fq(mented)g(by)h(a)g(deterministic)f(automaton)f(that)j(is)g
(de\002ned)e(as)h(follo)n(ws.)42 b(Let)27 b Fo(Q)f Fq(be)g(the)g(set)h
(of)f(all)p 0 TeXcolorgray -3082 w Fw(79)p 0 TeXcolorgray
0 4204 a Fq(proper)21 b(pre\002x)o(es)h(of)h(the)g(w)o(ords)g(in)g
Fo(X)30 b Fq(\(including)21 b(the)i(empty)f(w)o(ord)g
Fo(")p Fq(\).)34 b(F)o(or)22 b Fo(q)32 b Fp(2)c Fo(Q)23
b Fq(and)g Fo(a)28 b Fp(2)h Fo(A)p Fq(,)p 0 TeXcolorgray
-3082 w Fw(80)p 0 TeXcolorgray 0 4303 a Fq(de\002ne)p
0 TeXcolorgray -333 w Fw(81)p 0 TeXcolorgray 576 4468
a Fo(q)22 b Fp(\001)c Fo(a)23 b Fl(=)831 4326 y Fc(\()898
4411 y Fo(q)s(a)83 b Fq(if)20 b Fo(q)s(a)h Fq(is)g(a)g(proper)d
(pre\002x)h(of)h(a)h(w)o(ord)e(of)h Fo(X)h(;)898 4531
y(")128 b Fq(if)20 b Fo(q)s(a)j Fp(2)g Fo(X)e(:)0 4689
y Fq(The)33 b(resulting)f(automaton)g Fp(A)938 4701 y
Fb(X)1035 4689 y Fq(is)i(complete)e(whene)n(v)o(er)f(the)j(code)e
Fo(X)40 b Fq(is)34 b(maximal)f(and)f(it)i(is)p 0 TeXcolorgray
-3081 w Fw(82)p 0 TeXcolorgray 0 4789 a Fq(easy)c(to)g(see)h(that)f
Fp(A)631 4801 y Fb(X)725 4789 y Fq(is)h(a)f(synchronizing)d(automaton)h
(if)i(and)g(only)f(if)h Fo(X)37 b Fq(is)31 b(a)f(synchronized)p
0 TeXcolorgray -3085 w Fw(83)p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 4 4
TeXDict begin 4 3 bop 0 TeXcolorgray 0 TeXcolorgray 0
71 a Fq(4)1160 b Fs(J.)18 b(Kari,)h(M.)f(V)-10 b(olk)o(o)o(v)p
0 TeXcolorgray 0 282 a Fq(code.)49 b(Moreo)o(v)o(er)m(,)28
b(a)h(w)o(ord)f Fo(x)i Fq(is)f(synchronizing)d(for)i
Fo(X)35 b Fq(if)29 b(and)f(only)g(if)h Fo(x)h Fq(is)f(a)g(reset)g(w)o
(ord)f(for)p 0 TeXcolorgray -3083 w Fw(84)p 0 TeXcolorgray
0 382 a Fp(A)66 394 y Fb(X)161 382 y Fq(and)j(sends)g(all)h(states)g
(in)f Fo(Q)h Fq(to)f(the)g(state)h Fo(")p Fq(.)59 b(Figure)p
1834 382 4 107 v 0 TeXcolorgray 1838 320 a Fj(KV:fig:huffman)p
0 TeXcolorgray 1838 333 558 4 v 1834 382 a Fq(3)31 b(illustrates)h
(this)g(construction)d(for)p 0 TeXcolorgray -3083 w Fw(85)p
0 TeXcolorgray 0 482 a Fq(the)e(code)f Fo(X)42 b Fl(=)35
b Fp(f)p Fl(000)p Fo(;)14 b Fl(0010)p Fo(;)g Fl(0011)o
Fo(;)g Fl(01)o(0)p Fo(;)g Fl(0)o(11)o(0)p Fo(;)g Fl(0)o(11)o(1)p
Fo(;)g Fl(1)o(0)p Fo(;)g Fl(1)o(10)o Fo(;)g Fl(11)o(1)p
Fp(g)20 b Fq(considered)25 b(abo)o(v)o(e.)44 b(The)p
0 TeXcolorgray -3083 w Fw(86)p 0 TeXcolorgray 0 581 a
Fq(solid/dashed)19 b(lines)h(correspond)e(to)i(\(the)g(action)g(of\))f
(0/1.)p 0 TeXcolorgray 0 1160 a
 tx@Dict begin CP CP translate 0.4  0.4  scale NET  end
 0 1160 a 472 2105 a
 tx@Dict begin tx@NodeDict begin {47.60732 0.0 } false /N@14e 10 {InitPnode
} NewNode end end
 472
2105 a 472 2105 a
 tx@Dict begin tx@NodeDict begin {-47.60732 0.0 } false /N@14w 10 {InitPnode
} NewNode end end
 472 2105 a 472 2105 a
 tx@Dict begin tx@NodeDict begin {0.0 38.41095 } false /N@14n 10 {InitPnode
} NewNode end end
 472 2105 a 472
2105 a
 tx@Dict begin tx@NodeDict begin {0.0 -38.41095 } false /N@14s 10 {InitPnode
} NewNode end end
 472 2105 a 282 2105 a
 tx@Dict begin tx@NodeDict begin {12.80365 12.80365 45.80003 22.90001
0.0 } false /N@14 16 {InitRnode } NewNode end end
 282 2105 a 7 w @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.9 SLW 0. setgray  0. true 0.9 neg 12.80365
neg 44.90004 12.80365 .5 Frame  gsave 1. setgray fill grestore gsave
0.9 SLW 0. setgray 0 setlinecap stroke  grestore end
 
@endspecial 0 TeXcolorgray 472 2105 a
 tx@Dict begin CP CP translate 1.  1.  scale NET  end
 472
2105 a 472 2105 a
 tx@Dict begin CP CP translate 1.7  1.7  scale NET  end
 472 2105 a 389 2126 a Fl(0010)472 2105
y
 tx@Dict begin CP CP translate 1 1.7 div 1 1.7 div scale NET  end
 472 2105 a 472 2105 a
 tx@Dict begin CP CP translate 1 1. div 1 1. div scale NET  end
 472 2105 a 0 TeXcolorgray 945
2105 a
 tx@Dict begin tx@NodeDict begin {47.60732 0.0 } false /N@15e 10 {InitPnode
} NewNode end end
 945 2105 a 945 2105 a
 tx@Dict begin tx@NodeDict begin {-47.60732 0.0 } false /N@15w 10 {InitPnode
} NewNode end end
 945 2105 a 945 2105 a
 tx@Dict begin tx@NodeDict begin {0.0 38.41095 } false /N@15n 10 {InitPnode
} NewNode end end
 945
2105 a 945 2105 a
 tx@Dict begin tx@NodeDict begin {0.0 -38.41095 } false /N@15s 10 {InitPnode
} NewNode end end
 945 2105 a 755 2105 a
 tx@Dict begin tx@NodeDict begin {12.80365 12.80365 45.80003 22.90001
0.0 } false /N@15 16 {InitRnode } NewNode end end
 755 2105 a 7
w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.9 SLW 0. setgray  0. true 0.9 neg 12.80365
neg 44.90004 12.80365 .5 Frame  gsave 1. setgray fill grestore gsave
0.9 SLW 0. setgray 0 setlinecap stroke  grestore end
 
@endspecial 0 TeXcolorgray
945 2105 a
 tx@Dict begin CP CP translate 1.  1.  scale NET  end
 945 2105 a 945 2105 a
 tx@Dict begin CP CP translate 1.7  1.7  scale NET  end
 945 2105 a 862 2126
a Fl(0011)945 2105 y
 tx@Dict begin CP CP translate 1 1.7 div 1 1.7 div scale NET  end
 945 2105 a 945 2105 a
 tx@Dict begin CP CP translate 1 1. div 1 1. div scale NET  end
 945 2105 a
0 TeXcolorgray 1417 2105 a
 tx@Dict begin tx@NodeDict begin {47.60732 0.0 } false /N@16e 10 {InitPnode
} NewNode end end
 1417 2105 a 1417 2105 a
 tx@Dict begin tx@NodeDict begin {-47.60732 0.0 } false /N@16w 10 {InitPnode
} NewNode end end
 1417
2105 a 1417 2105 a
 tx@Dict begin tx@NodeDict begin {0.0 38.41095 } false /N@16n 10 {InitPnode
} NewNode end end
 1417 2105 a 1417 2105 a
 tx@Dict begin tx@NodeDict begin {0.0 -38.41095 } false /N@16s 10 {InitPnode
} NewNode end end
 1417 2105
a 1227 2105 a
 tx@Dict begin tx@NodeDict begin {12.80365 12.80365 45.80003 22.90001
0.0 } false /N@16 16 {InitRnode } NewNode end end
 1227 2105 a 7 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.9 SLW 0. setgray  0. true 0.9 neg 12.80365
neg 44.90004 12.80365 .5 Frame  gsave 1. setgray fill grestore gsave
0.9 SLW 0. setgray 0 setlinecap stroke  grestore end


@endspecial 0 TeXcolorgray 1417 2105 a
 tx@Dict begin CP CP translate 1.  1.  scale NET  end
 1417 2105 a 1417
2105 a
 tx@Dict begin CP CP translate 1.7  1.7  scale NET  end
 1417 2105 a 1334 2126 a Fl(0110)1417 2105 y
 tx@Dict begin CP CP translate 1 1.7 div 1 1.7 div scale NET  end
 1417
2105 a 1417 2105 a
 tx@Dict begin CP CP translate 1 1. div 1 1. div scale NET  end
 1417 2105 a 0 TeXcolorgray 1890 2105
a
 tx@Dict begin tx@NodeDict begin {47.60732 0.0 } false /N@17e 10 {InitPnode
} NewNode end end
 1890 2105 a 1890 2105 a
 tx@Dict begin tx@NodeDict begin {-47.60732 0.0 } false /N@17w 10 {InitPnode
} NewNode end end
 1890 2105 a 1890 2105 a
 tx@Dict begin tx@NodeDict begin {0.0 38.41095 } false /N@17n 10 {InitPnode
} NewNode end end
 1890
2105 a 1890 2105 a
 tx@Dict begin tx@NodeDict begin {0.0 -38.41095 } false /N@17s 10 {InitPnode
} NewNode end end
 1890 2105 a 1700 2105 a
 tx@Dict begin tx@NodeDict begin {12.80365 12.80365 45.80003 22.90001
0.0 } false /N@17 16 {InitRnode } NewNode end end
 1700 2105
a 7 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.9 SLW 0. setgray  0. true 0.9 neg 12.80365
neg 44.90004 12.80365 .5 Frame  gsave 1. setgray fill grestore gsave
0.9 SLW 0. setgray 0 setlinecap stroke  grestore end
 
@endspecial 0 TeXcolorgray
1890 2105 a
 tx@Dict begin CP CP translate 1.  1.  scale NET  end
 1890 2105 a 1890 2105 a
 tx@Dict begin CP CP translate 1.7  1.7  scale NET  end
 1890 2105 a 1807
2126 a Fl(0111)1890 2105 y
 tx@Dict begin CP CP translate 1 1.7 div 1 1.7 div scale NET  end
 1890 2105 a 1890 2105 a
 tx@Dict begin CP CP translate 1 1. div 1 1. div scale NET  end
 1890
2105 a 0 TeXcolorgray 709 1633 a
 tx@Dict begin tx@NodeDict begin {43.35732 0.0 } false /N@4e 10 {InitPnode
} NewNode end end
 709 1633 a 709 1633
a
 tx@Dict begin tx@NodeDict begin {-43.35732 0.0 } false /N@4w 10 {InitPnode
} NewNode end end
 709 1633 a 709 1633 a
 tx@Dict begin tx@NodeDict begin {0.0 38.41095 } false /N@4n 10 {InitPnode
} NewNode end end
 709 1633 a 709 1633 a
 tx@Dict begin tx@NodeDict begin {0.0 -38.41095 } false /N@4s 10 {InitPnode
} NewNode end end
 709 1633
a 554 1633 a
 tx@Dict begin tx@NodeDict begin {12.80365 12.80365 37.30003 18.65001
0.0 } false /N@4 16 {InitRnode } NewNode end end
 554 1633 a 7 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.9 SLW 0. setgray  1. true 0.9 neg 12.80365
neg 36.40004 12.80365 .5 Frame  gsave 1. setgray fill grestore gsave
0.9 SLW 0. setgray 0 setlinecap stroke  grestore end


@endspecial 0 TeXcolorgray 709 1633 a
 tx@Dict begin CP CP translate 1.  1.  scale NET  end
 709 1633 a 709
1633 a
 tx@Dict begin CP CP translate 1.7  1.7  scale NET  end
 709 1633 a 647 1654 a Fl(001)709 1633 y
 tx@Dict begin CP CP translate 1 1.7 div 1 1.7 div scale NET  end
 709 1633
a 709 1633 a
 tx@Dict begin CP CP translate 1 1. div 1 1. div scale NET  end
 709 1633 a 0 TeXcolorgray 236 1633 a
 tx@Dict begin tx@NodeDict begin {43.35732 0.0 } false /N@9e 10 {InitPnode
} NewNode end end
 236
1633 a 236 1633 a
 tx@Dict begin tx@NodeDict begin {-43.35732 0.0 } false /N@9w 10 {InitPnode
} NewNode end end
 236 1633 a 236 1633 a
 tx@Dict begin tx@NodeDict begin {0.0 38.41095 } false /N@9n 10 {InitPnode
} NewNode end end
 236 1633 a 236
1633 a
 tx@Dict begin tx@NodeDict begin {0.0 -38.41095 } false /N@9s 10 {InitPnode
} NewNode end end
 236 1633 a 81 1633 a
 tx@Dict begin tx@NodeDict begin {12.80365 12.80365 37.30003 18.65001
0.0 } false /N@9 16 {InitRnode } NewNode end end
 81 1633 a 7 w @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.9 SLW 0. setgray  0. true 0.9 neg 12.80365
neg 36.40004 12.80365 .5 Frame  gsave 1. setgray fill grestore gsave
0.9 SLW 0. setgray 0 setlinecap stroke  grestore end
 
@endspecial 0 TeXcolorgray 236 1633 a
 tx@Dict begin CP CP translate 1.  1.  scale NET  end
 236
1633 a 236 1633 a
 tx@Dict begin CP CP translate 1.7  1.7  scale NET  end
 236 1633 a 174 1654 a Fl(000)236 1633
y
 tx@Dict begin CP CP translate 1 1.7 div 1 1.7 div scale NET  end
 236 1633 a 236 1633 a
 tx@Dict begin CP CP translate 1 1. div 1 1. div scale NET  end
 236 1633 a 0 TeXcolorgray 1654
1633 a
 tx@Dict begin tx@NodeDict begin {43.35732 0.0 } false /N@7e 10 {InitPnode
} NewNode end end
 1654 1633 a 1654 1633 a
 tx@Dict begin tx@NodeDict begin {-43.35732 0.0 } false /N@7w 10 {InitPnode
} NewNode end end
 1654 1633 a 1654 1633
a
 tx@Dict begin tx@NodeDict begin {0.0 38.41095 } false /N@7n 10 {InitPnode
} NewNode end end
 1654 1633 a 1654 1633 a
 tx@Dict begin tx@NodeDict begin {0.0 -38.41095 } false /N@7s 10 {InitPnode
} NewNode end end
 1654 1633 a 1499 1633 a
 tx@Dict begin tx@NodeDict begin {12.80365 12.80365 37.30003 18.65001
0.0 } false /N@7 16 {InitRnode } NewNode end end
 1499
1633 a 7 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.9 SLW 0. setgray  1. true 0.9 neg 12.80365
neg 36.40004 12.80365 .5 Frame  gsave 1. setgray fill grestore gsave
0.9 SLW 0. setgray 0 setlinecap stroke  grestore end
 
@endspecial 0 TeXcolorgray
1654 1633 a
 tx@Dict begin CP CP translate 1.  1.  scale NET  end
 1654 1633 a 1654 1633 a
 tx@Dict begin CP CP translate 1.7  1.7  scale NET  end
 1654 1633 a 1592
1654 a Fl(011)1654 1633 y
 tx@Dict begin CP CP translate 1 1.7 div 1 1.7 div scale NET  end
 1654 1633 a 1654 1633 a
 tx@Dict begin CP CP translate 1 1. div 1 1. div scale NET  end
 1654
1633 a 0 TeXcolorgray 1181 1633 a
 tx@Dict begin tx@NodeDict begin {43.35732 0.0 } false /N@10e 10 {InitPnode
} NewNode end end
 1181 1633 a 1181 1633
a
 tx@Dict begin tx@NodeDict begin {-43.35732 0.0 } false /N@10w 10 {InitPnode
} NewNode end end
 1181 1633 a 1181 1633 a
 tx@Dict begin tx@NodeDict begin {0.0 38.41095 } false /N@10n 10 {InitPnode
} NewNode end end
 1181 1633 a 1181 1633 a
 tx@Dict begin tx@NodeDict begin {0.0 -38.41095 } false /N@10s 10 {InitPnode
} NewNode end end
 1181
1633 a 1026 1633 a
 tx@Dict begin tx@NodeDict begin {12.80365 12.80365 37.30003 18.65001
0.0 } false /N@10 16 {InitRnode } NewNode end end
 1026 1633 a 7 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.9 SLW 0. setgray  0. true 0.9 neg 12.80365
neg 36.40004 12.80365 .5 Frame  gsave 1. setgray fill grestore gsave
0.9 SLW 0. setgray 0 setlinecap stroke  grestore end


@endspecial 0 TeXcolorgray 1181 1633 a
 tx@Dict begin CP CP translate 1.  1.  scale NET  end
 1181 1633 a 1181
1633 a
 tx@Dict begin CP CP translate 1.7  1.7  scale NET  end
 1181 1633 a 1119 1654 a Fl(010)1181 1633 y
 tx@Dict begin CP CP translate 1 1.7 div 1 1.7 div scale NET  end
 1181
1633 a 1181 1633 a
 tx@Dict begin CP CP translate 1 1. div 1 1. div scale NET  end
 1181 1633 a 0 TeXcolorgray 2598 1633
a
 tx@Dict begin tx@NodeDict begin {43.35732 0.0 } false /N@11e 10 {InitPnode
} NewNode end end
 2598 1633 a 2598 1633 a
 tx@Dict begin tx@NodeDict begin {-43.35732 0.0 } false /N@11w 10 {InitPnode
} NewNode end end
 2598 1633 a 2598 1633 a
 tx@Dict begin tx@NodeDict begin {0.0 38.41095 } false /N@11n 10 {InitPnode
} NewNode end end
 2598
1633 a 2598 1633 a
 tx@Dict begin tx@NodeDict begin {0.0 -38.41095 } false /N@11s 10 {InitPnode
} NewNode end end
 2598 1633 a 2444 1633 a
 tx@Dict begin tx@NodeDict begin {12.80365 12.80365 37.30003 18.65001
0.0 } false /N@11 16 {InitRnode } NewNode end end
 2444 1633
a 7 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.9 SLW 0. setgray  0. true 0.9 neg 12.80365
neg 36.40004 12.80365 .5 Frame  gsave 1. setgray fill grestore gsave
0.9 SLW 0. setgray 0 setlinecap stroke  grestore end
 
@endspecial 0 TeXcolorgray
2598 1633 a
 tx@Dict begin CP CP translate 1.  1.  scale NET  end
 2598 1633 a 2598 1633 a
 tx@Dict begin CP CP translate 1.7  1.7  scale NET  end
 2598 1633 a 2536
1654 a Fl(110)2598 1633 y
 tx@Dict begin CP CP translate 1 1.7 div 1 1.7 div scale NET  end
 2598 1633 a 2598 1633 a
 tx@Dict begin CP CP translate 1 1. div 1 1. div scale NET  end
 2598
1633 a 0 TeXcolorgray 3071 1633 a
 tx@Dict begin tx@NodeDict begin {43.35732 0.0 } false /N@12e 10 {InitPnode
} NewNode end end
 3071 1633 a 3071 1633
a
 tx@Dict begin tx@NodeDict begin {-43.35732 0.0 } false /N@12w 10 {InitPnode
} NewNode end end
 3071 1633 a 3071 1633 a
 tx@Dict begin tx@NodeDict begin {0.0 38.41095 } false /N@12n 10 {InitPnode
} NewNode end end
 3071 1633 a 3071 1633 a
 tx@Dict begin tx@NodeDict begin {0.0 -38.41095 } false /N@12s 10 {InitPnode
} NewNode end end
 3071
1633 a 2916 1633 a
 tx@Dict begin tx@NodeDict begin {12.80365 12.80365 37.30003 18.65001
0.0 } false /N@12 16 {InitRnode } NewNode end end
 2916 1633 a 7 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.9 SLW 0. setgray  0. true 0.9 neg 12.80365
neg 36.40004 12.80365 .5 Frame  gsave 1. setgray fill grestore gsave
0.9 SLW 0. setgray 0 setlinecap stroke  grestore end


@endspecial 0 TeXcolorgray 3071 1633 a
 tx@Dict begin CP CP translate 1.  1.  scale NET  end
 3071 1633 a 3071
1633 a
 tx@Dict begin CP CP translate 1.7  1.7  scale NET  end
 3071 1633 a 3009 1654 a Fl(111)3071 1633 y
 tx@Dict begin CP CP translate 1 1.7 div 1 1.7 div scale NET  end
 3071
1633 a 3071 1633 a
 tx@Dict begin CP CP translate 1 1. div 1 1. div scale NET  end
 3071 1633 a 0 TeXcolorgray 472 1160
a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.9 SLW 0. setgray  0.0 0.0 12.80365 .5
CLW mul sub 0 360 arc closepath gsave 1. setgray fill grestore gsave
0.9 SLW 0. setgray 0 setlinecap stroke  grestore end
 
@endspecial 472 1160 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 12.80365 } false /N@3 11
{InitCnode } NewNode end end
 472
1160 a 472 1160 a
 tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@3 known { -12.80365
0. /N@3 load 0 GetEdge 0.0 0. AddOffset /N@3 load GetCenter 3 -1 roll
add 3 1 roll add exch } { CP } ifelse end } PutCoor PutBegin  end
 472 1160 a 472 1160 a
 tx@Dict begin { 0.0 0.0 0.0 0.0 0.  Uput UUput } PutCoor PutBegin
 end
 472 1160 a 0
TeXcolorgray 472 1160 a
 tx@Dict begin CP CP translate 1.  1.  scale NET  end
 472 1160 a 472 1160 a
 tx@Dict begin CP CP translate 1.7  1.7  scale NET  end
 472 1160
a 472 1160 a
 tx@Dict begin mark RAngle /a ED cleartomark a neg  RotBegin  end
 472 1160 a 430 1187 a Fl(00)472 1160 y
 tx@Dict begin RotEnd  end
 472
1160 a 472 1160 a
 tx@Dict begin CP CP translate 1 1.7 div 1 1.7 div scale NET  end
 472 1160 a 472 1160 a
 tx@Dict begin CP CP translate 1 1. div 1 1. div scale NET  end
 472 1160 a 0
TeXcolorgray 472 1160 a
 tx@Dict begin PutEnd  end
 472 1160 a 472 1160 a
 tx@Dict begin PutEnd  end
 472 1160
a 472 1160 a
 tx@Dict begin tx@NodeDict begin {-38.41095 0.0 } false /N@3w 10 {InitPnode
} NewNode end end
 472 1160 a 472 1160 a
 tx@Dict begin tx@NodeDict begin {38.41095 0.0 } false /N@3e 10 {InitPnode
} NewNode end end
 472 1160 a 472 1160
a
 tx@Dict begin tx@NodeDict begin {0.0 38.41095 } false /N@3n 10 {InitPnode
} NewNode end end
 472 1160 a 472 1160 a
 tx@Dict begin tx@NodeDict begin {0.0 -38.41095 } false /N@3s 10 {InitPnode
} NewNode end end
 472 1160 a 472 1160 a
 tx@Dict begin tx@NodeDict begin {-27.54047 27.54047 } false /N@3nw
10 {InitPnode } NewNode end end
 472 1160
a 472 1160 a
 tx@Dict begin tx@NodeDict begin {27.54047 27.54047 } false /N@3ne
10 {InitPnode } NewNode end end
 472 1160 a 472 1160 a
 tx@Dict begin tx@NodeDict begin {-27.54047 -27.54047 } false /N@3sw
10 {InitPnode } NewNode end end
 472 1160 a 472 1160
a
 tx@Dict begin tx@NodeDict begin {27.54047 -27.54047 } false /N@3se
10 {InitPnode } NewNode end end
 472 1160 a 945 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.9 SLW 0. setgray  0.0 0.0 12.80365 .5
CLW mul sub 0 360 arc closepath gsave 1. setgray fill grestore gsave
0.9 SLW 0. setgray 0 setlinecap stroke  grestore end
 
@endspecial
1417 1160 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 12.80365 } false /N@6 11
{InitCnode } NewNode end end
 1417 1160 a 1417 1160 a
 tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@6 known { -12.80365
0. /N@6 load 0 GetEdge 0.0 0. AddOffset /N@6 load GetCenter 3 -1 roll
add 3 1 roll add exch } { CP } ifelse end } PutCoor PutBegin  end
 1417 1160 a 1417
1160 a
 tx@Dict begin { 0.0 0.0 0.0 0.0 0.  Uput UUput } PutCoor PutBegin
 end
 1417 1160 a 0 TeXcolorgray 1417 1160 a
 tx@Dict begin CP CP translate 1.  1.  scale NET  end
 1417 1160
a 1417 1160 a
 tx@Dict begin CP CP translate 1.7  1.7  scale NET  end
 1417 1160 a 1417 1160 a
 tx@Dict begin mark RAngle /a ED cleartomark a neg  RotBegin  end
 1417 1160 a 1375
1187 a Fl(01)1417 1160 y
 tx@Dict begin RotEnd  end
 1417 1160 a 1417 1160 a
 tx@Dict begin CP CP translate 1 1.7 div 1 1.7 div scale NET  end
 1417
1160 a 1417 1160 a
 tx@Dict begin CP CP translate 1 1. div 1 1. div scale NET  end
 1417 1160 a 0 TeXcolorgray 1417 1160
a
 tx@Dict begin PutEnd  end
 1417 1160 a 1417 1160 a
 tx@Dict begin PutEnd  end
 1417 1160 a 1417 1160 a
 tx@Dict begin tx@NodeDict begin {-38.41095 0.0 } false /N@6w 10 {InitPnode
} NewNode end end
 1417
1160 a 1417 1160 a
 tx@Dict begin tx@NodeDict begin {38.41095 0.0 } false /N@6e 10 {InitPnode
} NewNode end end
 1417 1160 a 1417 1160 a
 tx@Dict begin tx@NodeDict begin {0.0 38.41095 } false /N@6n 10 {InitPnode
} NewNode end end
 1417 1160
a 1417 1160 a
 tx@Dict begin tx@NodeDict begin {0.0 -38.41095 } false /N@6s 10 {InitPnode
} NewNode end end
 1417 1160 a 1417 1160 a
 tx@Dict begin tx@NodeDict begin {-27.54047 27.54047 } false /N@6nw
10 {InitPnode } NewNode end end
 1417 1160 a 1417
1160 a
 tx@Dict begin tx@NodeDict begin {27.54047 27.54047 } false /N@6ne
10 {InitPnode } NewNode end end
 1417 1160 a 1417 1160 a
 tx@Dict begin tx@NodeDict begin {-27.54047 -27.54047 } false /N@6sw
10 {InitPnode } NewNode end end
 1417 1160 a 1417 1160
a
 tx@Dict begin tx@NodeDict begin {27.54047 -27.54047 } false /N@6se
10 {InitPnode } NewNode end end
 1417 1160 a 1418 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.9 SLW 0. setgray  0.0 0.0 12.80365 .5
CLW mul sub 0 360 arc closepath gsave 1. setgray fill grestore gsave
0.9 SLW 0. setgray 0 setlinecap stroke  grestore end
 
@endspecial
2835 1160 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 12.80365 } false /N@8 11
{InitCnode } NewNode end end
 2835 1160 a 2835 1160 a
 tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@8 known { -12.80365
0. /N@8 load 0 GetEdge 0.0 0. AddOffset /N@8 load GetCenter 3 -1 roll
add 3 1 roll add exch } { CP } ifelse end } PutCoor PutBegin  end
 2835 1160 a 2835
1160 a
 tx@Dict begin { 0.0 0.0 0.0 0.0 0.  Uput UUput } PutCoor PutBegin
 end
 2835 1160 a 0 TeXcolorgray 2835 1160 a
 tx@Dict begin CP CP translate 1.  1.  scale NET  end
 2835 1160
a 2835 1160 a
 tx@Dict begin CP CP translate 1.7  1.7  scale NET  end
 2835 1160 a 2835 1160 a
 tx@Dict begin mark RAngle /a ED cleartomark a neg  RotBegin  end
 2835 1160 a 2793
1187 a Fl(11)2835 1160 y
 tx@Dict begin RotEnd  end
 2835 1160 a 2835 1160 a
 tx@Dict begin CP CP translate 1 1.7 div 1 1.7 div scale NET  end
 2835
1160 a 2835 1160 a
 tx@Dict begin CP CP translate 1 1. div 1 1. div scale NET  end
 2835 1160 a 0 TeXcolorgray 2835 1160
a
 tx@Dict begin PutEnd  end
 2835 1160 a 2835 1160 a
 tx@Dict begin PutEnd  end
 2835 1160 a 2835 1160 a
 tx@Dict begin tx@NodeDict begin {-38.41095 0.0 } false /N@8w 10 {InitPnode
} NewNode end end
 2835
1160 a 2835 1160 a
 tx@Dict begin tx@NodeDict begin {38.41095 0.0 } false /N@8e 10 {InitPnode
} NewNode end end
 2835 1160 a 2835 1160 a
 tx@Dict begin tx@NodeDict begin {0.0 38.41095 } false /N@8n 10 {InitPnode
} NewNode end end
 2835 1160
a 2835 1160 a
 tx@Dict begin tx@NodeDict begin {0.0 -38.41095 } false /N@8s 10 {InitPnode
} NewNode end end
 2835 1160 a 2835 1160 a
 tx@Dict begin tx@NodeDict begin {-27.54047 27.54047 } false /N@8nw
10 {InitPnode } NewNode end end
 2835 1160 a 2835
1160 a
 tx@Dict begin tx@NodeDict begin {27.54047 27.54047 } false /N@8ne
10 {InitPnode } NewNode end end
 2835 1160 a 2835 1160 a
 tx@Dict begin tx@NodeDict begin {-27.54047 -27.54047 } false /N@8sw
10 {InitPnode } NewNode end end
 2835 1160 a 2835 1160
a
 tx@Dict begin tx@NodeDict begin {27.54047 -27.54047 } false /N@8se
10 {InitPnode } NewNode end end
 2835 1160 a 2362 1160 a
 tx@Dict begin tx@NodeDict begin {39.10732 0.0 } false /N@13e 10 {InitPnode
} NewNode end end
 2362 1160 a 2362 1160 a
 tx@Dict begin tx@NodeDict begin {-39.10732 0.0 } false /N@13w 10 {InitPnode
} NewNode end end
 2362
1160 a 2362 1160 a
 tx@Dict begin tx@NodeDict begin {0.0 38.41095 } false /N@13n 10 {InitPnode
} NewNode end end
 2362 1160 a 2362 1160 a
 tx@Dict begin tx@NodeDict begin {0.0 -38.41095 } false /N@13s 10 {InitPnode
} NewNode end end
 2362 1160
a 2243 1160 a
 tx@Dict begin tx@NodeDict begin {12.80365 12.80365 28.80002 14.40001
0.0 } false /N@13 16 {InitRnode } NewNode end end
 2243 1160 a 7 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.9 SLW 0. setgray  0. true 0.9 neg 12.80365
neg 27.90002 12.80365 .5 Frame  gsave 1. setgray fill grestore gsave
0.9 SLW 0. setgray 0 setlinecap stroke  grestore end


@endspecial 0 TeXcolorgray 2362 1160 a
 tx@Dict begin CP CP translate 1.  1.  scale NET  end
 2362 1160 a 2362
1160 a
 tx@Dict begin CP CP translate 1.7  1.7  scale NET  end
 2362 1160 a 2320 1181 a Fl(10)2362 1160 y
 tx@Dict begin CP CP translate 1 1.7 div 1 1.7 div scale NET  end
 2362
1160 a 2362 1160 a
 tx@Dict begin CP CP translate 1 1. div 1 1. div scale NET  end
 2362 1160 a 0 TeXcolorgray 945 688
a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.9 SLW 0. setgray  0.0 0.0 12.80365 .5
CLW mul sub 0 360 arc closepath gsave 1. setgray fill grestore gsave
0.9 SLW 0. setgray 0 setlinecap stroke  grestore end
 
@endspecial 945 688 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 12.80365 } false /N@2 11
{InitCnode } NewNode end end
 945
688 a 945 688 a
 tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@2 known { -12.80365
0. /N@2 load 0 GetEdge 0.0 0. AddOffset /N@2 load GetCenter 3 -1 roll
add 3 1 roll add exch } { CP } ifelse end } PutCoor PutBegin  end
 945 688 a 945 688 a
 tx@Dict begin { 0.0 0.0 0.0 0.0 0.  Uput UUput } PutCoor PutBegin
 end
 945 688 a 0 TeXcolorgray
945 688 a
 tx@Dict begin CP CP translate 1.  1.  scale NET  end
 945 688 a 945 688 a
 tx@Dict begin CP CP translate 1.7  1.7  scale NET  end
 945 688 a 945 688 a
 tx@Dict begin mark RAngle /a ED cleartomark a neg  RotBegin  end
 945
688 a 924 715 a Fl(0)945 688 y
 tx@Dict begin RotEnd  end
 945 688 a 945 688 a
 tx@Dict begin CP CP translate 1 1.7 div 1 1.7 div scale NET  end
 945
688 a 945 688 a
 tx@Dict begin CP CP translate 1 1. div 1 1. div scale NET  end
 945 688 a 0 TeXcolorgray 945 688 a
 tx@Dict begin PutEnd  end
 945
688 a 945 688 a
 tx@Dict begin PutEnd  end
 945 688 a 945 688 a
 tx@Dict begin tx@NodeDict begin {-38.41095 0.0 } false /N@2w 10 {InitPnode
} NewNode end end
 945 688 a 945 688
a
 tx@Dict begin tx@NodeDict begin {38.41095 0.0 } false /N@2e 10 {InitPnode
} NewNode end end
 945 688 a 945 688 a
 tx@Dict begin tx@NodeDict begin {0.0 38.41095 } false /N@2n 10 {InitPnode
} NewNode end end
 945 688 a 945 688 a
 tx@Dict begin tx@NodeDict begin {0.0 -38.41095 } false /N@2s 10 {InitPnode
} NewNode end end
 945 688 a 945
688 a
 tx@Dict begin tx@NodeDict begin {-27.54047 27.54047 } false /N@2nw
10 {InitPnode } NewNode end end
 945 688 a 945 688 a
 tx@Dict begin tx@NodeDict begin {27.54047 27.54047 } false /N@2ne
10 {InitPnode } NewNode end end
 945 688 a 945 688 a
 tx@Dict begin tx@NodeDict begin {-27.54047 -27.54047 } false /N@2sw
10 {InitPnode } NewNode end end
 945 688
a 945 688 a
 tx@Dict begin tx@NodeDict begin {27.54047 -27.54047 } false /N@2se
10 {InitPnode } NewNode end end
 945 688 a 1653 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.9 SLW 0. setgray  0.0 0.0 12.80365 .5
CLW mul sub 0 360 arc closepath gsave 1. setgray fill grestore gsave
0.9 SLW 0. setgray 0 setlinecap stroke  grestore end


@endspecial 2598 688 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 12.80365 } false /N@5 11
{InitCnode } NewNode end end
 2598 688 a 2598 688 a
 tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@5 known { -12.80365
0. /N@5 load 0 GetEdge 0.0 0. AddOffset /N@5 load GetCenter 3 -1 roll
add 3 1 roll add exch } { CP } ifelse end } PutCoor PutBegin  end
 2598 688
a 2598 688 a
 tx@Dict begin { 0.0 0.0 0.0 0.0 0.  Uput UUput } PutCoor PutBegin
 end
 2598 688 a 0 TeXcolorgray 2598 688 a
 tx@Dict begin CP CP translate 1.  1.  scale NET  end
 2598
688 a 2598 688 a
 tx@Dict begin CP CP translate 1.7  1.7  scale NET  end
 2598 688 a 2598 688 a
 tx@Dict begin mark RAngle /a ED cleartomark a neg  RotBegin  end
 2598 688 a 2577
715 a Fl(1)2598 688 y
 tx@Dict begin RotEnd  end
 2598 688 a 2598 688 a
 tx@Dict begin CP CP translate 1 1.7 div 1 1.7 div scale NET  end
 2598 688
a 2598 688 a
 tx@Dict begin CP CP translate 1 1. div 1 1. div scale NET  end
 2598 688 a 0 TeXcolorgray 2598 688 a
 tx@Dict begin PutEnd  end
 2598
688 a 2598 688 a
 tx@Dict begin PutEnd  end
 2598 688 a 2598 688 a
 tx@Dict begin tx@NodeDict begin {-38.41095 0.0 } false /N@5w 10 {InitPnode
} NewNode end end
 2598 688 a 2598
688 a
 tx@Dict begin tx@NodeDict begin {38.41095 0.0 } false /N@5e 10 {InitPnode
} NewNode end end
 2598 688 a 2598 688 a
 tx@Dict begin tx@NodeDict begin {0.0 38.41095 } false /N@5n 10 {InitPnode
} NewNode end end
 2598 688 a 2598 688 a
 tx@Dict begin tx@NodeDict begin {0.0 -38.41095 } false /N@5s 10 {InitPnode
} NewNode end end
 2598
688 a 2598 688 a
 tx@Dict begin tx@NodeDict begin {-27.54047 27.54047 } false /N@5nw
10 {InitPnode } NewNode end end
 2598 688 a 2598 688 a
 tx@Dict begin tx@NodeDict begin {27.54047 27.54047 } false /N@5ne
10 {InitPnode } NewNode end end
 2598 688 a 2598
688 a
 tx@Dict begin tx@NodeDict begin {-27.54047 -27.54047 } false /N@5sw
10 {InitPnode } NewNode end end
 2598 688 a 2598 688 a
 tx@Dict begin tx@NodeDict begin {27.54047 -27.54047 } false /N@5se
10 {InitPnode } NewNode end end
 2598 688 a 1890 215 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.9 SLW 0. setgray  0.0 0.0 12.80365 .5
CLW mul sub 0 360 arc closepath gsave 1. setgray fill grestore gsave
0.9 SLW 0. setgray 0 setlinecap stroke  grestore end
 
@endspecial 1890 215 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 12.80365 } false /N@1 11
{InitCnode } NewNode end end
 1890 215 a 1890 215
a
 tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@1 known { -12.80365
0. /N@1 load 0 GetEdge 0.0 0. AddOffset /N@1 load GetCenter 3 -1 roll
add 3 1 roll add exch } { CP } ifelse end } PutCoor PutBegin  end
 1890 215 a 1890 215 a
 tx@Dict begin { 0.0 0.0 0.0 0.0 0.  Uput UUput } PutCoor PutBegin
 end
 1890 215 a 0 TeXcolorgray 1890
215 a
 tx@Dict begin CP CP translate 1.  1.  scale NET  end
 1890 215 a 1890 215 a
 tx@Dict begin CP CP translate 1.7  1.7  scale NET  end
 1890 215 a 1890 215 a
 tx@Dict begin mark RAngle /a ED cleartomark a neg  RotBegin  end
 1890
215 a 1871 233 a Fo(")1890 215 y
 tx@Dict begin RotEnd  end
 1890 215 a 1890 215
a
 tx@Dict begin CP CP translate 1 1.7 div 1 1.7 div scale NET  end
 1890 215 a 1890 215 a
 tx@Dict begin CP CP translate 1 1. div 1 1. div scale NET  end
 1890 215 a 0 TeXcolorgray 1890
215 a
 tx@Dict begin PutEnd  end
 1890 215 a 1890 215 a
 tx@Dict begin PutEnd  end
 1890 215 a 1890 215 a
 tx@Dict begin tx@NodeDict begin {-38.41095 0.0 } false /N@1w 10 {InitPnode
} NewNode end end
 1890
215 a 1890 215 a
 tx@Dict begin tx@NodeDict begin {38.41095 0.0 } false /N@1e 10 {InitPnode
} NewNode end end
 1890 215 a 1890 215 a
 tx@Dict begin tx@NodeDict begin {0.0 38.41095 } false /N@1n 10 {InitPnode
} NewNode end end
 1890 215 a 1890
215 a
 tx@Dict begin tx@NodeDict begin {0.0 -38.41095 } false /N@1s 10 {InitPnode
} NewNode end end
 1890 215 a 1890 215 a
 tx@Dict begin tx@NodeDict begin {-27.54047 27.54047 } false /N@1nw
10 {InitPnode } NewNode end end
 1890 215 a 1890 215 a
 tx@Dict begin tx@NodeDict begin {27.54047 27.54047 } false /N@1ne
10 {InitPnode } NewNode end end
 1890
215 a 1890 215 a
 tx@Dict begin tx@NodeDict begin {-27.54047 -27.54047 } false /N@1sw
10 {InitPnode } NewNode end end
 1890 215 a 1890 215 a
 tx@Dict begin tx@NodeDict begin {27.54047 -27.54047 } false /N@1se
10 {InitPnode } NewNode end end
 1890 215 a 0 2105
a
 tx@Dict begin gsave STV newpath 2.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.1 1.4 6.5 0. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@1 /N@2 InitNC { NCLine  } if end gsave 2.0 SLW 0. setgray 0
setlinecap stroke  grestore  grestore end
 0 2105 a 0 2105 a
 tx@Dict begin tx@NodeDict begin /t 0.5 def LPut end PutBegin  end
 0 2105 a 0 2105 a
 tx@Dict begin { 3.5 tx@Dict /NCLW known { NCLW add } if 0.0 0.0 0.0
NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor
PutBegin  end
 0 2105 a 0 TeXcolorgray
0 2105 a
 tx@Dict begin CP CP translate 1.  1.  scale NET  end
 0 2105 a 0 2105 a
 tx@Dict begin CP CP translate 1.7  1.7  scale NET  end
 0 2105 a 0 2105 a
 tx@Dict begin CP CP translate 1 1.7 div 1 1.7 div scale NET  end
 0 2105 a
0 2105 a
 tx@Dict begin CP CP translate 1 1. div 1 1. div scale NET  end
 0 2105 a 0 TeXcolorgray 0 2105 a
 tx@Dict begin PutEnd  end
 0 2105 a 0
2105 a
 tx@Dict begin PutEnd  end
 0 2105 a 0 2105 a
 tx@Dict begin gsave STV newpath 2.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.1 1.4 6.5 0. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@2 /N@3 InitNC { NCLine  } if end gsave 2.0 SLW 0. setgray 0
setlinecap stroke  grestore  grestore end
 0 2105 a 0 2105 a
 tx@Dict begin tx@NodeDict begin /t 0.5 def LPut end PutBegin  end
 0 2105 a 0
2105 a
 tx@Dict begin { 3.5 tx@Dict /NCLW known { NCLW add } if 0.0 0.0 0.0
NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor
PutBegin  end
 0 2105 a 0 TeXcolorgray 0 2105 a
 tx@Dict begin CP CP translate 1.  1.  scale NET  end
 0 2105 a 0 2105
a
 tx@Dict begin CP CP translate 1.7  1.7  scale NET  end
 0 2105 a 0 2105 a
 tx@Dict begin CP CP translate 1 1.7 div 1 1.7 div scale NET  end
 0 2105 a 0 2105 a
 tx@Dict begin CP CP translate 1 1. div 1 1. div scale NET  end
 0 2105 a 0 TeXcolorgray
0 2105 a
 tx@Dict begin PutEnd  end
 0 2105 a 0 2105 a
 tx@Dict begin PutEnd  end
 0 2105 a 0 2105 a
 tx@Dict begin gsave STV newpath 2.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.1 1.4 6.5 0. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@5 /N@13 InitNC { NCLine  } if end gsave 2.0 SLW 0. setgray 0
setlinecap stroke  grestore  grestore end
 0 2105 a
0 2105 a
 tx@Dict begin tx@NodeDict begin /t 0.5 def LPut end PutBegin  end
 0 2105 a 0 2105 a
 tx@Dict begin { 3.5 tx@Dict /NCLW known { NCLW add } if 0.0 0.0 0.0
NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor
PutBegin  end
 0 2105 a 0 TeXcolorgray 0
2105 a
 tx@Dict begin CP CP translate 1.  1.  scale NET  end
 0 2105 a 0 2105 a
 tx@Dict begin CP CP translate 1.7  1.7  scale NET  end
 0 2105 a 0 2105 a
 tx@Dict begin CP CP translate 1 1.7 div 1 1.7 div scale NET  end
 0 2105 a 0
2105 a
 tx@Dict begin CP CP translate 1 1. div 1 1. div scale NET  end
 0 2105 a 0 TeXcolorgray 0 2105 a
 tx@Dict begin PutEnd  end
 0 2105 a 0 2105
a
 tx@Dict begin PutEnd  end
 0 2105 a 0 2105 a
 tx@Dict begin gsave STV newpath 2.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.1 1.4 6.5 0. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@3 /N@9 InitNC { NCLine  } if end gsave 2.0 SLW 0. setgray 0
setlinecap stroke  grestore  grestore end
 0 2105 a 0 2105 a
 tx@Dict begin tx@NodeDict begin /t 0.5 def LPut end PutBegin  end
 0 2105 a 0 2105
a
 tx@Dict begin { 3.5 tx@Dict /NCLW known { NCLW add } if 0.0 0.0 0.0
NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor
PutBegin  end
 0 2105 a 0 TeXcolorgray 0 2105 a
 tx@Dict begin CP CP translate 1.  1.  scale NET  end
 0 2105 a 0 2105 a
 tx@Dict begin CP CP translate 1.7  1.7  scale NET  end

0 2105 a 0 2105 a
 tx@Dict begin CP CP translate 1 1.7 div 1 1.7 div scale NET  end
 0 2105 a 0 2105 a
 tx@Dict begin CP CP translate 1 1. div 1 1. div scale NET  end
 0 2105 a 0 TeXcolorgray
0 2105 a
 tx@Dict begin PutEnd  end
 0 2105 a 0 2105 a
 tx@Dict begin PutEnd  end
 0 2105 a 0 2105 a
 tx@Dict begin gsave STV newpath 2.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.1 1.4 6.5 0. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@6 /N@10 InitNC { NCLine  } if end gsave 2.0 SLW 0. setgray 0
setlinecap stroke  grestore  grestore end
 0 2105 a
0 2105 a
 tx@Dict begin tx@NodeDict begin /t 0.5 def LPut end PutBegin  end
 0 2105 a 0 2105 a
 tx@Dict begin { 3.5 tx@Dict /NCLW known { NCLW add } if 0.0 0.0 0.0
NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor
PutBegin  end
 0 2105 a 0 TeXcolorgray 0
2105 a
 tx@Dict begin CP CP translate 1.  1.  scale NET  end
 0 2105 a 0 2105 a
 tx@Dict begin CP CP translate 1.7  1.7  scale NET  end
 0 2105 a 0 2105 a
 tx@Dict begin CP CP translate 1 1.7 div 1 1.7 div scale NET  end
 0 2105 a 0
2105 a
 tx@Dict begin CP CP translate 1 1. div 1 1. div scale NET  end
 0 2105 a 0 TeXcolorgray 0 2105 a
 tx@Dict begin PutEnd  end
 0 2105 a 0 2105
a
 tx@Dict begin PutEnd  end
 0 2105 a 0 2105 a
 tx@Dict begin gsave STV newpath 2.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.1 1.4 6.5 0. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@8 /N@11 InitNC { NCLine  } if end gsave 2.0 SLW 0. setgray 0
setlinecap stroke  grestore  grestore end
 0 2105 a 0 2105 a
 tx@Dict begin tx@NodeDict begin /t 0.5 def LPut end PutBegin  end
 0 2105 a 0 2105
a
 tx@Dict begin { 3.5 tx@Dict /NCLW known { NCLW add } if 0.0 0.0 0.0
NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor
PutBegin  end
 0 2105 a 0 TeXcolorgray 0 2105 a
 tx@Dict begin CP CP translate 1.  1.  scale NET  end
 0 2105 a 0 2105 a
 tx@Dict begin CP CP translate 1.7  1.7  scale NET  end

0 2105 a 0 2105 a
 tx@Dict begin CP CP translate 1 1.7 div 1 1.7 div scale NET  end
 0 2105 a 0 2105 a
 tx@Dict begin CP CP translate 1 1. div 1 1. div scale NET  end
 0 2105 a 0 TeXcolorgray
0 2105 a
 tx@Dict begin PutEnd  end
 0 2105 a 0 2105 a
 tx@Dict begin PutEnd  end
 0 2105 a 0 2105 a
 tx@Dict begin gsave STV newpath 2.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.1 1.4 6.5 0. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@4 /N@14 InitNC { NCLine  } if end gsave 2.0 SLW 0. setgray 0
setlinecap stroke  grestore  grestore end
 0 2105 a
0 2105 a
 tx@Dict begin tx@NodeDict begin /t 0.5 def LPut end PutBegin  end
 0 2105 a 0 2105 a
 tx@Dict begin { 3.5 tx@Dict /NCLW known { NCLW add } if 0.0 0.0 0.0
NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor
PutBegin  end
 0 2105 a 0 TeXcolorgray 0
2105 a
 tx@Dict begin CP CP translate 1.  1.  scale NET  end
 0 2105 a 0 2105 a
 tx@Dict begin CP CP translate 1.7  1.7  scale NET  end
 0 2105 a 0 2105 a
 tx@Dict begin CP CP translate 1 1.7 div 1 1.7 div scale NET  end
 0 2105 a 0
2105 a
 tx@Dict begin CP CP translate 1 1. div 1 1. div scale NET  end
 0 2105 a 0 TeXcolorgray 0 2105 a
 tx@Dict begin PutEnd  end
 0 2105 a 0 2105
a
 tx@Dict begin PutEnd  end
 0 2105 a 0 2105 a
 tx@Dict begin gsave STV newpath 2.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.1 1.4 6.5 0. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@7 /N@16 InitNC { NCLine  } if end gsave 2.0 SLW 0. setgray 0
setlinecap stroke  grestore  grestore end
 0 2105 a 0 2105 a
 tx@Dict begin tx@NodeDict begin /t 0.5 def LPut end PutBegin  end
 0 2105 a 0 2105
a
 tx@Dict begin { 3.5 tx@Dict /NCLW known { NCLW add } if 0.0 0.0 0.0
NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor
PutBegin  end
 0 2105 a 0 TeXcolorgray 0 2105 a
 tx@Dict begin CP CP translate 1.  1.  scale NET  end
 0 2105 a 0 2105 a
 tx@Dict begin CP CP translate 1.7  1.7  scale NET  end

0 2105 a 0 2105 a
 tx@Dict begin CP CP translate 1 1.7 div 1 1.7 div scale NET  end
 0 2105 a 0 2105 a
 tx@Dict begin CP CP translate 1 1. div 1 1. div scale NET  end
 0 2105 a 0 TeXcolorgray
0 2105 a
 tx@Dict begin PutEnd  end
 0 2105 a 0 2105 a
 tx@Dict begin PutEnd  end
 0 2105 a 0 2105 a
 tx@Dict begin gsave STV newpath 2.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.1 1.4 6.5 0. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@1 /N@5 InitNC { NCLine  } if end gsave 2.0 SLW 0. setgray 5.0
3.0 -2 0 add DashLine  grestore  grestore end
 0 2105 a
0 2105 a
 tx@Dict begin tx@NodeDict begin /t 0.5 def LPut end PutBegin  end
 0 2105 a 0 2105 a
 tx@Dict begin { 3.5 tx@Dict /NCLW known { NCLW add } if 0.0 0.0 0.0
NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor
PutBegin  end
 0 2105 a 0 TeXcolorgray 0
2105 a
 tx@Dict begin CP CP translate 1.  1.  scale NET  end
 0 2105 a 0 2105 a
 tx@Dict begin CP CP translate 1.7  1.7  scale NET  end
 0 2105 a 0 2105 a
 tx@Dict begin CP CP translate 1 1.7 div 1 1.7 div scale NET  end
 0 2105 a 0
2105 a
 tx@Dict begin CP CP translate 1 1. div 1 1. div scale NET  end
 0 2105 a 0 TeXcolorgray 0 2105 a
 tx@Dict begin PutEnd  end
 0 2105 a 0 2105
a
 tx@Dict begin PutEnd  end
 0 2105 a 0 2105 a
 tx@Dict begin gsave STV newpath 2.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.1 1.4 6.5 0. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@2 /N@6 InitNC { NCLine  } if end gsave 2.0 SLW 0. setgray 5.0
3.0 -2 0 add DashLine  grestore  grestore end
 0 2105 a 0 2105 a
 tx@Dict begin tx@NodeDict begin /t 0.5 def LPut end PutBegin  end
 0 2105 a 0 2105
a
 tx@Dict begin { 3.5 tx@Dict /NCLW known { NCLW add } if 0.0 0.0 0.0
NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor
PutBegin  end
 0 2105 a 0 TeXcolorgray 0 2105 a
 tx@Dict begin CP CP translate 1.  1.  scale NET  end
 0 2105 a 0 2105 a
 tx@Dict begin CP CP translate 1.7  1.7  scale NET  end

0 2105 a 0 2105 a
 tx@Dict begin CP CP translate 1 1.7 div 1 1.7 div scale NET  end
 0 2105 a 0 2105 a
 tx@Dict begin CP CP translate 1 1. div 1 1. div scale NET  end
 0 2105 a 0 TeXcolorgray
0 2105 a
 tx@Dict begin PutEnd  end
 0 2105 a 0 2105 a
 tx@Dict begin PutEnd  end
 0 2105 a 0 2105 a
 tx@Dict begin gsave STV newpath 2.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.1 1.4 6.5 0. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@8 /N@12 InitNC { NCLine  } if end gsave 2.0 SLW 0. setgray 5.0
3.0 -2 0 add DashLine  grestore  grestore end
 0 2105 a
0 2105 a
 tx@Dict begin tx@NodeDict begin /t 0.5 def LPut end PutBegin  end
 0 2105 a 0 2105 a
 tx@Dict begin { 3.5 tx@Dict /NCLW known { NCLW add } if 0.0 0.0 0.0
NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor
PutBegin  end
 0 2105 a 0 TeXcolorgray 0
2105 a
 tx@Dict begin CP CP translate 1.  1.  scale NET  end
 0 2105 a 0 2105 a
 tx@Dict begin CP CP translate 1.7  1.7  scale NET  end
 0 2105 a 0 2105 a
 tx@Dict begin CP CP translate 1 1.7 div 1 1.7 div scale NET  end
 0 2105 a 0
2105 a
 tx@Dict begin CP CP translate 1 1. div 1 1. div scale NET  end
 0 2105 a 0 TeXcolorgray 0 2105 a
 tx@Dict begin PutEnd  end
 0 2105 a 0 2105
a
 tx@Dict begin PutEnd  end
 0 2105 a 0 2105 a
 tx@Dict begin gsave STV newpath 2.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.1 1.4 6.5 0. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@4 /N@15 InitNC { NCLine  } if end gsave 2.0 SLW 0. setgray 5.0
3.0 -2 0 add DashLine  grestore  grestore end
 0 2105 a 0 2105 a
 tx@Dict begin tx@NodeDict begin /t 0.5 def LPut end PutBegin  end
 0 2105 a 0 2105
a
 tx@Dict begin { 3.5 tx@Dict /NCLW known { NCLW add } if 0.0 0.0 0.0
NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor
PutBegin  end
 0 2105 a 0 TeXcolorgray 0 2105 a
 tx@Dict begin CP CP translate 1.  1.  scale NET  end
 0 2105 a 0 2105 a
 tx@Dict begin CP CP translate 1.7  1.7  scale NET  end

0 2105 a 0 2105 a
 tx@Dict begin CP CP translate 1 1.7 div 1 1.7 div scale NET  end
 0 2105 a 0 2105 a
 tx@Dict begin CP CP translate 1 1. div 1 1. div scale NET  end
 0 2105 a 0 TeXcolorgray
0 2105 a
 tx@Dict begin PutEnd  end
 0 2105 a 0 2105 a
 tx@Dict begin PutEnd  end
 0 2105 a 0 2105 a
 tx@Dict begin gsave STV newpath 2.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.1 1.4 6.5 0. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@7 /N@17 InitNC { NCLine  } if end gsave 2.0 SLW 0. setgray 5.0
3.0 -2 0 add DashLine  grestore  grestore end
 0 2105 a
0 2105 a
 tx@Dict begin tx@NodeDict begin /t 0.5 def LPut end PutBegin  end
 0 2105 a 0 2105 a
 tx@Dict begin { 3.5 tx@Dict /NCLW known { NCLW add } if 0.0 0.0 0.0
NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor
PutBegin  end
 0 2105 a 0 TeXcolorgray 0
2105 a
 tx@Dict begin CP CP translate 1.  1.  scale NET  end
 0 2105 a 0 2105 a
 tx@Dict begin CP CP translate 1.7  1.7  scale NET  end
 0 2105 a 0 2105 a
 tx@Dict begin CP CP translate 1 1.7 div 1 1.7 div scale NET  end
 0 2105 a 0
2105 a
 tx@Dict begin CP CP translate 1 1. div 1 1. div scale NET  end
 0 2105 a 0 TeXcolorgray 0 2105 a
 tx@Dict begin PutEnd  end
 0 2105 a 0 2105
a
 tx@Dict begin PutEnd  end
 0 2105 a 0 2105 a
 tx@Dict begin gsave STV newpath 2.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.1 1.4 6.5 0. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@5 /N@8 InitNC { NCLine  } if end gsave 2.0 SLW 0. setgray 5.0
3.0 -2 0 add DashLine  grestore  grestore end
 0 2105 a 0 2105 a
 tx@Dict begin tx@NodeDict begin /t 0.5 def LPut end PutBegin  end
 0 2105 a 0 2105
a
 tx@Dict begin { 3.5 tx@Dict /NCLW known { NCLW add } if 0.0 0.0 0.0
NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor
PutBegin  end
 0 2105 a 0 TeXcolorgray 0 2105 a
 tx@Dict begin CP CP translate 1.  1.  scale NET  end
 0 2105 a 0 2105 a
 tx@Dict begin CP CP translate 1.7  1.7  scale NET  end

0 2105 a 0 2105 a
 tx@Dict begin CP CP translate 1 1.7 div 1 1.7 div scale NET  end
 0 2105 a 0 2105 a
 tx@Dict begin CP CP translate 1 1. div 1 1. div scale NET  end
 0 2105 a 0 TeXcolorgray
0 2105 a
 tx@Dict begin PutEnd  end
 0 2105 a 0 2105 a
 tx@Dict begin PutEnd  end
 0 2105 a 0 2105 a
 tx@Dict begin gsave STV newpath 2.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.1 1.4 6.5 0. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@3 /N@4 InitNC { NCLine  } if end gsave 2.0 SLW 0. setgray 5.0
3.0 -2 0 add DashLine  grestore  grestore end
 0 2105 a
0 2105 a
 tx@Dict begin tx@NodeDict begin /t 0.5 def LPut end PutBegin  end
 0 2105 a 0 2105 a
 tx@Dict begin { 3.5 tx@Dict /NCLW known { NCLW add } if 0.0 0.0 0.0
NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor
PutBegin  end
 0 2105 a 0 TeXcolorgray 0
2105 a
 tx@Dict begin CP CP translate 1.  1.  scale NET  end
 0 2105 a 0 2105 a
 tx@Dict begin CP CP translate 1.7  1.7  scale NET  end
 0 2105 a 0 2105 a
 tx@Dict begin CP CP translate 1 1.7 div 1 1.7 div scale NET  end
 0 2105 a 0
2105 a
 tx@Dict begin CP CP translate 1 1. div 1 1. div scale NET  end
 0 2105 a 0 TeXcolorgray 0 2105 a
 tx@Dict begin PutEnd  end
 0 2105 a 0 2105
a
 tx@Dict begin PutEnd  end
 0 2105 a 0 2105 a
 tx@Dict begin gsave STV newpath 2.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.1 1.4 6.5 0. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@6 /N@7 InitNC { NCLine  } if end gsave 2.0 SLW 0. setgray 5.0
3.0 -2 0 add DashLine  grestore  grestore end
 0 2105 a 0 2105 a
 tx@Dict begin tx@NodeDict begin /t 0.5 def LPut end PutBegin  end
 0 2105 a 0 2105
a
 tx@Dict begin { 3.5 tx@Dict /NCLW known { NCLW add } if 0.0 0.0 0.0
NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor
PutBegin  end
 0 2105 a 0 TeXcolorgray 0 2105 a
 tx@Dict begin CP CP translate 1.  1.  scale NET  end
 0 2105 a 0 2105 a
 tx@Dict begin CP CP translate 1.7  1.7  scale NET  end

0 2105 a 0 2105 a
 tx@Dict begin CP CP translate 1 1.7 div 1 1.7 div scale NET  end
 0 2105 a 0 2105 a
 tx@Dict begin CP CP translate 1 1. div 1 1. div scale NET  end
 0 2105 a 0 TeXcolorgray
0 2105 a
 tx@Dict begin PutEnd  end
 0 2105 a 0 2105 a
 tx@Dict begin PutEnd  end
 0 2105 a 4488 1633 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.9 SLW 0. setgray  0.0 0.0 12.80365 .5
CLW mul sub 0 360 arc closepath gsave 1. setgray fill grestore gsave
0.9 SLW 0. setgray 0 setlinecap stroke  grestore end
 
@endspecial 4488 1633 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 12.80365 } false /N@3 11
{InitCnode } NewNode end end
 4488 1633 a 4488
1633 a
 tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@3 known { -12.80365
0. /N@3 load 0 GetEdge 0.0 0. AddOffset /N@3 load GetCenter 3 -1 roll
add 3 1 roll add exch } { CP } ifelse end } PutCoor PutBegin  end
 4488 1633 a 4488 1633 a
 tx@Dict begin { 0.0 0.0 0.0 0.0 0.  Uput UUput } PutCoor PutBegin
 end
 4488 1633 a 0 TeXcolorgray
4488 1633 a
 tx@Dict begin CP CP translate 1.  1.  scale NET  end
 4488 1633 a 4488 1633 a
 tx@Dict begin CP CP translate 1.7  1.7  scale NET  end
 4488 1633 a 4488
1633 a
 tx@Dict begin mark RAngle /a ED cleartomark a neg  RotBegin  end
 4488 1633 a 4446 1660 a Fl(00)4488 1633 y
 tx@Dict begin RotEnd  end
 4488
1633 a 4488 1633 a
 tx@Dict begin CP CP translate 1 1.7 div 1 1.7 div scale NET  end
 4488 1633 a 4488 1633 a
 tx@Dict begin CP CP translate 1 1. div 1 1. div scale NET  end
 4488 1633
a 0 TeXcolorgray 4488 1633 a
 tx@Dict begin PutEnd  end
 4488 1633 a 4488 1633 a
 tx@Dict begin PutEnd  end

4488 1633 a 4488 1633 a
 tx@Dict begin tx@NodeDict begin {-38.41095 0.0 } false /N@3w 10 {InitPnode
} NewNode end end
 4488 1633 a 4488 1633 a
 tx@Dict begin tx@NodeDict begin {38.41095 0.0 } false /N@3e 10 {InitPnode
} NewNode end end
 4488
1633 a 4488 1633 a
 tx@Dict begin tx@NodeDict begin {0.0 38.41095 } false /N@3n 10 {InitPnode
} NewNode end end
 4488 1633 a 4488 1633 a
 tx@Dict begin tx@NodeDict begin {0.0 -38.41095 } false /N@3s 10 {InitPnode
} NewNode end end
 4488 1633
a 4488 1633 a
 tx@Dict begin tx@NodeDict begin {-27.54047 27.54047 } false /N@3nw
10 {InitPnode } NewNode end end
 4488 1633 a 4488 1633 a
 tx@Dict begin tx@NodeDict begin {27.54047 27.54047 } false /N@3ne
10 {InitPnode } NewNode end end
 4488 1633 a 4488
1633 a
 tx@Dict begin tx@NodeDict begin {-27.54047 -27.54047 } false /N@3sw
10 {InitPnode } NewNode end end
 4488 1633 a 4488 1633 a
 tx@Dict begin tx@NodeDict begin {27.54047 -27.54047 } false /N@3se
10 {InitPnode } NewNode end end
 4488 1633 a 945 w @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.9 SLW 0. setgray  0.0 0.0 12.80365 .5
CLW mul sub 0 360 arc closepath gsave 1. setgray fill grestore gsave
0.9 SLW 0. setgray 0 setlinecap stroke  grestore end
 
@endspecial 5433 1633 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 12.80365 } false /N@6 11
{InitCnode } NewNode end end
 5433 1633 a 5433
1633 a
 tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@6 known { -12.80365
0. /N@6 load 0 GetEdge 0.0 0. AddOffset /N@6 load GetCenter 3 -1 roll
add 3 1 roll add exch } { CP } ifelse end } PutCoor PutBegin  end
 5433 1633 a 5433 1633 a
 tx@Dict begin { 0.0 0.0 0.0 0.0 0.  Uput UUput } PutCoor PutBegin
 end
 5433 1633 a 0 TeXcolorgray
5433 1633 a
 tx@Dict begin CP CP translate 1.  1.  scale NET  end
 5433 1633 a 5433 1633 a
 tx@Dict begin CP CP translate 1.7  1.7  scale NET  end
 5433 1633 a 5433
1633 a
 tx@Dict begin mark RAngle /a ED cleartomark a neg  RotBegin  end
 5433 1633 a 5391 1660 a Fl(01)5433 1633 y
 tx@Dict begin RotEnd  end
 5433
1633 a 5433 1633 a
 tx@Dict begin CP CP translate 1 1.7 div 1 1.7 div scale NET  end
 5433 1633 a 5433 1633 a
 tx@Dict begin CP CP translate 1 1. div 1 1. div scale NET  end
 5433 1633
a 0 TeXcolorgray 5433 1633 a
 tx@Dict begin PutEnd  end
 5433 1633 a 5433 1633 a
 tx@Dict begin PutEnd  end

5433 1633 a 5433 1633 a
 tx@Dict begin tx@NodeDict begin {-38.41095 0.0 } false /N@6w 10 {InitPnode
} NewNode end end
 5433 1633 a 5433 1633 a
 tx@Dict begin tx@NodeDict begin {38.41095 0.0 } false /N@6e 10 {InitPnode
} NewNode end end
 5433
1633 a 5433 1633 a
 tx@Dict begin tx@NodeDict begin {0.0 38.41095 } false /N@6n 10 {InitPnode
} NewNode end end
 5433 1633 a 5433 1633 a
 tx@Dict begin tx@NodeDict begin {0.0 -38.41095 } false /N@6s 10 {InitPnode
} NewNode end end
 5433 1633
a 5433 1633 a
 tx@Dict begin tx@NodeDict begin {-27.54047 27.54047 } false /N@6nw
10 {InitPnode } NewNode end end
 5433 1633 a 5433 1633 a
 tx@Dict begin tx@NodeDict begin {27.54047 27.54047 } false /N@6ne
10 {InitPnode } NewNode end end
 5433 1633 a 5433
1633 a
 tx@Dict begin tx@NodeDict begin {-27.54047 -27.54047 } false /N@6sw
10 {InitPnode } NewNode end end
 5433 1633 a 5433 1633 a
 tx@Dict begin tx@NodeDict begin {27.54047 -27.54047 } false /N@6se
10 {InitPnode } NewNode end end
 5433 1633 a 1417 w @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.9 SLW 0. setgray  0.0 0.0 12.80365 .5
CLW mul sub 0 360 arc closepath gsave 1. setgray fill grestore gsave
0.9 SLW 0. setgray 0 setlinecap stroke  grestore end
 
@endspecial 6850 1633 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 12.80365 } false /N@8 11
{InitCnode } NewNode end end
 6850 1633 a 6850
1633 a
 tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@8 known { -12.80365
0. /N@8 load 0 GetEdge 0.0 0. AddOffset /N@8 load GetCenter 3 -1 roll
add 3 1 roll add exch } { CP } ifelse end } PutCoor PutBegin  end
 6850 1633 a 6850 1633 a
 tx@Dict begin { 0.0 0.0 0.0 0.0 0.  Uput UUput } PutCoor PutBegin
 end
 6850 1633 a 0 TeXcolorgray
6850 1633 a
 tx@Dict begin CP CP translate 1.  1.  scale NET  end
 6850 1633 a 6850 1633 a
 tx@Dict begin CP CP translate 1.7  1.7  scale NET  end
 6850 1633 a 6850
1633 a
 tx@Dict begin mark RAngle /a ED cleartomark a neg  RotBegin  end
 6850 1633 a 6808 1660 a Fl(11)6850 1633 y
 tx@Dict begin RotEnd  end
 6850
1633 a 6850 1633 a
 tx@Dict begin CP CP translate 1 1.7 div 1 1.7 div scale NET  end
 6850 1633 a 6850 1633 a
 tx@Dict begin CP CP translate 1 1. div 1 1. div scale NET  end
 6850 1633
a 0 TeXcolorgray 6850 1633 a
 tx@Dict begin PutEnd  end
 6850 1633 a 6850 1633 a
 tx@Dict begin PutEnd  end

6850 1633 a 6850 1633 a
 tx@Dict begin tx@NodeDict begin {-38.41095 0.0 } false /N@8w 10 {InitPnode
} NewNode end end
 6850 1633 a 6850 1633 a
 tx@Dict begin tx@NodeDict begin {38.41095 0.0 } false /N@8e 10 {InitPnode
} NewNode end end
 6850
1633 a 6850 1633 a
 tx@Dict begin tx@NodeDict begin {0.0 38.41095 } false /N@8n 10 {InitPnode
} NewNode end end
 6850 1633 a 6850 1633 a
 tx@Dict begin tx@NodeDict begin {0.0 -38.41095 } false /N@8s 10 {InitPnode
} NewNode end end
 6850 1633
a 6850 1633 a
 tx@Dict begin tx@NodeDict begin {-27.54047 27.54047 } false /N@8nw
10 {InitPnode } NewNode end end
 6850 1633 a 6850 1633 a
 tx@Dict begin tx@NodeDict begin {27.54047 27.54047 } false /N@8ne
10 {InitPnode } NewNode end end
 6850 1633 a 6850
1633 a
 tx@Dict begin tx@NodeDict begin {-27.54047 -27.54047 } false /N@8sw
10 {InitPnode } NewNode end end
 6850 1633 a 6850 1633 a
 tx@Dict begin tx@NodeDict begin {27.54047 -27.54047 } false /N@8se
10 {InitPnode } NewNode end end
 6850 1633 a 4724 2105
a
 tx@Dict begin tx@NodeDict begin {43.35732 0.0 } false /N@4e 10 {InitPnode
} NewNode end end
 4724 2105 a 4724 2105 a
 tx@Dict begin tx@NodeDict begin {-43.35732 0.0 } false /N@4w 10 {InitPnode
} NewNode end end
 4724 2105 a 4724 2105 a
 tx@Dict begin tx@NodeDict begin {0.0 38.41095 } false /N@4n 10 {InitPnode
} NewNode end end
 4724
2105 a 4724 2105 a
 tx@Dict begin tx@NodeDict begin {0.0 -38.41095 } false /N@4s 10 {InitPnode
} NewNode end end
 4724 2105 a 4570 2105 a
 tx@Dict begin tx@NodeDict begin {12.80365 12.80365 37.30003 18.65001
0.0 } false /N@4 16 {InitRnode } NewNode end end
 4570 2105
a 7 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.9 SLW 0. setgray  1. true 0.9 neg 12.80365
neg 36.40004 12.80365 .5 Frame  gsave 1. setgray fill grestore gsave
0.9 SLW 0. setgray 0 setlinecap stroke  grestore end
 
@endspecial 0 TeXcolorgray
4724 2105 a
 tx@Dict begin CP CP translate 1.  1.  scale NET  end
 4724 2105 a 4724 2105 a
 tx@Dict begin CP CP translate 1.7  1.7  scale NET  end
 4724 2105 a 4662
2126 a Fl(001)4724 2105 y
 tx@Dict begin CP CP translate 1 1.7 div 1 1.7 div scale NET  end
 4724 2105 a 4724 2105 a
 tx@Dict begin CP CP translate 1 1. div 1 1. div scale NET  end
 4724
2105 a 0 TeXcolorgray 5669 2105 a
 tx@Dict begin tx@NodeDict begin {43.35732 0.0 } false /N@7e 10 {InitPnode
} NewNode end end
 5669 2105 a 5669 2105
a
 tx@Dict begin tx@NodeDict begin {-43.35732 0.0 } false /N@7w 10 {InitPnode
} NewNode end end
 5669 2105 a 5669 2105 a
 tx@Dict begin tx@NodeDict begin {0.0 38.41095 } false /N@7n 10 {InitPnode
} NewNode end end
 5669 2105 a 5669 2105 a
 tx@Dict begin tx@NodeDict begin {0.0 -38.41095 } false /N@7s 10 {InitPnode
} NewNode end end
 5669
2105 a 5514 2105 a
 tx@Dict begin tx@NodeDict begin {12.80365 12.80365 37.30003 18.65001
0.0 } false /N@7 16 {InitRnode } NewNode end end
 5514 2105 a 7 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.9 SLW 0. setgray  1. true 0.9 neg 12.80365
neg 36.40004 12.80365 .5 Frame  gsave 1. setgray fill grestore gsave
0.9 SLW 0. setgray 0 setlinecap stroke  grestore end


@endspecial 0 TeXcolorgray 5669 2105 a
 tx@Dict begin CP CP translate 1.  1.  scale NET  end
 5669 2105 a 5669
2105 a
 tx@Dict begin CP CP translate 1.7  1.7  scale NET  end
 5669 2105 a 5607 2126 a Fl(011)5669 2105 y
 tx@Dict begin CP CP translate 1 1.7 div 1 1.7 div scale NET  end
 5669
2105 a 5669 2105 a
 tx@Dict begin CP CP translate 1 1. div 1 1. div scale NET  end
 5669 2105 a 0 TeXcolorgray 4961 1160
a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.9 SLW 0. setgray  0.0 0.0 12.80365 .5
CLW mul sub 0 360 arc closepath gsave 1. setgray fill grestore gsave
0.9 SLW 0. setgray 0 setlinecap stroke  grestore end
 
@endspecial 4961 1160 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 12.80365 } false /N@2 11
{InitCnode } NewNode end end

4961 1160 a 4961 1160 a
 tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@2 known { -12.80365
0. /N@2 load 0 GetEdge 0.0 0. AddOffset /N@2 load GetCenter 3 -1 roll
add 3 1 roll add exch } { CP } ifelse end } PutCoor PutBegin  end
 4961 1160 a 4961 1160 a
 tx@Dict begin { 0.0 0.0 0.0 0.0 0.  Uput UUput } PutCoor PutBegin
 end
 4961
1160 a 0 TeXcolorgray 4961 1160 a
 tx@Dict begin CP CP translate 1.  1.  scale NET  end
 4961 1160 a 4961 1160
a
 tx@Dict begin CP CP translate 1.7  1.7  scale NET  end
 4961 1160 a 4961 1160 a
 tx@Dict begin mark RAngle /a ED cleartomark a neg  RotBegin  end
 4961 1160 a 4940 1187 a Fl(0)4961
1160 y
 tx@Dict begin RotEnd  end
 4961 1160 a 4961 1160 a
 tx@Dict begin CP CP translate 1 1.7 div 1 1.7 div scale NET  end
 4961 1160 a 4961 1160
a
 tx@Dict begin CP CP translate 1 1. div 1 1. div scale NET  end
 4961 1160 a 0 TeXcolorgray 4961 1160 a
 tx@Dict begin PutEnd  end
 4961 1160 a
4961 1160 a
 tx@Dict begin PutEnd  end
 4961 1160 a 4961 1160 a
 tx@Dict begin tx@NodeDict begin {-38.41095 0.0 } false /N@2w 10 {InitPnode
} NewNode end end
 4961 1160 a 4961
1160 a
 tx@Dict begin tx@NodeDict begin {38.41095 0.0 } false /N@2e 10 {InitPnode
} NewNode end end
 4961 1160 a 4961 1160 a
 tx@Dict begin tx@NodeDict begin {0.0 38.41095 } false /N@2n 10 {InitPnode
} NewNode end end
 4961 1160 a 4961 1160
a
 tx@Dict begin tx@NodeDict begin {0.0 -38.41095 } false /N@2s 10 {InitPnode
} NewNode end end
 4961 1160 a 4961 1160 a
 tx@Dict begin tx@NodeDict begin {-27.54047 27.54047 } false /N@2nw
10 {InitPnode } NewNode end end
 4961 1160 a 4961 1160 a
 tx@Dict begin tx@NodeDict begin {27.54047 27.54047 } false /N@2ne
10 {InitPnode } NewNode end end
 4961
1160 a 4961 1160 a
 tx@Dict begin tx@NodeDict begin {-27.54047 -27.54047 } false /N@2sw
10 {InitPnode } NewNode end end
 4961 1160 a 4961 1160 a
 tx@Dict begin tx@NodeDict begin {27.54047 -27.54047 } false /N@2se
10 {InitPnode } NewNode end end
 4961 1160
a 1653 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.9 SLW 0. setgray  0.0 0.0 12.80365 .5
CLW mul sub 0 360 arc closepath gsave 1. setgray fill grestore gsave
0.9 SLW 0. setgray 0 setlinecap stroke  grestore end
 
@endspecial 6614
1160 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 12.80365 } false /N@5 11
{InitCnode } NewNode end end
 6614 1160 a 6614 1160 a
 tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@5 known { -12.80365
0. /N@5 load 0 GetEdge 0.0 0. AddOffset /N@5 load GetCenter 3 -1 roll
add 3 1 roll add exch } { CP } ifelse end } PutCoor PutBegin  end
 6614 1160 a 6614 1160
a
 tx@Dict begin { 0.0 0.0 0.0 0.0 0.  Uput UUput } PutCoor PutBegin
 end
 6614 1160 a 0 TeXcolorgray 6614 1160 a
 tx@Dict begin CP CP translate 1.  1.  scale NET  end
 6614 1160 a
6614 1160 a
 tx@Dict begin CP CP translate 1.7  1.7  scale NET  end
 6614 1160 a 6614 1160 a
 tx@Dict begin mark RAngle /a ED cleartomark a neg  RotBegin  end
 6614 1160 a 6593
1187 a Fl(1)6614 1160 y
 tx@Dict begin RotEnd  end
 6614 1160 a 6614 1160 a
 tx@Dict begin CP CP translate 1 1.7 div 1 1.7 div scale NET  end
 6614
1160 a 6614 1160 a
 tx@Dict begin CP CP translate 1 1. div 1 1. div scale NET  end
 6614 1160 a 0 TeXcolorgray 6614 1160
a
 tx@Dict begin PutEnd  end
 6614 1160 a 6614 1160 a
 tx@Dict begin PutEnd  end
 6614 1160 a 6614 1160 a
 tx@Dict begin tx@NodeDict begin {-38.41095 0.0 } false /N@5w 10 {InitPnode
} NewNode end end
 6614
1160 a 6614 1160 a
 tx@Dict begin tx@NodeDict begin {38.41095 0.0 } false /N@5e 10 {InitPnode
} NewNode end end
 6614 1160 a 6614 1160 a
 tx@Dict begin tx@NodeDict begin {0.0 38.41095 } false /N@5n 10 {InitPnode
} NewNode end end
 6614 1160
a 6614 1160 a
 tx@Dict begin tx@NodeDict begin {0.0 -38.41095 } false /N@5s 10 {InitPnode
} NewNode end end
 6614 1160 a 6614 1160 a
 tx@Dict begin tx@NodeDict begin {-27.54047 27.54047 } false /N@5nw
10 {InitPnode } NewNode end end
 6614 1160 a 6614
1160 a
 tx@Dict begin tx@NodeDict begin {27.54047 27.54047 } false /N@5ne
10 {InitPnode } NewNode end end
 6614 1160 a 6614 1160 a
 tx@Dict begin tx@NodeDict begin {-27.54047 -27.54047 } false /N@5sw
10 {InitPnode } NewNode end end
 6614 1160 a 6614 1160
a
 tx@Dict begin tx@NodeDict begin {27.54047 -27.54047 } false /N@5se
10 {InitPnode } NewNode end end
 6614 1160 a 5906 688 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.9 SLW 0. setgray  0.0 0.0 12.80365 .5
CLW mul sub 0 360 arc closepath gsave 1. setgray fill grestore gsave
0.9 SLW 0. setgray 0 setlinecap stroke  grestore end
 
@endspecial
5906 688 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 12.80365 } false /N@1 11
{InitCnode } NewNode end end
 5906 688 a 5906 688 a
 tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@1 known { -12.80365
0. /N@1 load 0 GetEdge 0.0 0. AddOffset /N@1 load GetCenter 3 -1 roll
add 3 1 roll add exch } { CP } ifelse end } PutCoor PutBegin  end
 5906 688 a 5906 688
a
 tx@Dict begin { 0.0 0.0 0.0 0.0 0.  Uput UUput } PutCoor PutBegin
 end
 5906 688 a 0 TeXcolorgray 5906 688 a
 tx@Dict begin CP CP translate 1.  1.  scale NET  end
 5906 688 a 5906
688 a
 tx@Dict begin CP CP translate 1.7  1.7  scale NET  end
 5906 688 a 5906 688 a
 tx@Dict begin mark RAngle /a ED cleartomark a neg  RotBegin  end
 5906 688 a 5887 706 a Fo(")5906
688 y
 tx@Dict begin RotEnd  end
 5906 688 a 5906 688 a
 tx@Dict begin CP CP translate 1 1.7 div 1 1.7 div scale NET  end
 5906 688 a 5906 688 a
 tx@Dict begin CP CP translate 1 1. div 1 1. div scale NET  end
 5906
688 a 0 TeXcolorgray 5906 688 a
 tx@Dict begin PutEnd  end
 5906 688 a 5906 688 a
 tx@Dict begin PutEnd  end

5906 688 a 5906 688 a
 tx@Dict begin tx@NodeDict begin {-38.41095 0.0 } false /N@1w 10 {InitPnode
} NewNode end end
 5906 688 a 5906 688 a
 tx@Dict begin tx@NodeDict begin {38.41095 0.0 } false /N@1e 10 {InitPnode
} NewNode end end
 5906 688
a 5906 688 a
 tx@Dict begin tx@NodeDict begin {0.0 38.41095 } false /N@1n 10 {InitPnode
} NewNode end end
 5906 688 a 5906 688 a
 tx@Dict begin tx@NodeDict begin {0.0 -38.41095 } false /N@1s 10 {InitPnode
} NewNode end end
 5906 688 a 5906 688
a
 tx@Dict begin tx@NodeDict begin {-27.54047 27.54047 } false /N@1nw
10 {InitPnode } NewNode end end
 5906 688 a 5906 688 a
 tx@Dict begin tx@NodeDict begin {27.54047 27.54047 } false /N@1ne
10 {InitPnode } NewNode end end
 5906 688 a 5906 688 a
 tx@Dict begin tx@NodeDict begin {-27.54047 -27.54047 } false /N@1sw
10 {InitPnode } NewNode end end
 5906 688
a 5906 688 a
 tx@Dict begin tx@NodeDict begin {27.54047 -27.54047 } false /N@1se
10 {InitPnode } NewNode end end
 5906 688 a 4016 2578 a
 tx@Dict begin gsave STV newpath 2.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.1 1.4 6.5 0. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@1 /N@2 InitNC { NCLine  } if end gsave 2.0 SLW 0. setgray 0
setlinecap stroke  grestore  grestore end
 4016 2578 a 4016
2578 a
 tx@Dict begin tx@NodeDict begin /t 0.5 def LPut end PutBegin  end
 4016 2578 a 4016 2578 a
 tx@Dict begin { 3.5 tx@Dict /NCLW known { NCLW add } if 0.0 0.0 0.0
NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor
PutBegin  end
 4016 2578 a 0 TeXcolorgray
4016 2578 a
 tx@Dict begin CP CP translate 1.  1.  scale NET  end
 4016 2578 a 4016 2578 a
 tx@Dict begin CP CP translate 1.7  1.7  scale NET  end
 4016 2578 a 4016
2578 a
 tx@Dict begin CP CP translate 1 1.7 div 1 1.7 div scale NET  end
 4016 2578 a 4016 2578 a
 tx@Dict begin CP CP translate 1 1. div 1 1. div scale NET  end
 4016 2578 a 0 TeXcolorgray
4016 2578 a
 tx@Dict begin PutEnd  end
 4016 2578 a 4016 2578 a
 tx@Dict begin PutEnd  end
 4016 2578 a 4016
2578 a
 tx@Dict begin gsave STV newpath 2.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.1 1.4 6.5 0. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@2 /N@3 InitNC { NCLine  } if end gsave 2.0 SLW 0. setgray 0
setlinecap stroke  grestore  grestore end
 4016 2578 a 4016 2578 a
 tx@Dict begin tx@NodeDict begin /t 0.5 def LPut end PutBegin  end
 4016 2578 a 4016 2578
a
 tx@Dict begin { 3.5 tx@Dict /NCLW known { NCLW add } if 0.0 0.0 0.0
NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor
PutBegin  end
 4016 2578 a 0 TeXcolorgray 4016 2578 a
 tx@Dict begin CP CP translate 1.  1.  scale NET  end
 4016 2578 a
4016 2578 a
 tx@Dict begin CP CP translate 1.7  1.7  scale NET  end
 4016 2578 a 4016 2578 a
 tx@Dict begin CP CP translate 1 1.7 div 1 1.7 div scale NET  end
 4016 2578 a 4016
2578 a
 tx@Dict begin CP CP translate 1 1. div 1 1. div scale NET  end
 4016 2578 a 0 TeXcolorgray 4016 2578 a
 tx@Dict begin PutEnd  end
 4016 2578
a 4016 2578 a
 tx@Dict begin PutEnd  end
 4016 2578 a 4016 2578 a
 tx@Dict begin gsave STV newpath 2.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.1 1.4 6.5 0. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@5 /N@1 InitNC { /AngleA 90.  def /AngleB 2.  def 1.2  1.2  NCCurve
 } if end gsave 2.0 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 4016 2578 a 4016
2578 a
 tx@Dict begin tx@NodeDict begin /t 0.5 def LPut end PutBegin  end
 4016 2578 a 4016 2578 a
 tx@Dict begin { 3.5 tx@Dict /NCLW known { NCLW add } if 0.0 0.0 0.0
NAngle 90 sub  Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor
PutBegin  end
 4016 2578 a 0 TeXcolorgray
4016 2578 a
 tx@Dict begin CP CP translate 1.  1.  scale NET  end
 4016 2578 a 4016 2578 a
 tx@Dict begin CP CP translate 1.7  1.7  scale NET  end
 4016 2578 a 4016
2578 a
 tx@Dict begin CP CP translate 1 1.7 div 1 1.7 div scale NET  end
 4016 2578 a 4016 2578 a
 tx@Dict begin CP CP translate 1 1. div 1 1. div scale NET  end
 4016 2578 a 0 TeXcolorgray
4016 2578 a
 tx@Dict begin PutEnd  end
 4016 2578 a 4016 2578 a
 tx@Dict begin PutEnd  end
 4016 2578 a 4016
2578 a
 tx@Dict begin gsave STV newpath 2.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.1 1.4 6.5 0. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin -1.0 -1.0 neg 0.0
0.0 0 0 /N@3 /N@1 InitNC { yB yA sub xB xA sub Atan dup 60.  add /AngleA
ED 60.  sub 180 add /AngleB ED 0.7  0.7  NCCurve  } if end gsave 2.0
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 4016 2578 a 4016 2578 a
 tx@Dict begin tx@NodeDict begin /t 0.5 def LPut end PutBegin  end
 4016 2578 a 4016 2578
a
 tx@Dict begin { 3.5 tx@Dict /NCLW known { NCLW add } if 0.0 0.0 0.0
NAngle 90 sub  Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor
PutBegin  end
 4016 2578 a 0 TeXcolorgray 4016 2578 a
 tx@Dict begin CP CP translate 1.  1.  scale NET  end
 4016 2578 a
4016 2578 a
 tx@Dict begin CP CP translate 1.7  1.7  scale NET  end
 4016 2578 a 4016 2578 a
 tx@Dict begin CP CP translate 1 1.7 div 1 1.7 div scale NET  end
 4016 2578 a 4016
2578 a
 tx@Dict begin CP CP translate 1 1. div 1 1. div scale NET  end
 4016 2578 a 0 TeXcolorgray 4016 2578 a
 tx@Dict begin PutEnd  end
 4016 2578
a 4016 2578 a
 tx@Dict begin PutEnd  end
 4016 2578 a 4016 2578 a
 tx@Dict begin gsave STV newpath 2.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.1 1.4 6.5 0. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin -1.0 -1.0 neg 0.0
0.0 0 0 /N@6 /N@1 InitNC { yB yA sub xB xA sub Atan dup -15.  add /AngleA
ED -15.  sub 180 add /AngleB ED 0.8  0.8  NCCurve  } if end gsave 2.0
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 4016 2578 a 4016
2578 a
 tx@Dict begin tx@NodeDict begin /t 0.5 def LPut end PutBegin  end
 4016 2578 a 4016 2578 a
 tx@Dict begin { 3.5 tx@Dict /NCLW known { NCLW add } if 0.0 0.0 0.0
NAngle 90 sub  Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor
PutBegin  end
 4016 2578 a 0 TeXcolorgray
4016 2578 a
 tx@Dict begin CP CP translate 1.  1.  scale NET  end
 4016 2578 a 4016 2578 a
 tx@Dict begin CP CP translate 1.7  1.7  scale NET  end
 4016 2578 a 4016
2578 a
 tx@Dict begin CP CP translate 1 1.7 div 1 1.7 div scale NET  end
 4016 2578 a 4016 2578 a
 tx@Dict begin CP CP translate 1 1. div 1 1. div scale NET  end
 4016 2578 a 0 TeXcolorgray
4016 2578 a
 tx@Dict begin PutEnd  end
 4016 2578 a 4016 2578 a
 tx@Dict begin PutEnd  end
 4016 2578 a 4016
2578 a
 tx@Dict begin gsave STV newpath 2.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.1 1.4 6.5 0. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@1 /N@5 InitNC { NCLine  } if end gsave 2.0 SLW 0. setgray 5.0
3.0 -2 0 add DashLine  grestore  grestore end
 4016 2578 a 4016 2578 a
 tx@Dict begin tx@NodeDict begin /t 0.5 def LPut end PutBegin  end
 4016 2578 a 4016 2578
a
 tx@Dict begin { 3.5 tx@Dict /NCLW known { NCLW add } if 0.0 0.0 0.0
NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor
PutBegin  end
 4016 2578 a 0 TeXcolorgray 4016 2578 a
 tx@Dict begin CP CP translate 1.  1.  scale NET  end
 4016 2578 a
4016 2578 a
 tx@Dict begin CP CP translate 1.7  1.7  scale NET  end
 4016 2578 a 4016 2578 a
 tx@Dict begin CP CP translate 1 1.7 div 1 1.7 div scale NET  end
 4016 2578 a 4016
2578 a
 tx@Dict begin CP CP translate 1 1. div 1 1. div scale NET  end
 4016 2578 a 0 TeXcolorgray 4016 2578 a
 tx@Dict begin PutEnd  end
 4016 2578
a 4016 2578 a
 tx@Dict begin PutEnd  end
 4016 2578 a 4016 2578 a
 tx@Dict begin gsave STV newpath 2.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.1 1.4 6.5 0. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@2 /N@6 InitNC { NCLine  } if end gsave 2.0 SLW 0. setgray 5.0
3.0 -2 0 add DashLine  grestore  grestore end
 4016 2578 a 4016
2578 a
 tx@Dict begin tx@NodeDict begin /t 0.5 def LPut end PutBegin  end
 4016 2578 a 4016 2578 a
 tx@Dict begin { 3.5 tx@Dict /NCLW known { NCLW add } if 0.0 0.0 0.0
NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor
PutBegin  end
 4016 2578 a 0 TeXcolorgray
4016 2578 a
 tx@Dict begin CP CP translate 1.  1.  scale NET  end
 4016 2578 a 4016 2578 a
 tx@Dict begin CP CP translate 1.7  1.7  scale NET  end
 4016 2578 a 4016
2578 a
 tx@Dict begin CP CP translate 1 1.7 div 1 1.7 div scale NET  end
 4016 2578 a 4016 2578 a
 tx@Dict begin CP CP translate 1 1. div 1 1. div scale NET  end
 4016 2578 a 0 TeXcolorgray
4016 2578 a
 tx@Dict begin PutEnd  end
 4016 2578 a 4016 2578 a
 tx@Dict begin PutEnd  end
 4016 2578 a 4016
2578 a
 tx@Dict begin gsave STV newpath 2.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.1 1.4 6.5 0. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@4 /N@1 InitNC { /AngleA 140.  def /AngleB 140.  def 1.6  1.6
 NCCurve  } if end gsave 2.0 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 4016 2578 a 4016 2578 a
 tx@Dict begin tx@NodeDict begin /t 0.5 def LPut end PutBegin  end
 4016 2578 a 4016 2578
a
 tx@Dict begin { 3.5 tx@Dict /NCLW known { NCLW add } if 0.0 0.0 0.0
NAngle 90 sub  Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor
PutBegin  end
 4016 2578 a 0 TeXcolorgray 4016 2578 a
 tx@Dict begin CP CP translate 1.  1.  scale NET  end
 4016 2578 a
4016 2578 a
 tx@Dict begin CP CP translate 1.7  1.7  scale NET  end
 4016 2578 a 4016 2578 a
 tx@Dict begin CP CP translate 1 1.7 div 1 1.7 div scale NET  end
 4016 2578 a 4016
2578 a
 tx@Dict begin CP CP translate 1 1. div 1 1. div scale NET  end
 4016 2578 a 0 TeXcolorgray 4016 2578 a
 tx@Dict begin PutEnd  end
 4016 2578
a 4016 2578 a
 tx@Dict begin PutEnd  end
 4016 2578 a 4016 2578 a
 tx@Dict begin gsave STV newpath 2.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.1 1.4 6.5 0. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@8 /N@1 InitNC { /AngleA 20.  def /AngleB 50.  def 0.9  0.9 
NCCurve  } if end gsave 2.0 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 4016 2578 a 4016
2578 a
 tx@Dict begin tx@NodeDict begin /t 0.5 def LPut end PutBegin  end
 4016 2578 a 4016 2578 a
 tx@Dict begin { 3.5 tx@Dict /NCLW known { NCLW add } if 0.0 0.0 0.0
NAngle 90 sub  Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor
PutBegin  end
 4016 2578 a 0 TeXcolorgray
4016 2578 a
 tx@Dict begin CP CP translate 1.  1.  scale NET  end
 4016 2578 a 4016 2578 a
 tx@Dict begin CP CP translate 1.7  1.7  scale NET  end
 4016 2578 a 4016
2578 a
 tx@Dict begin CP CP translate 1 1.7 div 1 1.7 div scale NET  end
 4016 2578 a 4016 2578 a
 tx@Dict begin CP CP translate 1 1. div 1 1. div scale NET  end
 4016 2578 a 0 TeXcolorgray
4016 2578 a
 tx@Dict begin PutEnd  end
 4016 2578 a 4016 2578 a
 tx@Dict begin PutEnd  end
 4016 2578 a 4016
2578 a
 tx@Dict begin gsave STV newpath 2.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.1 1.4 6.5 0. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@7 /N@1 InitNC { /AngleA 25.  def /AngleB -74.  def 0.6  0.6
 NCCurve  } if end gsave 2.0 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 4016 2578 a 4016 2578 a
 tx@Dict begin tx@NodeDict begin /t 0.5 def LPut end PutBegin  end
 4016 2578 a 4016 2578
a
 tx@Dict begin { 3.5 tx@Dict /NCLW known { NCLW add } if 0.0 0.0 0.0
NAngle 90 sub  Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor
PutBegin  end
 4016 2578 a 0 TeXcolorgray 4016 2578 a
 tx@Dict begin CP CP translate 1.  1.  scale NET  end
 4016 2578 a
4016 2578 a
 tx@Dict begin CP CP translate 1.7  1.7  scale NET  end
 4016 2578 a 4016 2578 a
 tx@Dict begin CP CP translate 1 1.7 div 1 1.7 div scale NET  end
 4016 2578 a 4016
2578 a
 tx@Dict begin CP CP translate 1 1. div 1 1. div scale NET  end
 4016 2578 a 0 TeXcolorgray 4016 2578 a
 tx@Dict begin PutEnd  end
 4016 2578
a 4016 2578 a
 tx@Dict begin PutEnd  end
 4016 2578 a 4016 2578 a
 tx@Dict begin gsave STV newpath 2.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.1 1.4 6.5 0. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@3 /N@4 InitNC { NCLine  } if end gsave 2.0 SLW 0. setgray 5.0
3.0 -2 0 add DashLine  grestore  grestore end
 4016 2578 a 4016
2578 a
 tx@Dict begin tx@NodeDict begin /t 0.5 def LPut end PutBegin  end
 4016 2578 a 4016 2578 a
 tx@Dict begin { 3.5 tx@Dict /NCLW known { NCLW add } if 0.0 0.0 0.0
NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor
PutBegin  end
 4016 2578 a 0 TeXcolorgray
4016 2578 a
 tx@Dict begin CP CP translate 1.  1.  scale NET  end
 4016 2578 a 4016 2578 a
 tx@Dict begin CP CP translate 1.7  1.7  scale NET  end
 4016 2578 a 4016
2578 a
 tx@Dict begin CP CP translate 1 1.7 div 1 1.7 div scale NET  end
 4016 2578 a 4016 2578 a
 tx@Dict begin CP CP translate 1 1. div 1 1. div scale NET  end
 4016 2578 a 0 TeXcolorgray
4016 2578 a
 tx@Dict begin PutEnd  end
 4016 2578 a 4016 2578 a
 tx@Dict begin PutEnd  end
 4016 2578 a 4016
2578 a
 tx@Dict begin gsave STV newpath 2.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.1 1.4 6.5 0. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@6 /N@7 InitNC { NCLine  } if end gsave 2.0 SLW 0. setgray 5.0
3.0 -2 0 add DashLine  grestore  grestore end
 4016 2578 a 4016 2578 a
 tx@Dict begin tx@NodeDict begin /t 0.5 def LPut end PutBegin  end
 4016 2578 a 4016 2578
a
 tx@Dict begin { 3.5 tx@Dict /NCLW known { NCLW add } if 0.0 0.0 0.0
NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor
PutBegin  end
 4016 2578 a 0 TeXcolorgray 4016 2578 a
 tx@Dict begin CP CP translate 1.  1.  scale NET  end
 4016 2578 a
4016 2578 a
 tx@Dict begin CP CP translate 1.7  1.7  scale NET  end
 4016 2578 a 4016 2578 a
 tx@Dict begin CP CP translate 1 1.7 div 1 1.7 div scale NET  end
 4016 2578 a 4016
2578 a
 tx@Dict begin CP CP translate 1 1. div 1 1. div scale NET  end
 4016 2578 a 0 TeXcolorgray 4016 2578 a
 tx@Dict begin PutEnd  end
 4016 2578
a 4016 2578 a
 tx@Dict begin PutEnd  end
 4016 2578 a 4016 2578 a
 tx@Dict begin gsave STV newpath 2.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.1 1.4 6.5 0. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@5 /N@8 InitNC { NCLine  } if end gsave 2.0 SLW 0. setgray 5.0
3.0 -2 0 add DashLine  grestore  grestore end
 4016 2578 a 4016
2578 a
 tx@Dict begin tx@NodeDict begin /t 0.5 def LPut end PutBegin  end
 4016 2578 a 4016 2578 a
 tx@Dict begin { 3.5 tx@Dict /NCLW known { NCLW add } if 0.0 0.0 0.0
NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor
PutBegin  end
 4016 2578 a 0 TeXcolorgray
4016 2578 a
 tx@Dict begin CP CP translate 1.  1.  scale NET  end
 4016 2578 a 4016 2578 a
 tx@Dict begin CP CP translate 1.7  1.7  scale NET  end
 4016 2578 a 4016
2578 a
 tx@Dict begin CP CP translate 1 1.7 div 1 1.7 div scale NET  end
 4016 2578 a 4016 2578 a
 tx@Dict begin CP CP translate 1 1. div 1 1. div scale NET  end
 4016 2578 a 0 TeXcolorgray
4016 2578 a
 tx@Dict begin PutEnd  end
 4016 2578 a 4016 2578 a
 tx@Dict begin PutEnd  end
 4016 2578 a 4016
2578 a
 tx@Dict begin gsave STV newpath 2.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.1 1.4 6.5 0. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@4 /N@1 InitNC { /AngleA 170.  def /AngleB 120.  def 1.9  1.9
 NCCurve  } if end gsave 2.0 SLW 0. setgray 5.0 3.0 -2 0 add DashLine
 grestore  grestore end
 4016 2578 a 4016 2578 a
 tx@Dict begin tx@NodeDict begin /t 0.5 def LPut end PutBegin  end
 4016 2578 a 4016 2578
a
 tx@Dict begin { 3.5 tx@Dict /NCLW known { NCLW add } if 0.0 0.0 0.0
NAngle 90 sub  Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor
PutBegin  end
 4016 2578 a 0 TeXcolorgray 4016 2578 a
 tx@Dict begin CP CP translate 1.  1.  scale NET  end
 4016 2578 a
4016 2578 a
 tx@Dict begin CP CP translate 1.7  1.7  scale NET  end
 4016 2578 a 4016 2578 a
 tx@Dict begin CP CP translate 1 1.7 div 1 1.7 div scale NET  end
 4016 2578 a 4016
2578 a
 tx@Dict begin CP CP translate 1 1. div 1 1. div scale NET  end
 4016 2578 a 0 TeXcolorgray 4016 2578 a
 tx@Dict begin PutEnd  end
 4016 2578
a 4016 2578 a
 tx@Dict begin PutEnd  end
 4016 2578 a 4016 2578 a
 tx@Dict begin gsave STV newpath 2.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.1 1.4 6.5 0. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@8 /N@1 InitNC { /AngleA 10.  def /AngleB 76.  def 1.2  1.2 
NCCurve  } if end gsave 2.0 SLW 0. setgray 5.0 3.0 -2 0 add DashLine
 grestore  grestore end
 4016 2578 a 4016
2578 a
 tx@Dict begin tx@NodeDict begin /t 0.5 def LPut end PutBegin  end
 4016 2578 a 4016 2578 a
 tx@Dict begin { 3.5 tx@Dict /NCLW known { NCLW add } if 0.0 0.0 0.0
NAngle 90 sub  Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor
PutBegin  end
 4016 2578 a 0 TeXcolorgray
4016 2578 a
 tx@Dict begin CP CP translate 1.  1.  scale NET  end
 4016 2578 a 4016 2578 a
 tx@Dict begin CP CP translate 1.7  1.7  scale NET  end
 4016 2578 a 4016
2578 a
 tx@Dict begin CP CP translate 1 1.7 div 1 1.7 div scale NET  end
 4016 2578 a 4016 2578 a
 tx@Dict begin CP CP translate 1 1. div 1 1. div scale NET  end
 4016 2578 a 0 TeXcolorgray
4016 2578 a
 tx@Dict begin PutEnd  end
 4016 2578 a 4016 2578 a
 tx@Dict begin PutEnd  end
 4016 2578 a 4016
2578 a
 tx@Dict begin gsave STV newpath 2.0 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.1 1.4 6.5 0. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@7 /N@1 InitNC { /AngleA 15.  def /AngleB -56.  def 0.8  0.8
 NCCurve  } if end gsave 2.0 SLW 0. setgray 5.0 3.0 -2 0 add DashLine
 grestore  grestore end
 4016 2578 a 4016 2578 a
 tx@Dict begin tx@NodeDict begin /t 0.5 def LPut end PutBegin  end
 4016 2578 a 4016 2578
a
 tx@Dict begin { 3.5 tx@Dict /NCLW known { NCLW add } if 0.0 0.0 0.0
NAngle 90 sub  Uput exch pop add a PtoC h1 add exch w1 add exch } PutCoor
PutBegin  end
 4016 2578 a 0 TeXcolorgray 4016 2578 a
 tx@Dict begin CP CP translate 1.  1.  scale NET  end
 4016 2578 a
4016 2578 a
 tx@Dict begin CP CP translate 1.7  1.7  scale NET  end
 4016 2578 a 4016 2578 a
 tx@Dict begin CP CP translate 1 1.7 div 1 1.7 div scale NET  end
 4016 2578 a 4016
2578 a
 tx@Dict begin CP CP translate 1 1. div 1 1. div scale NET  end
 4016 2578 a 0 TeXcolorgray 4016 2578 a
 tx@Dict begin PutEnd  end
 4016 2578
a 4016 2578 a
 tx@Dict begin PutEnd  end
 4016 2578 a 0 1160 a
 tx@Dict begin CP CP translate 1 0.4 div 1 0.4 div scale NET  end
 0 1160 a 0 TeXcolorgray
213 1786 a Fk(Figur)o(e)h(3.)25 b Fq(A)c(synchronized)c(code)i(\(on)h
(the)g(left\))g(and)g(its)h(automaton)d(\(on)i(the)g(right\))p
0 TeXcolorgray -734 1741 685 4 v -734 1852 4 111 v -706
1815 a Fr(KV:fig:huffman)p -53 1852 V -734 1855 685 4
v 0 TeXcolorgray 0 TeXcolorgray -129 1904 a Fw(87)p 0
TeXcolorgray 118 1986 a Fq(An)26 b(additional)e(source)h(of)h(problems)
e(related)h(to)h(synchronizing)d(automata)h(has)i(come)f(from)p
0 TeXcolorgray -3083 w Fw(88)p 0 TeXcolorgray 0 2085
a Fn(r)l(obotics)20 b Fq(or)m(,)f(more)h(precisely)-5
b(,)19 b(from)g(part)h(handling)e(problems)h(in)h(industrial)f
(automation)g(such)h(as)p 0 TeXcolorgray -3082 w Fw(89)p
0 TeXcolorgray 0 2185 a Fq(part)k(feeding,)f(\002xturing,)g(loading,)h
(assembly)f(and)h(packing.)34 b(W)m(ithin)24 b(this)h(frame)n(w)o(ork,)
d(the)i(con-)p 0 TeXcolorgray -3083 w Fw(90)p 0 TeXcolorgray
0 2285 a Fq(cept)19 b(of)f(a)h(synchronizing)d(automaton)h(w)o(as)i
(again)f(redisco)o(v)o(ered)e(in)j(the)f(mid-1980s)f(by)h(Natarajan)p
0 TeXcolorgray -3083 w Fw(91)p 0 TeXcolorgray 0 2384
a Fq([13)o(,)d(14)o(])h(who)f(sho)n(wed)g(ho)n(w)f(synchronizing)f
(automata)h(can)h(be)h(used)f(to)h(design)e(sensor)n(-free)h(orien-)p
0 TeXcolorgray -3084 w Fw(92)p 0 TeXcolorgray 0 2484
a Fq(ters)21 b(for)f(polygonal)e(parts,)j(see)g([17)n(,)g(Section)g(1])
f(for)g(a)h(transparent)e(e)o(xample)g(illustrating)h(Natara-)p
0 TeXcolorgray -3083 w Fw(93)p 0 TeXcolorgray 0 2583
a Fq(jan')-5 b(s)26 b(approach)d(in)j(a)g(nutshell.)40
b(Since)26 b(the)f(1990s)f(synchronizing)f(automata)h(usage)h(in)h(the)
g(area)p 0 TeXcolorgray -3083 w Fw(94)p 0 TeXcolorgray
0 2683 a Fq(of)h(robotic)f(manipulation)f(has)i(gro)n(wn)f(into)h(a)h
(proli\002c)e(research)g(direction)g(b)n(ut)i(it)f(is)i(f)o(air)e(to)g
(say)p 0 TeXcolorgray -3082 w Fw(95)p 0 TeXcolorgray
0 2783 a Fq(that)g(publications)e(in)i(this)g(area)g(deal)f(mostly)h
(with)g(implementation)d(technicalities.)44 b(Ho)n(we)n(v)o(er)m(,)p
0 TeXcolorgray -3084 w Fw(96)p 0 TeXcolorgray 0 2882
a Fq(amongst)19 b(them)h(there)g(are)g(papers)f(of)h(signi\002cant)g
(theoretical)f(importance)f(such)i(as)h([7)o(,)g(10)o(,)f(5].)p
0 TeXcolorgray -2975 w Fw(97)p 0 TeXcolorgray 542 3309
a Fx(2)59 b(Algorithmic)31 b(and)f(complexity)g(issues)p
0 TeXcolorgray -2541 w Fw(98)p 0 TeXcolorgray 861 3558
a Fx(3)59 b(The)1233 3531 y(\020)1210 3558 y(Cer)n(n)1476
3557 y(\264)1466 3558 y(y)30 b(conjectur)n(e)p 0 TeXcolorgray
-2220 w Fw(99)p 0 TeXcolorgray 692 3807 a Fx(4)60 b(The)30
b(Road)g(Coloring)h(Pr)n(oblem)p 0 TeXcolorgray -2413
w Fw(100)p 0 TeXcolorgray 1015 4056 a Fx(5)59 b(Generalizations)p
0 TeXcolorgray -2089 w Fw(101)p 0 TeXcolorgray 1199 4582
a Fx(Refer)n(ences)p 0 TeXcolorgray -1906 w Fw(102)p
0 TeXcolorgray 0 TeXcolorgray 37 4773 a Fs([1])p 0 TeXcolorgray
42 w(W)-7 b(.)18 b(R.)g(Ashby)-5 b(.)28 b Fa(An)19 b(intr)m(oduction)h
(to)e(cybernetics)p Fs(.)28 b(Chapman)20 b(&)f(Hall,)f(1956.)28
b(2)p 0 TeXcolorgray -2471 w Fw(103)p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 5 5
TeXDict begin 5 4 bop 0 TeXcolorgray 0 TeXcolorgray 1392
71 a Fs(Inde)o(x)1351 b Fq(5)p 0 TeXcolorgray 0 TeXcolorgray
37 282 a Fs([2])p 0 TeXcolorgray 42 w(J.)20 b(Berstel,)f(D.)h(Perrin,)g
(and)h(C.)e(Reutenauer)l(.)32 b Fa(Codes)21 b(and)g(automata)p
Fs(.)32 b(Number)21 b(129)g(in)f(Enc)o(yclopedia)p 0
TeXcolorgray -3103 w Fw(104)p 0 TeXcolorgray 166 374
a Fs(of)f(Mathematics)h(and)f(its)f(Applications.)i(Cambridge)f(Uni)n
(v)o(ersity)h(Press,)e(2009.)28 b(3)p 0 TeXcolorgray
-2548 w Fw(105)p 0 TeXcolorgray 0 TeXcolorgray 37 498
a Fs([3])p 0 TeXcolorgray 42 w(V)-10 b(.)27 b(Boppana,)k(S.)c(Rajan,)j
(K.)d(T)-6 b(akayama,)30 b(and)f(M.)e(Fujita.)54 b(Model)29
b(checking)g(based)g(on)f(sequential)p 0 TeXcolorgray
-3104 w Fw(106)p 0 TeXcolorgray 166 590 a Fs(atpg.)k(In)20
b Fa(Computer)h(Aided)f(V)-8 b(eri\002cation,)21 b(Pr)m(oc.)e(11th)i
(International)g(Confer)m(ence)p Fs(,)h(Lecture)e(Notes)h(in)p
0 TeXcolorgray -3105 w Fw(107)p 0 TeXcolorgray 166 681
a Fs(Comput.)e(Sci.,)f(pages)i(418\226430.)g(Springer)o(-V)-8
b(erlag,)18 b(1999.)29 b(2)p 0 TeXcolorgray -1981 w Fw(108)p
0 TeXcolorgray 0 TeXcolorgray 37 805 a Fs([4])p 0 TeXcolorgray
42 w(R.)16 b(M.)h(Capocelli,)h(L.)e(Gar)o(gano,)h(and)h(U.)e(V)-8
b(accaro.)24 b(On)17 b(the)g(characterization)h(of)f(statistically)f
(synchro-)p 0 TeXcolorgray -3103 w Fw(109)p 0 TeXcolorgray
166 897 a Fs(nizable)29 b(v)n(ariable-length)h(codes.)59
b Fa(IEEE)28 b(T)l(r)o(ansactions)h(on)g(Information)h(Theory)p
Fs(,)h(34\(4\):817\226825,)p 0 TeXcolorgray -3102 w Fw(110)p
0 TeXcolorgray 166 988 a Fs(1988.)d(3)p 0 TeXcolorgray
-550 w Fw(111)p 0 TeXcolorgray 0 TeXcolorgray 37 1113
a Fs([5])p 0 TeXcolorgray 42 w(Y)-10 b(.-B.)18 b(Chen)g(and)h(D.)f(J.)g
(Ierardi.)25 b(The)19 b(comple)o(xity)g(of)f(obli)n(vious)i(plans)f
(for)f(orienting)h(and)g(distinguish-)p 0 TeXcolorgray
-3104 w Fw(112)p 0 TeXcolorgray 166 1204 a Fs(ing)g(polygonal)i(parts.)
27 b Fa(Algoritmica)p Fs(,)18 b(14:367\226397,)j(1995.)28
b(4)p 0 TeXcolorgray -1961 w Fw(113)p 0 TeXcolorgray
0 TeXcolorgray 37 1328 a Fs([6])p 0 TeXcolorgray 42 w(H.)g(Cho,)j(S.-W)
-7 b(.)26 b(Jeong,)32 b(F)-6 b(.)28 b(Somenzi,)i(and)f(C.)f(Pixle)o(y)
-5 b(.)57 b(Synchronizing)30 b(sequences)h(and)e(symbolic)p
0 TeXcolorgray -3104 w Fw(114)p 0 TeXcolorgray 166 1420
a Fs(tra)o(v)o(ersal)18 b(techniques)j(in)d(test)h(generation.)28
b Fa(J)n(.)18 b(Electr)m(onic)h(T)-7 b(esting)p Fs(,)19
b(4:19\22631,)h(1993.)28 b(2)p 0 TeXcolorgray -2650 w
Fw(115)p 0 TeXcolorgray 0 TeXcolorgray 37 1544 a Fs([7])p
0 TeXcolorgray 42 w(D.)19 b(Eppstein.)28 b(Reset)19 b(sequences)i(for)e
(monotonic)i(automata.)28 b Fa(SIAM)20 b(J)n(.)f(Comput.)p
Fs(,)g(19:500\226510,)j(1990.)p 0 TeXcolorgray -3104
w Fw(116)p 0 TeXcolorgray 166 1636 a Fs(4)p 0 TeXcolorgray
-355 w Fw(117)p 0 TeXcolorgray 0 TeXcolorgray 37 1760
a Fs([8])p 0 TeXcolorgray 42 w(A.)c(Gill.)26 b(State-identi\002cation)
18 b(e)o(xperiments)i(in)f(\002nite)f(automata.)28 b
Fa(Inform.)19 b(Contr)m(ol)p Fs(,)f(4\(2-3\):132\226154,)p
0 TeXcolorgray -3102 w Fw(118)p 0 TeXcolorgray 166 1852
a Fs(1961.)28 b(2)p 0 TeXcolorgray -550 w Fw(119)p 0
TeXcolorgray 0 TeXcolorgray 37 1976 a Fs([9])p 0 TeXcolorgray
42 w(S.)17 b(Ginsb)o(ur)o(g.)26 b(On)18 b(the)g(length)h(of)g(the)f
(smallest)g(uniform)h(e)o(xperiment)g(which)f(distinguishes)i(the)e
(termi-)p 0 TeXcolorgray -3105 w Fw(120)p 0 TeXcolorgray
166 2067 a Fs(nal)h(states)g(of)g(a)f(machine.)28 b Fa(J)n(.)19
b(Assoc.)g(Comput.)g(Mac)o(h.)p Fs(,)g(5:266\226280,)i(1958.)28
b(2)p 0 TeXcolorgray -2413 w Fw(121)p 0 TeXcolorgray
0 TeXcolorgray 0 2192 a Fs([10])p 0 TeXcolorgray 42 w(K.)18
b(Goldber)o(g.)28 b(Orienting)19 b(polygonal)h(parts)f(without)g
(sensors.)28 b Fa(Algorithmica)p Fs(,)19 b(10:201\226225,)i(1993.)28
b(4)p 0 TeXcolorgray -3093 w Fw(122)p 0 TeXcolorgray
0 TeXcolorgray 0 2316 a Fs([11])p 0 TeXcolorgray 42 w(F)-6
b(.)17 b(C.)h(Hennie.)26 b(F)o(ault)18 b(detecting)h(e)o(xperiments)h
(for)e(sequential)h(circuits.)26 b(In)18 b Fa(Switc)o(hing)h(Cir)m
(cuit)f(Theory)p 0 TeXcolorgray -3104 w Fw(123)p 0 TeXcolorgray
166 2408 a Fa(and)i(Lo)o(gical)f(Design,)g(Pr)m(oceedings)h(of)f(the)g
(Fifth)g(Annual)g(Symposium)p Fs(,)h(pages)g(95\226110.)h(IEEE)c
(Press,)p 0 TeXcolorgray -3105 w Fw(124)p 0 TeXcolorgray
166 2499 a Fs(1964.)28 b(2)p 0 TeXcolorgray -550 w Fw(125)p
0 TeXcolorgray 0 TeXcolorgray 0 2624 a Fs([12])p 0 TeXcolorgray
42 w(E.)23 b(F)-6 b(.)23 b(Moore.)43 b(Gedank)o(en)26
b(e)o(xperiments)f(on)f(sequential)h(machines.)43 b(In)24
b(C.)f(E.)g(Shannon)i(and)g(J.)e(Mc-)p 0 TeXcolorgray
-3104 w Fw(126)p 0 TeXcolorgray 166 2715 a Fs(Carthy)-5
b(,)19 b(editors,)f Fa(A)o(utomata)h(Studies)p Fs(,)g(pages)h
(129\226153.)h(Princeton)e(Uni)n(v)o(ersty)g(Press,)f(1956.)29
b(2)p 0 TeXcolorgray -2886 w Fw(127)p 0 TeXcolorgray
0 TeXcolorgray 0 2839 a Fs([13])p 0 TeXcolorgray 42 w(B.)17
b(K.)g(Natarajan.)25 b(An)18 b(algorithmic)g(approach)i(to)d(the)h
(automated)h(design)g(of)f(parts)g(orienters.)24 b(In)18
b Fa(Pr)m(oc.)p 0 TeXcolorgray -3105 w Fw(128)p 0 TeXcolorgray
166 2931 a Fa(27th)i(Annual)f(Symp.)g(F)-8 b(oundations)21
b(Comput.)e(Sci.)p Fs(,)f(pages)i(132\226142.)h(IEEE)c(Press,)i(1986.)
28 b(4)p 0 TeXcolorgray -2809 w Fw(129)p 0 TeXcolorgray
0 TeXcolorgray 0 3055 a Fs([14])p 0 TeXcolorgray 42 w(B.)f(K.)h
(Natarajan.)56 b(Some)28 b(paradigms)h(for)f(the)h(automated)g(design)g
(of)f(parts)g(feeders.)56 b Fa(Internat.)29 b(J)n(.)p
0 TeXcolorgray -3105 w Fw(130)p 0 TeXcolorgray 166 3147
a Fa(Robotics)19 b(Resear)m(c)o(h)p Fs(,)h(8\(6\):89\226109,)g(1989.)28
b(4)p 0 TeXcolorgray -1548 w Fw(131)p 0 TeXcolorgray
0 TeXcolorgray 0 3271 a Fs([15])p 0 TeXcolorgray 42 w(S.)c(Sandber)o
(g.)45 b(Homing)25 b(and)h(synchronizing)g(sequences.)47
b(In)25 b(M.)f(Bro)o(y)-5 b(,)26 b(B.)e(Jonsson,)j(J.-P)-8
b(.)23 b(Katoen,)p 0 TeXcolorgray -3104 w Fw(132)p 0
TeXcolorgray 166 3363 a Fs(M.)k(Leuck)o(er)m(,)j(and)d(A.)g(Pretschner)
m(,)i(editors,)g Fa(Model-Based)f(T)-7 b(esting)27 b(of)g(Reactive)g
(Systems)p Fs(,)i(v)o(olume)p 0 TeXcolorgray -3104 w
Fw(133)p 0 TeXcolorgray 166 3454 a Fs(3472)20 b(of)f
Fa(Lectur)m(e)g(Notes)g(in)g(Comput.)g(Sci.)p Fs(,)f(pages)i(5\22633.)g
(Springer)o(-V)-8 b(erlag,)18 b(2005.)28 b(3)p 0 TeXcolorgray
-2619 w Fw(134)p 0 TeXcolorgray 0 TeXcolorgray 0 3578
a Fs([16])p 0 TeXcolorgray 42 w(J.)244 3561 y(\020)231
3578 y(Cern)6 b(\264)-31 b(y.)26 b(Pozn)t(\264)-29 b(amka)19
b(k)f(homog)t(\264)-29 b(enn)o(ym)20 b(eksperimentom)g(s)e(k)o(one)t
(\020)-29 b(cn)6 b(\264)-31 b(ymi)20 b(automatami.)25
b Fa(Matematic)o(k)o(o-)p 0 TeXcolorgray -3104 w Fw(135)p
0 TeXcolorgray 166 3670 a Fa(fyzikalny)468 3653 y(\020)450
3670 y(Casopis)20 b(Slo)o(vensk)o(ej)g(Akad)t(\264)-29
b(emie)20 b(V)-6 b(ied)p Fs(,)18 b(14\(3\):208\226216,)k(1964.)28
b(in)19 b(Slo)o(v)n(ak.)27 b(2)p 0 TeXcolorgray -2717
w Fw(136)p 0 TeXcolorgray 0 TeXcolorgray 0 3794 a Fs([17])p
0 TeXcolorgray 42 w(M.)d(V)-10 b(olk)o(o)o(v)-5 b(.)46
b(Synchronizing)25 b(automata)g(and)g(the)1563 3777 y(\020)1551
3794 y(Cern)6 b(\264)-31 b(y)24 b(conjecture.)45 b(In)24
b(C.)g(Mart)n(\264)-23 b(\021n-V)l(ide,)25 b(F)-6 b(.)23
b(Otto,)p 0 TeXcolorgray -3105 w Fw(137)p 0 TeXcolorgray
166 3886 a Fs(and)j(H.)f(Fernau,)h(editors,)h Fa(Langua)o(g)o(e)g(and)f
(A)o(utomata)g(Theory)f(and)h(Applications)p Fs(,)h(v)o(olume)f(5196)h
(of)p 0 TeXcolorgray -3105 w Fw(138)p 0 TeXcolorgray
166 3977 a Fa(Lectur)m(e)19 b(Notes)g(in)g(Comput.)g(Sci.)p
Fs(,)f(pages)i(11\22627.)g(Springer)o(-V)-8 b(erlag,)18
b(2008.)28 b(4)p 0 TeXcolorgray -2407 w Fw(139)p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 6 6
TeXDict begin 6 5 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 1330 562 a Fx(Index)p 0 TeXcolorgray
0 763 a Fq(automaton)p 0 TeXcolorgray -505 w Fw(140)p
0 TeXcolorgray 166 863 a Fq(synchronizing,)17 b(1)p 0
TeXcolorgray -872 w Fw(141)p 0 TeXcolorgray 0 1045 a
Fq(pre\002x)i(code,)h(2)p 0 TeXcolorgray -607 w Fw(142)p
0 TeXcolorgray 166 1145 a Fq(maximal,)f(3)p 0 TeXcolorgray
-692 w Fw(143)p 0 TeXcolorgray 166 1245 a Fq(synchronized,)e(3)p
0 TeXcolorgray -844 w Fw(144)p 0 TeXcolorgray 0 1427
a Fq(reset)j(w)o(ord,)g(1)p 0 TeXcolorgray -583 w Fw(145)p
0 TeXcolorgray 0 1610 a Fq(synchronizing)d(w)o(ord)j(of)g(a)g(code,)f
(3)p 0 TeXcolorgray -1221 w Fw(146)p 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 1456 5038
a Fq(6)p 0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
